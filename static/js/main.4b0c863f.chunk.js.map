{"version":3,"sources":["actions/authedUser.js","components/Navigation.js","helpers/_DATA.js","helpers/api.js","actions/questions.js","helpers/theme.js","components/Option.js","views/Question.js","views/CurrentQuestion.js","views/NewQuestion.js","views/Leaderboard.js","views/Login.js","actions/users.js","actions/shared.js","views/App.js","serviceWorker.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/index.js","index.js"],"names":["SET_AUTHED_USER","setAuthedUser","id","arguments","length","undefined","type","Navigation","handleLogoutClick","dispatch","_this","props","_this2","this","_this$props","classes","authedUser","avatarURL","users","react_default","a","createElement","className","root","index_es","position","navBar","react_router_dom","to","replace","menuButton","color","grow","alt","src","avatar","onClick","react_fontawesome_index_es","icon","faSignOutAlt","Component","StyledNavigation","withStyles","theme","marginLeft","marginRight","textDecoration","maxHeight","float","flexGrow","connect","_ref","catherinegregory","name","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","edwincarr","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","danoliver","author","timestamp","optionOne","votes","text","optionTwo","saveQuestionAnswer","_ref3","_ref2","qid","answer","Promise","res","rej","setTimeout","Object","objectSpread","defineProperty","concat","_saveQuestionAnswer","RECEIVE_QUESTIONS","RETRIEVE_NEW_QUESTION","SAVE_QUESTION_ANSWER","handleRetrieveNewQuestion","retrieveNewQuestion","handleQuestionAnswer","setQuestionAnswer","catch","e","console","warn","createMuiTheme","palette","overrides","MuiToolbar","regular","&&","minHeight","height","MuiBottomNavigation","bottom","left","right","typography","useNextVariants","styles","main","flex","width","padding","choseThisOption","backgroundColor","secondary","optionButton","textTransform","optionButtonVoted","chartContainer","chart","maxWidth","Option","renderPieChart","opposite","option","votesThisOption","votesOppositeOption","item","xs","align","dist_default","data","title","value","primary","animate","label","labelStyle","fill","contrastText","totalValue","_this$props2","includes","hasVoted","container","classNames","disabled","answerContainer","variant","StyledOption","navHeight","questionContainer","marginBottom","Question","match","params","question","justify","alignItems","_questions$question","react","components_Option","assign","showLabels","faArrowLeft","faUser","faArrowRight","StyledQuestion","CurrentQuestion","componentDidMount","currentQuestion","react_router","NewQuestion","Leaderboard","Login","handleLoginClick","handleLogin","renderUser","user","key","spacing","entries","map","slicedToArray","StyledLogin","margin","RECEIVE_USERS","handleInitialData","all","then","receiveUsers","receiveQuestions","App","loggedIn","CssBaseline_default","components_Navigation","exact","path","component","views_Login","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","error","combineReducers","action","questionArray","push","sort","b","composeWithDevTools","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","es","views_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4b0c863f.chunk.js","sourcesContent":["export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id = null) {\r\n    return {\r\n        type: SET_AUTHED_USER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleLogin(id) {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser(id))\r\n    }\r\n}\r\n\r\nexport function handleLogout() {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser())\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar, Avatar } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { handleLogout } from '../actions/authedUser'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = theme => ({\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        maxHeight: '100%',\r\n    },\r\n    avatar: {\r\n        maxHeight: '100%',\r\n        float: 'right',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n})\r\n\r\n/**\r\n * This element represents the top navigation of the application.\r\n *\r\n * @class Navigation\r\n * @extends {Component}\r\n */\r\nclass Navigation extends Component {\r\n    handleLogoutClick = () => {\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(handleLogout())\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser, users } = this.props\r\n\r\n        const avatarURL = users.users[authedUser.id].avatarURL\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar className={classes.navBar}>\r\n                            <Link to=\"/\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Would You Rather?</Button>\r\n                            </Link>\r\n                            <Link to=\"/new\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">New Question</Button>\r\n                            </Link>\r\n                            <Link to=\"/leaderboard\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Leaderboard</Button>\r\n                            </Link>\r\n                            <div className={classes.grow} />\r\n                            <Link to=\"/profile\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">{authedUser.id}</Button>\r\n                                <Avatar alt=\"avatar\" src={avatarURL} className={classes.avatar} />\r\n                            </Link>\r\n                            <Button color=\"inherit\" onClick={() => this.handleLogoutClick()}>\r\n                                <FontAwesomeIcon icon={faSignOutAlt} />\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users, authedUser }) {\r\n    return {\r\n        users,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nconst StyledNavigation = withStyles(styles)(Navigation)\r\n\r\nexport default connect(mapStateToProps)(StyledNavigation)\r\n","let users = {\r\n    catherinegregory: {\r\n        id: 'catherinegregory',\r\n        name: 'Catherine Gregory',\r\n        avatarURL: 'https://randomuser.me/api/portraits/women/82.jpg',\r\n        answers: {\r\n            '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n            am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n            loxhs1bqm25b708cmbf3g: 'optionTwo',\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\r\n    },\r\n    edwincarr: {\r\n        id: 'edwincarr',\r\n        name: 'Edwin Carr',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/36.jpg',\r\n        answers: {\r\n            vthrdm985a262al8qx3do: 'optionOne',\r\n            xj352vofupe1dqz9emx13r: 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    danoliver: {\r\n        id: 'danoliver',\r\n        name: 'Dan Oliver',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/24.jpg',\r\n        answers: {\r\n            xj352vofupe1dqz9emx13r: 'optionOne',\r\n            vthrdm985a262al8qx3do: 'optionTwo',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    },\r\n}\r\n\r\nlet questions = {\r\n    '8xf0y6ziyjabvozdd253nd': {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'catherinegregory',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['catherinegregory'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory',\r\n        },\r\n    },\r\n    '6ni6ok3ym7mf1p33lnez': {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'danoliver',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver', 'catherinegregory'],\r\n            text: 'become a supervillain',\r\n        },\r\n    },\r\n    am8ehyc8byjqgar0jgpub9: {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'catherinegregory',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be telepathic',\r\n        },\r\n    },\r\n    loxhs1bqm25b708cmbf3g: {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'edwincarr',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be a back-end developer',\r\n        },\r\n    },\r\n    vthrdm985a262al8qx3do: {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'edwincarr',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['edwincarr'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver'],\r\n            text: 'have your best friend find $500',\r\n        },\r\n    },\r\n    xj352vofupe1dqz9emx13r: {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'danoliver',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['danoliver'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['edwincarr'],\r\n            text: 'write Swift',\r\n        },\r\n    },\r\n}\r\n\r\nfunction generateUID() {\r\n    return (\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15) +\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15)\r\n    )\r\n}\r\n\r\nexport function _getUsers() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...users }), 1000)\r\n    })\r\n}\r\n\r\nexport function _getQuestions() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...questions }), 1000)\r\n    })\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n        id: generateUID(),\r\n        timestamp: Date.now(),\r\n        author,\r\n        optionOne: {\r\n            votes: [],\r\n            text: optionOneText,\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: optionTwoText,\r\n        },\r\n    }\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n    return new Promise((res, rej) => {\r\n        const authedUser = question.author\r\n        const formattedQuestion = formatQuestion(question)\r\n\r\n        setTimeout(() => {\r\n            questions = {\r\n                ...questions,\r\n                [formattedQuestion.id]: formattedQuestion,\r\n            }\r\n\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n                },\r\n            }\r\n\r\n            res(formattedQuestion)\r\n        }, 1000)\r\n    })\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    answers: {\r\n                        ...users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n\r\n            questions = {\r\n                ...questions,\r\n                [qid]: {\r\n                    ...questions[qid],\r\n                    [answer]: {\r\n                        ...questions[qid][answer],\r\n                        votes: questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n\r\n            res()\r\n        }, 500)\r\n    })\r\n}\r\n","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA.js'\r\n\r\nexport function getInitialData() {\r\n    return Promise.all([_getUsers(), _getQuestions()]).then(([users, questions]) => ({\r\n        users,\r\n        questions,\r\n    }))\r\n}\r\n\r\nexport function saveQuestion(question) {\r\n    return _saveQuestion(question)\r\n}\r\n\r\nexport function saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return _saveQuestionAnswer({ authedUser, qid, answer })\r\n}\r\n","import { saveQuestionAnswer } from '../helpers/api'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const RETRIEVE_NEW_QUESTION = 'RETRIEVE_NEW_QUESTION'\r\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER'\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport function retrieveNewQuestion(authedUser) {\r\n    return {\r\n        type: RETRIEVE_NEW_QUESTION,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport function handleRetrieveNewQuestion(authedUser) {\r\n    return dispatch => {\r\n        dispatch(retrieveNewQuestion(authedUser))\r\n    }\r\n}\r\n\r\nexport function setQuestionAnswer({ authedUser, qid, answer }) {\r\n    return {\r\n        type: SAVE_QUESTION_ANSWER,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n    }\r\n}\r\n\r\nexport function handleQuestionAnswer({ authedUser, qid, answer }) {\r\n    return dispatch => {\r\n        dispatch(setQuestionAnswer({ authedUser: authedUser.id, qid, answer }))\r\n\r\n        return saveQuestionAnswer({ authedUser: authedUser.id, qid, answer }).catch(e => {\r\n            console.warn('Error in handleQuestionAnswer: ', e)\r\n        })\r\n    }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport const navHeight = 56\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    overrides: {\r\n        MuiToolbar: {\r\n            regular: {\r\n                '&&': {\r\n                    minHeight: `${navHeight}px`,\r\n                    height: `${navHeight}px`,\r\n                    maxHeight: `${navHeight}px`,\r\n                },\r\n            },\r\n        },\r\n        MuiBottomNavigation: {\r\n            root: {\r\n                minHeight: `${navHeight}px`,\r\n                height: `${navHeight}px`,\r\n                maxHeight: `${navHeight}px`,\r\n                position: 'absolute',\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n            },\r\n        },\r\n    },\r\n    typography: { useNextVariants: true },\r\n})\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion } from '../actions/questions'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport PieChart from 'react-minimal-pie-chart'\r\nimport { theme } from '../helpers/theme'\r\n\r\nconst styles = {\r\n    main: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n        padding: '5px',\r\n    },\r\n    choseThisOption: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    optionButton: {\r\n        height: '100%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    optionButtonVoted: {\r\n        height: '50%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    chartContainer: {\r\n        maxHeight: '50%',\r\n    },\r\n    chart: {\r\n        // Limit the chart's width and height, otherwise the chart might go through the bottom of the viewport.\r\n        maxWidth: '20vh',\r\n    },\r\n}\r\n\r\nclass Option extends Component {\r\n    render() {\r\n        const {\r\n            classes,\r\n            authedUser,\r\n            text,\r\n            votes,\r\n            option,\r\n            handleQuestionAnswer,\r\n            opposite,\r\n        } = this.props\r\n\r\n        const choseThisOption = votes.includes(authedUser.id)\r\n        const hasVoted = opposite.votes.includes(authedUser.id) || choseThisOption\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                className={classNames(\r\n                    classes.main,\r\n                    choseThisOption ? classes.choseThisOption : null\r\n                )}\r\n            >\r\n                <Button\r\n                    className={hasVoted ? classes.optionButtonVoted : classes.optionButton}\r\n                    disabled={hasVoted}\r\n                    align=\"center\"\r\n                    onClick={() => handleQuestionAnswer(option)}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12} className={classes.answerContainer}>\r\n                            <Typography variant=\"h3\">{text}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Button>\r\n                {hasVoted ? this.renderPieChart() : null}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderPieChart = () => {\r\n        const { classes, authedUser, text, votes, option, opposite } = this.props\r\n        const votesThisOption = votes.length\r\n        const votesOppositeOption = opposite.votes.length\r\n        return (\r\n            <Grid item xs={12} className={classes.chartContainer} align=\"center\">\r\n                <PieChart\r\n                    className={classes.chart}\r\n                    data={[\r\n                        {\r\n                            title: 'This option',\r\n                            value: votesThisOption,\r\n                            color: theme.palette.primary.main,\r\n                        },\r\n                    ]}\r\n                    animate\r\n                    label\r\n                    labelStyle={{\r\n                        fill: theme.palette.primary.contrastText,\r\n                    }}\r\n                    totalValue={votesOppositeOption + votesThisOption}\r\n                />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledOption = withStyles(styles)(Option)\r\n\r\nexport default StyledOption\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion, handleQuestionAnswer } from '../actions/questions'\r\n\r\nimport Option from '../components/Option'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = {\r\n    main: {\r\n        // The height of the two navbars and the heading is 3xnavHeight\r\n        height: `calc(100% - ${navHeight * 3}px)`,\r\n    },\r\n    option: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n    },\r\n    questionContainer: {\r\n        width: '100%',\r\n        padding: '5px',\r\n        height: `${navHeight}px`,\r\n    },\r\n    icon: {\r\n        marginBottom: '5px',\r\n    },\r\n}\r\n\r\n/**\r\n * This view renders a question and its data.\r\n * The prop \"question\" is the ID of the question that should be rendered.\r\n *\r\n * @class Question\r\n * @extends {Component}\r\n */\r\nclass Question extends Component {\r\n    handleQuestionAnswer = option => {\r\n        const { dispatch, authedUser, match } = this.props\r\n        const { question } = match.params\r\n\r\n        dispatch(handleQuestionAnswer({ authedUser, qid: question, answer: option }))\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser, match } = this.props\r\n        const { question } = match.params\r\n        const { questions } = this.props.questions\r\n\r\n        if (!question) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography variant=\"h1\">Loading question...</Typography>\r\n                    <Typography variant=\"body1\">\r\n                        If this stays up long enough for you to read it, question {question}{' '}\r\n                        probably doesn't exist.\r\n                    </Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        const { id, author, optionOne, optionTwo } = questions[question]\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.questionContainer}>\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                        Would you rather...\r\n                    </Typography>\r\n                </div>\r\n                <Grid container className={classes.main}>\r\n                    <Option\r\n                        {...optionOne}\r\n                        option=\"optionOne\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionTwo}\r\n                    />\r\n                    <Option\r\n                        {...optionTwo}\r\n                        option=\"optionTwo\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionOne}\r\n                    />\r\n                </Grid>\r\n                <BottomNavigation showLabels>\r\n                    <BottomNavigationAction\r\n                        label=\"Previous\"\r\n                        icon={<FontAwesomeIcon icon={faArrowLeft} className={classes.icon} />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        label={author}\r\n                        icon={<FontAwesomeIcon icon={faUser} className={classes.icon} />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        label=\"Next\"\r\n                        icon={<FontAwesomeIcon icon={faArrowRight} className={classes.icon} />}\r\n                    />\r\n                </BottomNavigation>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n    }\r\n}\r\n\r\nconst StyledQuestion = withStyles(styles)(Question)\r\n\r\nexport default connect(mapStateToProps)(StyledQuestion)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion } from '../actions/questions'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Question from '../views/Question'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\n/**\r\n * This helper view retrieves the current logged in user's question.\r\n * This question should be the first unanswered one.\r\n *\r\n * @class CurrentQuestion\r\n * @extends {Component}\r\n */\r\nclass CurrentQuestion extends Component {\r\n    componentDidMount = () => {\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            this.retrieveNewQuestion()\r\n        }\r\n    }\r\n\r\n    retrieveNewQuestion = () => {\r\n        const { dispatch, authedUser } = this.props\r\n\r\n        dispatch(handleRetrieveNewQuestion(authedUser))\r\n    }\r\n\r\n    render() {\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Typography variant=\"h1\">Loading question...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return <Redirect to={`questions/${currentQuestion}`} />\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CurrentQuestion)\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NewQuestion extends Component {\r\n    render() {\r\n        return <div>NewQuestion</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Leaderboard extends Component {\r\n    render() {\r\n        return <div>Leaderboard</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Button, Avatar, Grid } from '@material-ui/core'\r\n\r\nimport { handleLogin } from '../actions/authedUser'\r\n\r\nconst styles = {\r\n    main: {\r\n        height: '100vh',\r\n        maxWidth: '100vw',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n}\r\n\r\n/**\r\n * This container allows the user to select from a list of users.\r\n * This selection will be stored in the store.\r\n *\r\n * @class Login\r\n * @extends {Component}\r\n */\r\nclass Login extends Component {\r\n    handleLoginClick = id => {\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(handleLogin(id))\r\n    }\r\n\r\n    render() {\r\n        const { users } = this.props.users\r\n        const { classes } = this.props\r\n\r\n        if (!users) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading users...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.main}\r\n                spacing={32}\r\n            >\r\n                {Object.entries(users).map(([id, user]) => this.renderUser(user))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderUser = user => {\r\n        const { id } = user\r\n        const { classes } = this.props\r\n        return (\r\n            <Grid item key={id}>\r\n                <Button onClick={() => this.handleLoginClick(id)}>\r\n                    <Avatar alt={user.name} src={user.avatarURL} className={classes.avatar} />\r\n                    <Typography align=\"center\">{user.name}</Typography>\r\n                </Button>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nconst StyledLogin = withStyles(styles)(Login)\r\n\r\nexport default connect(mapStateToProps)(StyledLogin)\r\n","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n    }\r\n}\r\n","import { getInitialData } from '../helpers/api'\r\nimport { receiveUsers } from '../actions/users'\r\nimport { receiveQuestions } from '../actions/questions'\r\n\r\n/**\r\n * Dispatched when the app loads.\r\n * Fetches all of the question and user data.\r\n *\r\n * @export\r\n * @returns {Promise} This resolves when the user data is retrieved.\r\n */\r\nexport function handleInitialData() {\r\n    return dispatch => {\r\n        return getInitialData().then(({ users, questions }) => {\r\n            dispatch(receiveUsers(users))\r\n            dispatch(receiveQuestions(questions))\r\n        })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Navigation from '../components/Navigation'\r\n\r\nimport Question from './Question'\r\nimport CurrentQuestion from './CurrentQuestion'\r\nimport NewQuestion from './NewQuestion'\r\nimport Leaderboard from './Leaderboard'\r\nimport Login from './Login'\r\n\r\nimport { handleInitialData } from '../actions/shared'\r\nimport { theme } from '../helpers/theme'\r\n\r\n/**\r\n * The main app that contains the entire page.\r\n * This also contains the theme provider.\r\n * If the user is not logged in, we'll show the login page.\r\n *\r\n * @class App\r\n * @extends {Component}\r\n */\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(handleInitialData())\r\n    }\r\n\r\n    render() {\r\n        const { authedUser } = this.props\r\n        const loggedIn = Object.entries(authedUser).length !== 0 && authedUser.id\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                {loggedIn ? (\r\n                    <Router>\r\n                        <Navigation />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={CurrentQuestion} />\r\n                            <Route path=\"/new\" component={NewQuestion} />\r\n                            <Route path=\"/leaderboard\" component={Leaderboard} />\r\n                            <Route path=\"/questions/:question\" component={Question} />\r\n                        </Switch>\r\n                    </Router>\r\n                ) : (\r\n                    <Login />\r\n                )}\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\r\n\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\nimport questions from './questions'\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n})\r\n","import { SET_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RECEIVE_USERS } from '../actions/users'\r\nimport { SAVE_QUESTION_ANSWER } from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n            // This is basically stolen from the _DATA.js code\r\n            const users = {\r\n                ...state.users,\r\n                [authedUser]: {\r\n                    ...state.users[authedUser],\r\n                    answers: {\r\n                        ...state.users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                ...users,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    RECEIVE_QUESTIONS,\r\n    RETRIEVE_NEW_QUESTION,\r\n    SAVE_QUESTION_ANSWER,\r\n} from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            let questionArray = []\r\n            for (const question in action.questions) {\r\n                questionArray.push(action.questions[question])\r\n            }\r\n            questionArray.sort((a, b) => {\r\n                return a.timestamp - b.timestamp\r\n            })\r\n            return {\r\n                ...state,\r\n                questions: questionArray,\r\n            }\r\n        case RETRIEVE_NEW_QUESTION:\r\n            for (const key in state.questions) {\r\n                const question = state.questions[key]\r\n                // Concatenate the two arrays to get all votes of the question\r\n                const votes = question.optionOne.votes.concat(question.optionTwo.votes)\r\n                // Find the first question where the user hasn't voted\r\n                let hasVoted = false\r\n                for (const key in votes) {\r\n                    if (votes[key] === action.authedUser.id) {\r\n                        hasVoted = true\r\n                    }\r\n                }\r\n                if (!hasVoted) {\r\n                    return {\r\n                        ...state,\r\n                        currentQuestion: key,\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                currentQuestion: null,\r\n            }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n\r\n            // This is basically stolen from the _DATA.js code\r\n            const questions = {\r\n                ...state.questions,\r\n                [qid]: {\r\n                    ...state.questions[qid],\r\n                    [answer]: {\r\n                        ...state.questions[qid][answer],\r\n                        votes: state.questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                questions: { ...questions },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default composeWithDevTools(applyMiddleware(thunk))\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './views/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}