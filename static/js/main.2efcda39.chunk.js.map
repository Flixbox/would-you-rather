{"version":3,"sources":["actions/filteredQuestions.js","actions/filter.js","actions/authedUser.js","components/Navigation.js","helpers/_DATA.js","helpers/api.js","actions/questions.js","helpers/theme.js","components/Option.js","views/Question.js","views/CurrentQuestion.js","views/NewQuestion.js","views/Leaderboard.js","views/Login.js","actions/users.js","actions/shared.js","views/App.js","serviceWorker.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","reducers/filteredQuestions.js","reducers/filter.js","middleware/index.js","index.js"],"names":["RETRIEVE_FILTERED_QUESTIONS","handleRetrieveFilteredQuestions","questions","filter","authedUser","dispatch","type","retrieveFilteredQuestions","SET_FILTER","handleFilterChange","_ref","_ref$id","id","arguments","length","undefined","setFilter","SET_AUTHED_USER","setAuthedUser","Navigation","state","anchorEl","filterTexts","handleLogoutClick","_this","props","handleClick","event","setState","currentTarget","handleClose","_this$props","history","push","_this2","this","_this$props2","classes","users","avatarURL","react_default","a","createElement","className","root","index_es","position","navBar","react_router_dom","to","replace","menuButton","color","grow","aria-owns","aria-haspopup","onClick","open","Boolean","onClose","map","text","key","disabled","hint","variant","gutterBottom","alt","src","avatar","react_fontawesome_index_es","icon","faSignOutAlt","Component","StyledNavigation","withStyles","theme","marginLeft","marginRight","textDecoration","maxHeight","float","flexGrow","maxWidth","whiteSpace","withRouter","connect","catherinegregory","name","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","edwincarr","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","danoliver","author","timestamp","optionOne","votes","optionTwo","_saveQuestion","question","Promise","res","rej","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","Object","objectSpread","defineProperty","concat","saveQuestionAnswer","_ref3","_ref2","qid","answer","_saveQuestionAnswer","RECEIVE_QUESTIONS","SAVE_QUESTION_ANSWER","receiveQuestions","handleQuestionAnswer","setQuestionAnswer","catch","e","console","warn","handleNewQuestion","then","createMuiTheme","palette","overrides","MuiToolbar","regular","&&","minHeight","height","MuiBottomNavigation","bottom","left","right","typography","useNextVariants","styles","main","flex","width","padding","choseThisOption","backgroundColor","secondary","optionButton","textTransform","optionButtonVoted","chartContainer","chart","Option","renderPieChart","opposite","votesThisOption","totalVotes","percent","round","item","xs","align","dist_default","data","title","value","primary","animate","label","labelStyle","fill","contrastText","totalValue","option","includes","hasVoted","container","classNames","answerContainer","StyledOption","navHeight","questionContainer","marginBottom","Question","match","params","getPreviousQuestion","filteredQuestions","currentId","indexOf","getNextQuestion","justify","alignItems","_questions$question","previousQuestion","nextQuestion","react","components_Option","assign","showLabels","component","Link","faArrowLeft","faArrowRight","StyledQuestion","CurrentQuestion","react_router","NewQuestion","updateOption","prevState","submit","_this$state","spacing","required","fullWidth","autoComplete","onChange","target","withRouterNewQuestion","StyledNewQuestion","margin","Leaderboard","renderListItem","user","getAnsweredQuestions","getAskedQuestions","getSortedUsers","sortedUsers","keys","sort","b","getUserScore","sum","Login","handleLoginClick","handleLogin","renderUser","entries","slicedToArray","StyledLogin","RECEIVE_USERS","handleInitialData","all","receiveUsers","App","loggedIn","CssBaseline_default","components_Navigation","exact","path","views_Login","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","error","combineReducers","action","sortedQuestions","toConsumableArray","composeWithDevTools","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","es","views_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2efcda39.chunk.js","sourcesContent":["export const RETRIEVE_FILTERED_QUESTIONS = 'RETRIEVE_FILTERED_QUESTIONS'\r\n\r\nexport function retrieveFilteredQuestions(questions, filter, authedUser) {\r\n    return {\r\n        type: RETRIEVE_FILTERED_QUESTIONS,\r\n        questions,\r\n        filter,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport function handleRetrieveFilteredQuestions(questions, filter, authedUser) {\r\n    return dispatch => {\r\n        dispatch(retrieveFilteredQuestions(questions, filter, authedUser))\r\n    }\r\n}\r\n","import { handleRetrieveFilteredQuestions } from './filteredQuestions'\r\n\r\nexport const SET_FILTER = 'SET_FILTER'\r\n\r\nexport function setFilter(id = 1) {\r\n    return {\r\n        type: SET_FILTER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleFilterChange({ id = 1, questions, authedUser }) {\r\n    return dispatch => {\r\n        dispatch(setFilter(id))\r\n        dispatch(handleRetrieveFilteredQuestions(questions, id, authedUser))\r\n    }\r\n}\r\n","import { handleFilterChange } from './filter'\r\n\r\nexport const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id = null) {\r\n    return {\r\n        type: SET_AUTHED_USER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleLogin(id, questions) {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser(id))\r\n        dispatch(handleFilterChange({ questions, authedUser: id }))\r\n    }\r\n}\r\n\r\nexport function handleLogout() {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser())\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar, Avatar, Menu, MenuItem, Typography } from '@material-ui/core'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { handleLogout } from '../actions/authedUser'\r\nimport { handleFilterChange } from '../actions/filter'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = theme => ({\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        maxHeight: '100%',\r\n    },\r\n    avatar: {\r\n        maxHeight: '100%',\r\n        float: 'right',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    hint: {\r\n        maxWidth: '100%',\r\n        whiteSpace: 'pre-wrap',\r\n    },\r\n})\r\n\r\n/**\r\n * This element represents the top navigation of the application.\r\n *\r\n * @class Navigation\r\n * @extends {Component}\r\n */\r\nclass Navigation extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    }\r\n\r\n    filterTexts = ['All questions', 'Unanswered', 'Answered']\r\n\r\n    /**\r\n     * This function is triggered when the logout button is clicked.\r\n     *\r\n     * @memberof Navigation\r\n     */\r\n    handleLogoutClick = () => {\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(handleLogout())\r\n    }\r\n\r\n    /**\r\n     * This function is triggered when the filter button is clicked.\r\n     *\r\n     * @memberof Navigation\r\n     */\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget })\r\n    }\r\n\r\n    /**\r\n     * This function is triggered when the filter button is closed.\r\n     *\r\n     * @memberof Navigation\r\n     */\r\n    handleClose = id => {\r\n        const { dispatch, history, authedUser } = this.props\r\n        const { questions } = this.props.questions\r\n        this.setState({ anchorEl: null })\r\n        // The parameter is an object if the user doesn't click an option.\r\n        if (!(typeof id === 'object')) {\r\n            dispatch(handleFilterChange({ id, questions, authedUser: authedUser.id }))\r\n        }\r\n\r\n        // Should we redirect after the filter has changed?\r\n        // I'd say no, since that's not the expected behaviour and the Navbar is global,\r\n        // so the user might change the filter in the leaderboard\r\n        // and suddenly be redirected to the question page.\r\n\r\n        // However, since the project wasn't accepted with this approach,\r\n        // Here's a simple redirect.\r\n        history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser, users, filter } = this.props\r\n        const { anchorEl } = this.state\r\n\r\n        const avatarURL = users[authedUser.id].avatarURL\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar className={classes.navBar}>\r\n                            <Link to=\"/\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Would You Rather?</Button>\r\n                            </Link>\r\n                            <Link to=\"/new\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">New Question</Button>\r\n                            </Link>\r\n                            <Link to=\"/leaderboard\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Leaderboard</Button>\r\n                            </Link>\r\n                            <div className={classes.grow} />\r\n                            <Button\r\n                                aria-owns={anchorEl ? 'filter-menu' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleClick}\r\n                                className={classes.menuButton}\r\n                            >\r\n                                {this.filterTexts[filter] || this.filterTexts[1]}\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"filter-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={this.handleClose}\r\n                            >\r\n                                {this.filterTexts.map((text, id) => (\r\n                                    <MenuItem onClick={() => this.handleClose(id)} key={text}>\r\n                                        {text}\r\n                                    </MenuItem>\r\n                                ))}\r\n                                <MenuItem disabled>\r\n                                    <Typography\r\n                                        className={classes.hint}\r\n                                        variant=\"body1\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Use this menu to change your navigation options. Note that\r\n                                        the currently selected question is not affected, only the\r\n                                        bottom navigation.\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                            <Link to=\"/\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">{authedUser.id}</Button>\r\n                                <Avatar alt=\"avatar\" src={avatarURL} className={classes.avatar} />\r\n                            </Link>\r\n                            <Button color=\"inherit\" onClick={() => this.handleLogoutClick()}>\r\n                                <FontAwesomeIcon icon={faSignOutAlt} />\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users, authedUser, filter, questions }) {\r\n    return {\r\n        users,\r\n        authedUser,\r\n        filter,\r\n        questions,\r\n    }\r\n}\r\n\r\nconst StyledNavigation = withStyles(styles)(Navigation)\r\n\r\nexport default withRouter(connect(mapStateToProps)(StyledNavigation))\r\n","let users = {\r\n    catherinegregory: {\r\n        id: 'catherinegregory',\r\n        name: 'Catherine Gregory',\r\n        avatarURL: 'https://randomuser.me/api/portraits/women/82.jpg',\r\n        answers: {\r\n            '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n            am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n            loxhs1bqm25b708cmbf3g: 'optionTwo',\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\r\n    },\r\n    edwincarr: {\r\n        id: 'edwincarr',\r\n        name: 'Edwin Carr',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/36.jpg',\r\n        answers: {\r\n            vthrdm985a262al8qx3do: 'optionOne',\r\n            xj352vofupe1dqz9emx13r: 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    danoliver: {\r\n        id: 'danoliver',\r\n        name: 'Dan Oliver',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/24.jpg',\r\n        answers: {\r\n            xj352vofupe1dqz9emx13r: 'optionOne',\r\n            vthrdm985a262al8qx3do: 'optionTwo',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    },\r\n}\r\n\r\nlet questions = {\r\n    '8xf0y6ziyjabvozdd253nd': {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'catherinegregory',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['catherinegregory'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory',\r\n        },\r\n    },\r\n    '6ni6ok3ym7mf1p33lnez': {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'danoliver',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver', 'catherinegregory'],\r\n            text: 'become a supervillain',\r\n        },\r\n    },\r\n    am8ehyc8byjqgar0jgpub9: {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'catherinegregory',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be telepathic',\r\n        },\r\n    },\r\n    loxhs1bqm25b708cmbf3g: {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'edwincarr',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be a back-end developer',\r\n        },\r\n    },\r\n    vthrdm985a262al8qx3do: {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'edwincarr',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['edwincarr'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver'],\r\n            text: 'have your best friend find $500',\r\n        },\r\n    },\r\n    xj352vofupe1dqz9emx13r: {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'danoliver',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['danoliver'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['edwincarr'],\r\n            text: 'write Swift',\r\n        },\r\n    },\r\n}\r\n\r\nfunction generateUID() {\r\n    return (\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15) +\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15)\r\n    )\r\n}\r\n\r\nexport function _getUsers() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...users }), 1000)\r\n    })\r\n}\r\n\r\nexport function _getQuestions() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...questions }), 1000)\r\n    })\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n        id: generateUID(),\r\n        timestamp: Date.now(),\r\n        author,\r\n        optionOne: {\r\n            votes: [],\r\n            text: optionOneText,\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: optionTwoText,\r\n        },\r\n    }\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n    return new Promise((res, rej) => {\r\n        const authedUser = question.author\r\n        const formattedQuestion = formatQuestion(question)\r\n\r\n        setTimeout(() => {\r\n            questions = {\r\n                ...questions,\r\n                [formattedQuestion.id]: formattedQuestion,\r\n            }\r\n\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n                },\r\n            }\r\n\r\n            res(formattedQuestion)\r\n        }, 1000)\r\n    })\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    answers: {\r\n                        ...users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n\r\n            questions = {\r\n                ...questions,\r\n                [qid]: {\r\n                    ...questions[qid],\r\n                    [answer]: {\r\n                        ...questions[qid][answer],\r\n                        votes: questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n\r\n            res()\r\n        }, 500)\r\n    })\r\n}\r\n","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA.js'\r\n\r\nexport function getInitialData() {\r\n    return Promise.all([_getUsers(), _getQuestions()]).then(([users, questions]) => ({\r\n        users,\r\n        questions,\r\n    }))\r\n}\r\n\r\nexport function saveQuestion(question) {\r\n    return _saveQuestion(question)\r\n}\r\n\r\nexport function saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return _saveQuestionAnswer({ authedUser, qid, answer })\r\n}\r\n","import { saveQuestionAnswer, saveQuestion } from '../helpers/api'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER'\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport function setQuestionAnswer({ authedUser, qid, answer }) {\r\n    return {\r\n        type: SAVE_QUESTION_ANSWER,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n    }\r\n}\r\n\r\n/**\r\n * Executed when the user submits a new answer that should be saved.\r\n * The data is saved in the store and in the backend.\r\n *\r\n * @export\r\n * @param {Object} { authedUser, qid, answer } The currently logged in user,\r\n *                  the question's id and either \"optionOne\" or \"optionTwo\".\r\n * @returns Undefined\r\n */\r\nexport function handleQuestionAnswer({ authedUser, qid, answer }) {\r\n    return dispatch => {\r\n        dispatch(setQuestionAnswer({ authedUser: authedUser.id, qid, answer }))\r\n\r\n        return saveQuestionAnswer({ authedUser: authedUser.id, qid, answer }).catch(e => {\r\n            console.warn('Error in handleQuestionAnswer: ', e)\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Executed when the user submits a new question that should be saved.\r\n * The data is saved in the store and in the backend.\r\n *\r\n * @export\r\n * @param {Object} { optionOne, optionTwo, author } The question's data.\r\n * @returns Undefined\r\n */\r\nexport function handleNewQuestion({ optionOne, optionTwo, author }) {\r\n    return dispatch => {\r\n        return saveQuestion({ optionOneText: optionOne, optionTwoText: optionTwo, author })\r\n            .catch(e => {\r\n                console.warn('Error in handleNewQuestion: ', e)\r\n            })\r\n            .then(formattedQuestion => {\r\n                dispatch(receiveQuestions({ [formattedQuestion.id]: { ...formattedQuestion } }))\r\n            })\r\n    }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport const navHeight = 56\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    overrides: {\r\n        MuiToolbar: {\r\n            regular: {\r\n                '&&': {\r\n                    minHeight: `${navHeight}px`,\r\n                    height: `${navHeight}px`,\r\n                    maxHeight: `${navHeight}px`,\r\n                },\r\n            },\r\n        },\r\n        MuiBottomNavigation: {\r\n            root: {\r\n                minHeight: `${navHeight}px`,\r\n                height: `${navHeight}px`,\r\n                maxHeight: `${navHeight}px`,\r\n                position: 'absolute',\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n            },\r\n        },\r\n    },\r\n    typography: { useNextVariants: true },\r\n})\r\n","import React, { Component } from 'react'\r\n\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Button, Grid } from '@material-ui/core'\r\n\r\nimport PieChart from 'react-minimal-pie-chart'\r\nimport { theme } from '../helpers/theme'\r\n\r\nconst styles = {\r\n    main: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n        padding: '5px',\r\n    },\r\n    choseThisOption: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    optionButton: {\r\n        height: '100%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    optionButtonVoted: {\r\n        height: '50%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    chartContainer: {\r\n        maxHeight: '50%',\r\n    },\r\n    chart: {\r\n        // Limit the chart's width and height, otherwise the chart might go through the bottom of the viewport.\r\n        maxWidth: '20vh',\r\n    },\r\n}\r\n\r\n/**\r\n * This component represents a half of the currently displayed question.\r\n * This half contains an option text and, if answered, shows some data.\r\n *\r\n * @class Option\r\n * @extends {Component}\r\n */\r\nclass Option extends Component {\r\n    render() {\r\n        const {\r\n            classes,\r\n            authedUser,\r\n            text,\r\n            votes,\r\n            option,\r\n            handleQuestionAnswer,\r\n            opposite,\r\n        } = this.props\r\n\r\n        const choseThisOption = votes.includes(authedUser.id)\r\n        const hasVoted = opposite.votes.includes(authedUser.id) || choseThisOption\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                className={classNames(\r\n                    classes.main,\r\n                    choseThisOption ? classes.choseThisOption : null\r\n                )}\r\n            >\r\n                <Button\r\n                    className={hasVoted ? classes.optionButtonVoted : classes.optionButton}\r\n                    disabled={hasVoted}\r\n                    align=\"center\"\r\n                    onClick={() => handleQuestionAnswer(option)}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12} className={classes.answerContainer}>\r\n                            <Typography variant=\"h3\">{text}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Button>\r\n                {hasVoted ? this.renderPieChart() : null}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * This function examines the question's data and displays it in a nice way.\r\n     *\r\n     * @memberof Option\r\n     */\r\n    renderPieChart = () => {\r\n        const { classes, votes, opposite } = this.props\r\n\r\n        const votesThisOption = votes.length\r\n        const votesOppositeOption = opposite.votes.length\r\n        const totalVotes = votesOppositeOption + votesThisOption\r\n        const percent = Math.round((votesThisOption / totalVotes) * 100)\r\n\r\n        return (\r\n            <Grid item xs={12} className={classes.chartContainer} align=\"center\">\r\n                <PieChart\r\n                    className={classes.chart}\r\n                    data={[\r\n                        {\r\n                            title: 'This option',\r\n                            value: votesThisOption,\r\n                            color: theme.palette.primary.main,\r\n                        },\r\n                    ]}\r\n                    animate\r\n                    label\r\n                    labelStyle={{\r\n                        fill: theme.palette.primary.contrastText,\r\n                    }}\r\n                    totalValue={totalVotes}\r\n                />\r\n                <Typography variant=\"body1\">{percent}%</Typography>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledOption = withStyles(styles)(Option)\r\n\r\nexport default StyledOption\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { handleQuestionAnswer } from '../actions/questions'\r\n\r\nimport Option from '../components/Option'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = {\r\n    main: {\r\n        // The height of the two navbars and the heading is 3xnavHeight\r\n        height: `calc(100% - ${navHeight * 3}px)`,\r\n    },\r\n    option: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n    },\r\n    questionContainer: {\r\n        width: '100%',\r\n        padding: '5px',\r\n        height: `${navHeight}px`,\r\n    },\r\n    icon: {\r\n        marginBottom: '5px',\r\n    },\r\n    avatar: {\r\n        marginBottom: '5px',\r\n        height: '20px',\r\n        width: '20px',\r\n    },\r\n}\r\n\r\n/**\r\n * This view renders a question and its data.\r\n * The prop \"match.params.question\" is the ID of the question that should be rendered (so the question is in the URL).\r\n *\r\n * @class Question\r\n * @extends {Component}\r\n */\r\nclass Question extends Component {\r\n    handleQuestionAnswer = option => {\r\n        const { dispatch, authedUser, match } = this.props\r\n        const { question } = match.params\r\n\r\n        dispatch(handleQuestionAnswer({ authedUser, qid: question, answer: option }))\r\n    }\r\n\r\n    /**\r\n     * Returns the question before this one or the current question if this is the first question in the stack.\r\n     *\r\n     * @memberof Question\r\n     */\r\n    getPreviousQuestion = (question, filteredQuestions) => {\r\n        if (!filteredQuestions) return null\r\n        const currentId = filteredQuestions.indexOf(question)\r\n        if (currentId <= 0) {\r\n            // Link to current question\r\n            return question\r\n        }\r\n        return filteredQuestions[currentId - 1]\r\n    }\r\n\r\n    /**\r\n     * Returns the question after this one or the current question if this is the last question in the stack.\r\n     *\r\n     * @memberof Question\r\n     */\r\n    getNextQuestion = (question, filteredQuestions) => {\r\n        if (!filteredQuestions) return null\r\n        const currentId = filteredQuestions.indexOf(question)\r\n        if (currentId >= filteredQuestions.length - 1) {\r\n            // Link to current question\r\n            return question\r\n        }\r\n        return filteredQuestions[currentId + 1]\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser, match, users, filteredQuestions } = this.props\r\n        const { question } = match.params\r\n        const { questions } = this.props.questions\r\n\r\n        if (!question || !questions || !questions[question] || !filteredQuestions) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography variant=\"h1\">Loading question...</Typography>\r\n                    <Typography variant=\"body1\">\r\n                        If this text stays up long enough for you to read it, question \"{question}\"\r\n                        probably doesn't exist.\r\n                    </Typography>\r\n                    <Link to=\"/\">\r\n                        <Button>Take me back!</Button>\r\n                    </Link>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        const { author, optionOne, optionTwo } = questions[question]\r\n\r\n        const previousQuestion = this.getPreviousQuestion(question, filteredQuestions)\r\n        const nextQuestion = this.getNextQuestion(question, filteredQuestions)\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.questionContainer}>\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                        Would you rather...\r\n                    </Typography>\r\n                </div>\r\n                <Grid container className={classes.main}>\r\n                    <Option\r\n                        {...optionOne}\r\n                        option=\"optionOne\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionTwo}\r\n                    />\r\n                    <Option\r\n                        {...optionTwo}\r\n                        option=\"optionTwo\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionOne}\r\n                    />\r\n                </Grid>\r\n                <BottomNavigation showLabels>\r\n                    <BottomNavigationAction\r\n                        component={Link}\r\n                        to={`/questions/${previousQuestion}`}\r\n                        label=\"Previous\"\r\n                        icon={<FontAwesomeIcon icon={faArrowLeft} className={classes.icon} />}\r\n                        disabled={previousQuestion === question}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        component={Link}\r\n                        to={`/leaderboard`}\r\n                        label={author}\r\n                        icon={\r\n                            <Avatar\r\n                                alt=\"avatar\"\r\n                                src={users[author].avatarURL}\r\n                                className={classes.avatar}\r\n                            />\r\n                        }\r\n                    />\r\n                    <BottomNavigationAction\r\n                        component={Link}\r\n                        to={`/questions/${nextQuestion}`}\r\n                        label=\"Next\"\r\n                        icon={<FontAwesomeIcon icon={faArrowRight} className={classes.icon} />}\r\n                        disabled={nextQuestion === question}\r\n                    />\r\n                </BottomNavigation>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, filteredQuestions, filter, users }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n        filteredQuestions,\r\n        filter,\r\n        users,\r\n    }\r\n}\r\n\r\nconst StyledQuestion = withStyles(styles)(Question)\r\n\r\nexport default connect(mapStateToProps)(StyledQuestion)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\n/**\r\n * This helper view retrieves the current logged in user's question.\r\n * This question should be the first unanswered one or a different one depending on the filter.\r\n * It's basically just a redirect.\r\n *\r\n * @class CurrentQuestion\r\n * @extends {Component}\r\n */\r\nclass CurrentQuestion extends Component {\r\n    render() {\r\n        const { filteredQuestions } = this.props\r\n\r\n        if (!filteredQuestions) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Typography variant=\"h1\">Loading question...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return <Redirect to={`questions/${filteredQuestions[0]}`} />\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, filteredQuestions }) {\r\n    return {\r\n        authedUser,\r\n        filteredQuestions,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CurrentQuestion)\r\n","import React, { Component } from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { handleNewQuestion } from '../actions/questions'\r\n\r\nimport { Grid, TextField, Typography, Button } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = {\r\n    main: {\r\n        width: '100%',\r\n        margin: 0,\r\n    },\r\n}\r\n\r\n/**\r\n * This form allows the user to create a new question.\r\n * Workflow:\r\n * - User creates question\r\n * - User submits question\r\n * - User is redirected to CurrentQuestion\r\n * - Question is saved in the backend\r\n * - Question is saved in the redux store\r\n *\r\n * @class NewQuestion\r\n * @extends {Component}\r\n */\r\nclass NewQuestion extends Component {\r\n    state = {\r\n        optionOne: '',\r\n        optionTwo: '',\r\n    }\r\n\r\n    /**\r\n     * Triggered when the user types something.\r\n     * This updates the state and in turn updates the value of the given input field.\r\n     *\r\n     * @memberof NewQuestion\r\n     */\r\n    updateOption = (option, text) => {\r\n        this.setState(prevState => {\r\n            return { ...prevState, [option]: text }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Triggered when the \"Submit\" button is clicked.\r\n     * The workflow is noted in the class description.\r\n     *\r\n     * @memberof NewQuestion\r\n     */\r\n    submit = () => {\r\n        const { optionOne, optionTwo } = this.state\r\n        const { authedUser, dispatch } = this.props\r\n        dispatch(handleNewQuestion({ optionOne, optionTwo, author: authedUser.id }))\r\n        // Redirect to main page\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <Grid container justify=\"center\" spacing={24} className={classes.main}>\r\n                <Grid item xs={10}>\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                        Would you rather...\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={10}>\r\n                    <TextField\r\n                        required\r\n                        id=\"optionOne\"\r\n                        name=\"optionOne\"\r\n                        label=\"Option 1\"\r\n                        fullWidth\r\n                        autoComplete=\"optionOne\"\r\n                        onChange={e => this.updateOption('optionOne', e.target.value)}\r\n                        value={this.state.optionOne}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <TextField\r\n                        required\r\n                        id=\"optionTwo\"\r\n                        name=\"optionTwo\"\r\n                        label=\"Option 2\"\r\n                        fullWidth\r\n                        autoComplete=\"optionTwo\"\r\n                        onChange={e => this.updateOption('optionTwo', e.target.value)}\r\n                        value={this.state.optionTwo}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <Button onClick={e => this.submit()}>Submit</Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    }\r\n}\r\n\r\nconst withRouterNewQuestion = withRouter(NewQuestion)\r\n\r\nconst StyledNewQuestion = withStyles(styles)(withRouterNewQuestion)\r\n\r\nexport default connect(mapStateToProps)(StyledNewQuestion)\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    Avatar,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\n/**\r\n * This view simply displays the user's stats.\r\n * All users are ordered by the sum of their questions and answers.\r\n *\r\n * @class Leaderboard\r\n * @extends {Component}\r\n */\r\nclass Leaderboard extends Component {\r\n    render() {\r\n        const { users } = this.props\r\n        const sortedUsers = this.getSortedUsers(users)\r\n        return (\r\n            <Grid container justify=\"center\">\r\n                <List>{sortedUsers.map(user => this.renderListItem(user))}</List>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * This function renders the stats of a single user.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    renderListItem = user => {\r\n        return (\r\n            <ListItem alignItems=\"flex-start\" key={user.id}>\r\n                <ListItemAvatar>\r\n                    <Avatar alt={user.name} src={user.avatarURL} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={user.name}\r\n                    secondary={\r\n                        <Fragment>\r\n                            <Typography component=\"span\">\r\n                                {`${this.getAnsweredQuestions(user)} questions answered`}\r\n                            </Typography>\r\n                            <Typography component=\"span\">\r\n                                {`${this.getAskedQuestions(user)} questions asked`}\r\n                            </Typography>\r\n                        </Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Sorts the user array by the sum of their questions and answers.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    getSortedUsers = users => {\r\n        let sortedUsers = []\r\n        Object.keys(users).map(id => sortedUsers.push(users[id]))\r\n        return sortedUsers.sort((a, b) => this.getUserScore(b) - this.getUserScore(a))\r\n    }\r\n\r\n    /**\r\n     * Adds up the user's questions and answers.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    getUserScore = user => {\r\n        let sum = 0\r\n        sum += this.getAskedQuestions(user)\r\n        sum += this.getAnsweredQuestions(user)\r\n        return sum\r\n    }\r\n\r\n    /**\r\n     * Counts how many questions this user has answered.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    getAnsweredQuestions = user => {\r\n        return Object.keys(user.answers).length\r\n    }\r\n\r\n    /**\r\n     * Counts how many questions this user has asked.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    getAskedQuestions = user => {\r\n        return user.questions.length\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Button, Avatar, Grid } from '@material-ui/core'\r\n\r\nimport { handleLogin } from '../actions/authedUser'\r\n\r\nconst styles = {\r\n    main: {\r\n        height: '100vh',\r\n        maxWidth: '100vw',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n}\r\n\r\n/**\r\n * This container allows the user to select from a list of users.\r\n * This selection will be stored in the store.\r\n *\r\n * @class Login\r\n * @extends {Component}\r\n */\r\nclass Login extends Component {\r\n    handleLoginClick = id => {\r\n        const { dispatch, questions } = this.props\r\n\r\n        dispatch(handleLogin(id, questions.questions))\r\n    }\r\n\r\n    render() {\r\n        const { users, classes } = this.props\r\n\r\n        if (!users) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading users...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.main}\r\n                spacing={32}\r\n            >\r\n                {Object.entries(users).map(([id, user]) => this.renderUser(user))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderUser = user => {\r\n        const { id } = user\r\n        const { classes } = this.props\r\n        return (\r\n            <Grid item key={id}>\r\n                <Button onClick={() => this.handleLoginClick(id)}>\r\n                    <Avatar alt={user.name} src={user.avatarURL} className={classes.avatar} />\r\n                    <Typography align=\"center\">{user.name}</Typography>\r\n                </Button>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users, questions }) {\r\n    return {\r\n        users,\r\n        questions,\r\n    }\r\n}\r\n\r\nconst StyledLogin = withStyles(styles)(Login)\r\n\r\nexport default connect(mapStateToProps)(StyledLogin)\r\n","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n    }\r\n}\r\n","import { getInitialData } from '../helpers/api'\r\nimport { receiveUsers } from '../actions/users'\r\nimport { receiveQuestions } from '../actions/questions'\r\n\r\n/**\r\n * Dispatched when the app loads.\r\n * Fetches all of the question and user data.\r\n *\r\n * @export\r\n * @returns {Promise} This resolves when the user data is retrieved.\r\n */\r\nexport function handleInitialData() {\r\n    return dispatch => {\r\n        return getInitialData().then(({ users, questions }) => {\r\n            dispatch(receiveUsers(users))\r\n            dispatch(receiveQuestions(questions))\r\n        })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Navigation from '../components/Navigation'\r\n\r\nimport Question from './Question'\r\nimport CurrentQuestion from './CurrentQuestion'\r\nimport NewQuestion from './NewQuestion'\r\nimport Leaderboard from './Leaderboard'\r\nimport Login from './Login'\r\n\r\nimport { handleInitialData } from '../actions/shared'\r\nimport { theme } from '../helpers/theme'\r\n\r\n/**\r\n * The main app that contains the entire page.\r\n * This also contains the theme provider.\r\n * If the user is not logged in, we'll show the login page.\r\n *\r\n * @class App\r\n * @extends {Component}\r\n */\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(handleInitialData())\r\n    }\r\n\r\n    render() {\r\n        const { authedUser } = this.props\r\n        const loggedIn = Object.entries(authedUser).length !== 0 && authedUser.id\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                {loggedIn ? (\r\n                    <Router>\r\n                        <Navigation />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={CurrentQuestion} />\r\n                            <Route path=\"/new\" component={NewQuestion} />\r\n                            <Route path=\"/leaderboard\" component={Leaderboard} />\r\n                            <Route path=\"/questions/:question\" component={Question} />\r\n                        </Switch>\r\n                    </Router>\r\n                ) : (\r\n                    <Login />\r\n                )}\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\nimport questions from './questions'\r\nimport filter from './filter'\r\nimport filteredQuestions from './filteredQuestions'\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n    filteredQuestions,\r\n    filter,\r\n})\r\n","import { SET_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RECEIVE_USERS } from '../actions/users'\r\nimport { SAVE_QUESTION_ANSWER } from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            return action.users\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n            // This is basically stolen from the _DATA.js code\r\n            return {\r\n                ...state,\r\n                [authedUser]: {\r\n                    ...state[authedUser],\r\n                    answers: {\r\n                        ...state[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RECEIVE_QUESTIONS, SAVE_QUESTION_ANSWER } from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                questions: {\r\n                    ...state.questions,\r\n                    ...action.questions,\r\n                },\r\n            }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n\r\n            const questions = {\r\n                ...state.questions,\r\n                [qid]: {\r\n                    ...state.questions[qid],\r\n                    [answer]: {\r\n                        ...state.questions[qid][answer],\r\n                        votes: state.questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                questions: { ...questions },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RETRIEVE_FILTERED_QUESTIONS } from '../actions/filteredQuestions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RETRIEVE_FILTERED_QUESTIONS: {\r\n            const { questions, filter, authedUser } = action\r\n            debugger\r\n            let sortedQuestions = []\r\n            for (const question in questions) {\r\n                const votes = [\r\n                    ...questions[question].optionOne.votes,\r\n                    ...questions[question].optionTwo.votes,\r\n                ]\r\n\r\n                switch (filter) {\r\n                    case 0:\r\n                        // No filter\r\n                        sortedQuestions.push(questions[question].id)\r\n                        break\r\n                    case 2:\r\n                        // Answered only\r\n                        if (votes.includes(authedUser)) {\r\n                            sortedQuestions.push(questions[question].id)\r\n                        }\r\n                        break\r\n                    default:\r\n                        // Unanswered only\r\n                        if (!votes.includes(authedUser)) {\r\n                            sortedQuestions.push(questions[question].id)\r\n                        }\r\n                        break\r\n                }\r\n            }\r\n            sortedQuestions.sort((a, b) => {\r\n                return b.timestamp - a.timestamp\r\n            })\r\n            return sortedQuestions\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { SET_FILTER } from '../actions/filter'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_FILTER:\r\n            return action.id\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default composeWithDevTools(applyMiddleware(thunk))\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './views/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reducer from './reducers'\r\nimport middleware from './middleware'\r\n\r\nconst store = createStore(reducer, middleware)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}