{"version":3,"sources":["components/Navigation.js","helpers/_DATA.js","helpers/api.js","actions/questions.js","helpers/theme.js","components/Option.js","views/CurrentQuestion.js","views/NewQuestion.js","views/Leaderboard.js","actions/authedUser.js","views/Login.js","actions/users.js","actions/shared.js","views/App.js","serviceWorker.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/index.js","index.js"],"names":["Navigation","_this$props","this","props","classes","authedUser","avatarURL","users","id","react_default","a","createElement","className","root","index_es","position","navBar","react_router_dom","to","replace","menuButton","color","grow","alt","src","avatar","Component","StyledNavigation","withStyles","theme","marginLeft","marginRight","textDecoration","maxHeight","float","flexGrow","connect","_ref","catherinegregory","name","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","edwincarr","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","danoliver","author","timestamp","optionOne","votes","text","optionTwo","saveQuestionAnswer","_ref3","_ref2","qid","answer","Promise","res","rej","setTimeout","Object","objectSpread","defineProperty","concat","_saveQuestionAnswer","RECEIVE_QUESTIONS","RETRIEVE_NEW_QUESTION","SAVE_QUESTION_ANSWER","handleRetrieveNewQuestion","dispatch","type","retrieveNewQuestion","handleQuestionAnswer","setQuestionAnswer","catch","e","console","warn","createMuiTheme","palette","overrides","MuiToolbar","regular","&&","minHeight","height","MuiBottomNavigation","bottom","left","right","typography","useNextVariants","Option","renderPieChart","_this","opposite","option","votesThisOption","length","votesOppositeOption","item","xs","chartContainer","align","dist_default","chart","data","title","value","primary","main","animate","label","labelStyle","fill","contrastText","totalValue","_this$props2","hasVoted","includes","container","optionButtonVoted","optionButton","onClick","answerContainer","variant","StyledOption","flex","width","padding","textTransform","maxWidth","styles","navHeight","questionContainer","icon","marginBottom","CurrentQuestion","componentDidMount","currentQuestion","_this$props3","_this$props$questions","justify","alignItems","_questions$currentQue","react","components_Option","assign","showLabels","react_fontawesome_index_es","faArrowLeft","faUser","faArrowRight","StyledCurrentQuestion","NewQuestion","Leaderboard","SET_AUTHED_USER","handleLogin","setAuthedUser","Login","handleLoginClick","renderUser","user","key","_this2","spacing","entries","map","slicedToArray","StyledLogin","margin","RECEIVE_USERS","handleInitialData","all","then","receiveUsers","receiveQuestions","App","loggedIn","CssBaseline_default","components_Navigation","react_router","exact","path","component","views_Login","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","error","combineReducers","arguments","undefined","action","question","composeWithDevTools","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","es","views_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.92b8109f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar, Avatar } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = theme => ({\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        maxHeight: '100%',\r\n    },\r\n    avatar: {\r\n        maxHeight: '100%',\r\n        float: 'right',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n})\r\n\r\n/**\r\n * This element represents the top navigation of the application.\r\n *\r\n * @class Navigation\r\n * @extends {Component}\r\n */\r\nclass Navigation extends Component {\r\n    render() {\r\n        const { classes, authedUser, users } = this.props\r\n\r\n        const avatarURL = users.users[authedUser.id].avatarURL\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar className={classes.navBar}>\r\n                            <Link to=\"/\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Would You Rather?</Button>\r\n                            </Link>\r\n                            <Link to=\"/new\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">New Question</Button>\r\n                            </Link>\r\n                            <Link to=\"/leaderboard\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Leaderboard</Button>\r\n                            </Link>\r\n                            <div className={classes.grow} />\r\n                            <Link to=\"/profile\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">{authedUser.id}</Button>\r\n                                <Avatar alt=\"avatar\" src={avatarURL} className={classes.avatar} />\r\n                            </Link>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users, authedUser }) {\r\n    return {\r\n        users,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nconst StyledNavigation = withStyles(styles)(Navigation)\r\n\r\nexport default connect(mapStateToProps)(StyledNavigation)\r\n","let users = {\r\n    catherinegregory: {\r\n        id: 'catherinegregory',\r\n        name: 'Catherine Gregory',\r\n        avatarURL: 'https://randomuser.me/api/portraits/women/82.jpg',\r\n        answers: {\r\n            '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n            am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n            loxhs1bqm25b708cmbf3g: 'optionTwo',\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\r\n    },\r\n    edwincarr: {\r\n        id: 'edwincarr',\r\n        name: 'Edwin Carr',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/36.jpg',\r\n        answers: {\r\n            vthrdm985a262al8qx3do: 'optionOne',\r\n            xj352vofupe1dqz9emx13r: 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    danoliver: {\r\n        id: 'danoliver',\r\n        name: 'Dan Oliver',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/24.jpg',\r\n        answers: {\r\n            xj352vofupe1dqz9emx13r: 'optionOne',\r\n            vthrdm985a262al8qx3do: 'optionTwo',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    },\r\n}\r\n\r\nlet questions = {\r\n    '8xf0y6ziyjabvozdd253nd': {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'catherinegregory',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['catherinegregory'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory',\r\n        },\r\n    },\r\n    '6ni6ok3ym7mf1p33lnez': {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'danoliver',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver', 'catherinegregory'],\r\n            text: 'become a supervillain',\r\n        },\r\n    },\r\n    am8ehyc8byjqgar0jgpub9: {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'catherinegregory',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be telepathic',\r\n        },\r\n    },\r\n    loxhs1bqm25b708cmbf3g: {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'edwincarr',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be a back-end developer',\r\n        },\r\n    },\r\n    vthrdm985a262al8qx3do: {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'edwincarr',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['edwincarr'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver'],\r\n            text: 'have your best friend find $500',\r\n        },\r\n    },\r\n    xj352vofupe1dqz9emx13r: {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'danoliver',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['danoliver'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['edwincarr'],\r\n            text: 'write Swift',\r\n        },\r\n    },\r\n}\r\n\r\nfunction generateUID() {\r\n    return (\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15) +\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15)\r\n    )\r\n}\r\n\r\nexport function _getUsers() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...users }), 1000)\r\n    })\r\n}\r\n\r\nexport function _getQuestions() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...questions }), 1000)\r\n    })\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n        id: generateUID(),\r\n        timestamp: Date.now(),\r\n        author,\r\n        optionOne: {\r\n            votes: [],\r\n            text: optionOneText,\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: optionTwoText,\r\n        },\r\n    }\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n    return new Promise((res, rej) => {\r\n        const authedUser = question.author\r\n        const formattedQuestion = formatQuestion(question)\r\n\r\n        setTimeout(() => {\r\n            questions = {\r\n                ...questions,\r\n                [formattedQuestion.id]: formattedQuestion,\r\n            }\r\n\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n                },\r\n            }\r\n\r\n            res(formattedQuestion)\r\n        }, 1000)\r\n    })\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    answers: {\r\n                        ...users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n\r\n            questions = {\r\n                ...questions,\r\n                [qid]: {\r\n                    ...questions[qid],\r\n                    [answer]: {\r\n                        ...questions[qid][answer],\r\n                        votes: questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n\r\n            res()\r\n        }, 500)\r\n    })\r\n}\r\n","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA.js'\r\n\r\nexport function getInitialData() {\r\n    return Promise.all([_getUsers(), _getQuestions()]).then(([users, questions]) => ({\r\n        users,\r\n        questions,\r\n    }))\r\n}\r\n\r\nexport function saveQuestion(question) {\r\n    return _saveQuestion(question)\r\n}\r\n\r\nexport function saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return _saveQuestionAnswer({ authedUser, qid, answer })\r\n}\r\n","import { saveQuestionAnswer } from '../helpers/api'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const RETRIEVE_NEW_QUESTION = 'RETRIEVE_NEW_QUESTION'\r\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER'\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport function retrieveNewQuestion(authedUser) {\r\n    return {\r\n        type: RETRIEVE_NEW_QUESTION,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport function handleRetrieveNewQuestion(authedUser) {\r\n    return dispatch => {\r\n        dispatch(retrieveNewQuestion(authedUser))\r\n    }\r\n}\r\n\r\nexport function setQuestionAnswer({ authedUser, qid, answer }) {\r\n    return {\r\n        type: SAVE_QUESTION_ANSWER,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n    }\r\n}\r\n\r\nexport function handleQuestionAnswer({ authedUser, qid, answer }) {\r\n    return dispatch => {\r\n        dispatch(setQuestionAnswer({ authedUser: authedUser.id, qid, answer }))\r\n\r\n        return saveQuestionAnswer({ authedUser: authedUser.id, qid, answer }).catch(e => {\r\n            console.warn('Error in handleQuestionAnswer: ', e)\r\n        })\r\n    }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport const navHeight = 56\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    overrides: {\r\n        MuiToolbar: {\r\n            regular: {\r\n                '&&': {\r\n                    minHeight: `${navHeight}px`,\r\n                    height: `${navHeight}px`,\r\n                    maxHeight: `${navHeight}px`,\r\n                },\r\n            },\r\n        },\r\n        MuiBottomNavigation: {\r\n            root: {\r\n                minHeight: `${navHeight}px`,\r\n                height: `${navHeight}px`,\r\n                maxHeight: `${navHeight}px`,\r\n                position: 'absolute',\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n            },\r\n        },\r\n    },\r\n    typography: { useNextVariants: true },\r\n})\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion } from '../actions/questions'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport PieChart from 'react-minimal-pie-chart'\r\nimport { theme } from '../helpers/theme'\r\n\r\nconst styles = {\r\n    main: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n        padding: '5px',\r\n    },\r\n    optionButton: {\r\n        height: '100%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    optionButtonVoted: {\r\n        height: '50%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    chartContainer: {\r\n        maxHeight: '50%',\r\n    },\r\n    chart: {\r\n        // Limit the chart's width and height, otherwise the chart might go through the bottom of the viewport.\r\n        maxWidth: '20vh',\r\n    },\r\n}\r\n\r\nclass Option extends Component {\r\n    render() {\r\n        const {\r\n            classes,\r\n            authedUser,\r\n            text,\r\n            votes,\r\n            option,\r\n            handleQuestionAnswer,\r\n            opposite,\r\n        } = this.props\r\n\r\n        const hasVoted = opposite.votes.includes(authedUser.id) || votes.includes(authedUser.id)\r\n\r\n        return (\r\n            <Grid container className={classes.main}>\r\n                <Button\r\n                    className={hasVoted ? classes.optionButtonVoted : classes.optionButton}\r\n                    align=\"center\"\r\n                    onClick={() => handleQuestionAnswer(option)}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12} className={classes.answerContainer}>\r\n                            <Typography variant=\"h3\">{text}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Button>\r\n                {hasVoted ? this.renderPieChart() : null}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderPieChart = () => {\r\n        const { classes, authedUser, text, votes, option, opposite } = this.props\r\n        const votesThisOption = votes.length\r\n        const votesOppositeOption = opposite.votes.length\r\n        return (\r\n            <Grid item xs={12} className={classes.chartContainer} align=\"center\">\r\n                <PieChart\r\n                    className={classes.chart}\r\n                    data={[\r\n                        {\r\n                            title: 'This option',\r\n                            value: votesThisOption,\r\n                            color: theme.palette.primary.main,\r\n                        },\r\n                    ]}\r\n                    animate\r\n                    label\r\n                    labelStyle={{\r\n                        fill: theme.palette.primary.contrastText,\r\n                    }}\r\n                    totalValue={votesOppositeOption + votesThisOption}\r\n                />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledOption = withStyles(styles)(Option)\r\n\r\nexport default StyledOption\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion, handleQuestionAnswer } from '../actions/questions'\r\n\r\nimport Option from '../components/Option'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = {\r\n    main: {\r\n        // The height of the two navbars and the heading is 3xnavHeight\r\n        height: `calc(100% - ${navHeight * 3}px)`,\r\n    },\r\n    option: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n    },\r\n    questionContainer: {\r\n        width: '100%',\r\n        padding: '5px',\r\n        height: `${navHeight}px`,\r\n    },\r\n    icon: {\r\n        marginBottom: '5px',\r\n    },\r\n}\r\n\r\nclass CurrentQuestion extends Component {\r\n    componentDidMount = () => {\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            this.retrieveNewQuestion()\r\n        }\r\n    }\r\n\r\n    retrieveNewQuestion = () => {\r\n        const { dispatch, authedUser } = this.props\r\n\r\n        dispatch(handleRetrieveNewQuestion(authedUser))\r\n    }\r\n\r\n    handleQuestionAnswer = option => {\r\n        const { dispatch, authedUser } = this.props\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        dispatch(handleQuestionAnswer({ authedUser, qid: currentQuestion, answer: option }))\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser } = this.props\r\n        const { currentQuestion, questions } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading question...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        const { id, author, optionOne, optionTwo } = questions[currentQuestion]\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.questionContainer}>\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                        Would you rather...\r\n                    </Typography>\r\n                </div>\r\n                <Grid container className={classes.main}>\r\n                    <Option\r\n                        {...optionOne}\r\n                        option=\"optionOne\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionTwo}\r\n                    />\r\n                    <Option\r\n                        {...optionTwo}\r\n                        option=\"optionTwo\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionOne}\r\n                    />\r\n                </Grid>\r\n                <BottomNavigation showLabels>\r\n                    <BottomNavigationAction\r\n                        label=\"Previous\"\r\n                        icon={<FontAwesomeIcon icon={faArrowLeft} className={classes.icon} />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        label={author}\r\n                        icon={<FontAwesomeIcon icon={faUser} className={classes.icon} />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        label=\"Next\"\r\n                        icon={<FontAwesomeIcon icon={faArrowRight} className={classes.icon} />}\r\n                    />\r\n                </BottomNavigation>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n    }\r\n}\r\n\r\nconst StyledCurrentQuestion = withStyles(styles)(CurrentQuestion)\r\n\r\nexport default connect(mapStateToProps)(StyledCurrentQuestion)\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NewQuestion extends Component {\r\n    render() {\r\n        return <div>NewQuestion</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Leaderboard extends Component {\r\n    render() {\r\n        return <div>Leaderboard</div>\r\n    }\r\n}\r\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id) {\r\n    return {\r\n        type: SET_AUTHED_USER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleLogin(id) {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser(id))\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Button, Avatar, Grid } from '@material-ui/core'\r\n\r\nimport { handleLogin } from '../actions/authedUser'\r\n\r\nconst styles = {\r\n    main: {\r\n        height: '100vh',\r\n        maxWidth: '100vw',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n}\r\n\r\n/**\r\n * This container allows the user to select from a list of users.\r\n * This selection will be stored in the store.\r\n *\r\n * @class Login\r\n * @extends {Component}\r\n */\r\nclass Login extends Component {\r\n    handleLoginClick = id => {\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(handleLogin(id))\r\n    }\r\n\r\n    render() {\r\n        const { users } = this.props.users\r\n        const { classes } = this.props\r\n\r\n        if (!users) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading users...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.main}\r\n                spacing={32}\r\n            >\r\n                {Object.entries(users).map(([id, user]) => this.renderUser(user))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderUser = user => {\r\n        const { id } = user\r\n        const { classes } = this.props\r\n        return (\r\n            <Grid item key={id}>\r\n                <Button onClick={() => this.handleLoginClick(id)}>\r\n                    <Avatar alt={user.name} src={user.avatarURL} className={classes.avatar} />\r\n                    <Typography align=\"center\">{user.name}</Typography>\r\n                </Button>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nconst StyledLogin = withStyles(styles)(Login)\r\n\r\nexport default connect(mapStateToProps)(StyledLogin)\r\n","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n    }\r\n}\r\n","import { getInitialData } from '../helpers/api'\r\nimport { receiveUsers } from '../actions/users'\r\nimport { receiveQuestions } from '../actions/questions'\r\n\r\n/**\r\n * Dispatched when the app loads.\r\n * Fetches all of the question and user data.\r\n *\r\n * @export\r\n * @returns {Promise} This resolves when the user data is retrieved.\r\n */\r\nexport function handleInitialData() {\r\n    return dispatch => {\r\n        return getInitialData().then(({ users, questions }) => {\r\n            dispatch(receiveUsers(users))\r\n            dispatch(receiveQuestions(questions))\r\n        })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Navigation from '../components/Navigation'\r\n\r\nimport CurrentQuestion from './CurrentQuestion'\r\nimport NewQuestion from './NewQuestion'\r\nimport Leaderboard from './Leaderboard'\r\nimport Login from './Login'\r\n\r\nimport { handleInitialData } from '../actions/shared'\r\nimport { theme } from '../helpers/theme'\r\n\r\n/**\r\n * The main app that contains the entire page.\r\n * This also contains the theme provider.\r\n * If the user is not logged in, we'll show the login page.\r\n *\r\n * @class App\r\n * @extends {Component}\r\n */\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(handleInitialData())\r\n    }\r\n\r\n    render() {\r\n        const { authedUser } = this.props\r\n        const loggedIn = Object.entries(authedUser).length !== 0\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                {loggedIn ? (\r\n                    <Router>\r\n                        <Navigation />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={CurrentQuestion} />\r\n                            <Route path=\"/new\" component={NewQuestion} />\r\n                            <Route path=\"/leaderboard\" component={Leaderboard} />\r\n                        </Switch>\r\n                    </Router>\r\n                ) : (\r\n                    <Login />\r\n                )}\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\nimport questions from './questions'\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n})\r\n","import { SET_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RECEIVE_USERS } from '../actions/users'\r\nimport { SAVE_QUESTION_ANSWER } from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n            // This is basically stolen from the _DATA.js code\r\n            const users = {\r\n                ...state.users,\r\n                [authedUser]: {\r\n                    ...state.users[authedUser],\r\n                    answers: {\r\n                        ...state.users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                ...users,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    RECEIVE_QUESTIONS,\r\n    RETRIEVE_NEW_QUESTION,\r\n    SAVE_QUESTION_ANSWER,\r\n} from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                questions: action.questions,\r\n            }\r\n        case RETRIEVE_NEW_QUESTION:\r\n            for (const key in state.questions) {\r\n                const question = state.questions[key]\r\n                // Concatenate the two arrays to get all votes of the question\r\n                const votes = question.optionOne.votes.concat(question.optionTwo.votes)\r\n                // Find the first question where the user hasn't voted\r\n                let hasVoted = false\r\n                for (const key in votes) {\r\n                    if (votes[key] === action.authedUser.id) {\r\n                        hasVoted = true\r\n                    }\r\n                }\r\n                if (!hasVoted) {\r\n                    return {\r\n                        ...state,\r\n                        currentQuestion: key,\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                currentQuestion: null,\r\n            }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n            // This is basically stolen from the _DATA.js code\r\n            const questions = {\r\n                ...state.questions,\r\n                [qid]: {\r\n                    ...state.questions[qid],\r\n                    [answer]: {\r\n                        ...state.questions[qid][answer],\r\n                        votes: state.questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                questions: { ...questions },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default composeWithDevTools(applyMiddleware(thunk))\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './views/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reducer from './reducers'\r\nimport middleware from './middleware'\r\n\r\nconst store = createStore(reducer, middleware)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}