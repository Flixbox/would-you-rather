{"version":3,"sources":["components/Navigation.js","helpers/_DATA.js","helpers/api.js","actions/questions.js","helpers/theme.js","components/Option.js","views/CurrentQuestion.js","views/NewQuestion.js","views/Leaderboard.js","actions/authedUser.js","views/Login.js","actions/users.js","actions/shared.js","views/App.js","serviceWorker.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/index.js","index.js"],"names":["Navigation","_this$props","this","props","classes","authedUser","react_default","a","createElement","className","root","index_es","position","navBar","react_router_dom","to","replace","menuButton","color","id","Component","withStyles","grow","flexGrow","marginLeft","marginRight","textDecoration","users","catherinegregory","name","avatarURL","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","edwincarr","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","danoliver","author","timestamp","optionOne","votes","text","optionTwo","saveQuestionAnswer","_ref3","_ref2","qid","answer","Promise","res","rej","setTimeout","Object","objectSpread","defineProperty","concat","_saveQuestionAnswer","RECEIVE_QUESTIONS","RETRIEVE_NEW_QUESTION","SAVE_QUESTION_ANSWER","handleRetrieveNewQuestion","dispatch","type","retrieveNewQuestion","handleQuestionAnswer","_ref","setQuestionAnswer","catch","e","console","warn","theme","createMuiTheme","palette","overrides","MuiToolbar","regular","&&","minHeight","height","maxHeight","MuiBottomNavigation","bottom","left","right","typography","useNextVariants","Option","renderPieChart","_this","opposite","option","votesThisOption","length","votesOppositeOption","item","xs","chartContainer","align","dist_default","chart","data","title","value","primary","main","animate","label","labelStyle","fill","contrastText","totalValue","_this$props2","hasVoted","includes","container","optionButtonVoted","optionButton","onClick","answerContainer","variant","StyledOption","flex","width","padding","textTransform","maxWidth","styles","navHeight","questionContainer","CurrentQuestion","componentDidMount","currentQuestion","_this$props3","_this$props$questions","justify","alignItems","_questions$currentQue","react","components_Option","assign","showLabels","icon","react_fontawesome_index_es","faArrowLeft","faUser","faArrowRight","StyledCurrentQuestion","connect","NewQuestion","Leaderboard","SET_AUTHED_USER","handleLogin","setAuthedUser","Login","handleLoginClick","renderUser","user","key","alt","src","avatar","_this2","spacing","entries","map","slicedToArray","StyledLogin","margin","RECEIVE_USERS","handleInitialData","all","then","receiveUsers","receiveQuestions","App","loggedIn","CssBaseline_default","components_Navigation","react_router","exact","path","component","views_Login","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","error","combineReducers","arguments","undefined","action","question","composeWithDevTools","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","es","views_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1a911bbc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = {\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n    },\r\n}\r\n\r\n/**\r\n * This element represents the top navigation of the application.\r\n *\r\n * @class Navigation\r\n * @extends {Component}\r\n */\r\nclass Navigation extends Component {\r\n    render() {\r\n        const { classes, authedUser } = this.props\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar className={classes.navBar}>\r\n                            <Link to=\"/\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Would You Rather?</Button>\r\n                            </Link>\r\n                            <Link to=\"/new\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">New Question</Button>\r\n                            </Link>\r\n                            <Link to=\"/leaderboard\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Leaderboard</Button>\r\n                            </Link>\r\n                            <Link to=\"/profile\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">{authedUser.id}</Button>\r\n                            </Link>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navigation)\r\n","let users = {\r\n    catherinegregory: {\r\n        id: 'catherinegregory',\r\n        name: 'Catherine Gregory',\r\n        avatarURL: 'https://randomuser.me/api/portraits/women/82.jpg',\r\n        answers: {\r\n            '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n            am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n            loxhs1bqm25b708cmbf3g: 'optionTwo',\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\r\n    },\r\n    edwincarr: {\r\n        id: 'edwincarr',\r\n        name: 'Edwin Carr',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/36.jpg',\r\n        answers: {\r\n            vthrdm985a262al8qx3do: 'optionOne',\r\n            xj352vofupe1dqz9emx13r: 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    danoliver: {\r\n        id: 'danoliver',\r\n        name: 'Dan Oliver',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/24.jpg',\r\n        answers: {\r\n            xj352vofupe1dqz9emx13r: 'optionOne',\r\n            vthrdm985a262al8qx3do: 'optionTwo',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    },\r\n}\r\n\r\nlet questions = {\r\n    '8xf0y6ziyjabvozdd253nd': {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'catherinegregory',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['catherinegregory'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory',\r\n        },\r\n    },\r\n    '6ni6ok3ym7mf1p33lnez': {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'danoliver',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver', 'catherinegregory'],\r\n            text: 'become a supervillain',\r\n        },\r\n    },\r\n    am8ehyc8byjqgar0jgpub9: {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'catherinegregory',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be telepathic',\r\n        },\r\n    },\r\n    loxhs1bqm25b708cmbf3g: {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'edwincarr',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be a back-end developer',\r\n        },\r\n    },\r\n    vthrdm985a262al8qx3do: {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'edwincarr',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['edwincarr'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver'],\r\n            text: 'have your best friend find $500',\r\n        },\r\n    },\r\n    xj352vofupe1dqz9emx13r: {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'danoliver',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['danoliver'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['edwincarr'],\r\n            text: 'write Swift',\r\n        },\r\n    },\r\n}\r\n\r\nfunction generateUID() {\r\n    return (\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15) +\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15)\r\n    )\r\n}\r\n\r\nexport function _getUsers() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...users }), 1000)\r\n    })\r\n}\r\n\r\nexport function _getQuestions() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...questions }), 1000)\r\n    })\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n        id: generateUID(),\r\n        timestamp: Date.now(),\r\n        author,\r\n        optionOne: {\r\n            votes: [],\r\n            text: optionOneText,\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: optionTwoText,\r\n        },\r\n    }\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n    return new Promise((res, rej) => {\r\n        const authedUser = question.author\r\n        const formattedQuestion = formatQuestion(question)\r\n\r\n        setTimeout(() => {\r\n            questions = {\r\n                ...questions,\r\n                [formattedQuestion.id]: formattedQuestion,\r\n            }\r\n\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n                },\r\n            }\r\n\r\n            res(formattedQuestion)\r\n        }, 1000)\r\n    })\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    answers: {\r\n                        ...users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n\r\n            questions = {\r\n                ...questions,\r\n                [qid]: {\r\n                    ...questions[qid],\r\n                    [answer]: {\r\n                        ...questions[qid][answer],\r\n                        votes: questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n\r\n            res()\r\n        }, 500)\r\n    })\r\n}\r\n","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA.js'\r\n\r\nexport function getInitialData() {\r\n    return Promise.all([_getUsers(), _getQuestions()]).then(([users, questions]) => ({\r\n        users,\r\n        questions,\r\n    }))\r\n}\r\n\r\nexport function saveQuestion(question) {\r\n    return _saveQuestion(question)\r\n}\r\n\r\nexport function saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return _saveQuestionAnswer({ authedUser, qid, answer })\r\n}\r\n","import { saveQuestionAnswer } from '../helpers/api'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const RETRIEVE_NEW_QUESTION = 'RETRIEVE_NEW_QUESTION'\r\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER'\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport function retrieveNewQuestion(authedUser) {\r\n    return {\r\n        type: RETRIEVE_NEW_QUESTION,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport function handleRetrieveNewQuestion(authedUser) {\r\n    return dispatch => {\r\n        dispatch(retrieveNewQuestion(authedUser))\r\n    }\r\n}\r\n\r\nexport function setQuestionAnswer({ authedUser, qid, answer }) {\r\n    return {\r\n        type: SAVE_QUESTION_ANSWER,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n    }\r\n}\r\n\r\nexport function handleQuestionAnswer({ authedUser, qid, answer }) {\r\n    return dispatch => {\r\n        dispatch(setQuestionAnswer({ authedUser: authedUser.id, qid, answer }))\r\n\r\n        return saveQuestionAnswer({ authedUser: authedUser.id, qid, answer }).catch(e => {\r\n            console.warn('Error in handleQuestionAnswer: ', e)\r\n        })\r\n    }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport const navHeight = 56\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    overrides: {\r\n        MuiToolbar: {\r\n            regular: {\r\n                '&&': {\r\n                    minHeight: `${navHeight}px`,\r\n                    height: `${navHeight}px`,\r\n                    maxHeight: `${navHeight}px`,\r\n                },\r\n            },\r\n        },\r\n        MuiBottomNavigation: {\r\n            root: {\r\n                minHeight: `${navHeight}px`,\r\n                height: `${navHeight}px`,\r\n                maxHeight: `${navHeight}px`,\r\n                position: 'absolute',\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n            },\r\n        },\r\n    },\r\n    typography: { useNextVariants: true },\r\n})\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion } from '../actions/questions'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport PieChart from 'react-minimal-pie-chart'\r\nimport { theme } from '../helpers/theme'\r\n\r\nconst styles = {\r\n    main: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n        padding: '5px',\r\n    },\r\n    optionButton: {\r\n        height: '100%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    optionButtonVoted: {\r\n        height: '50%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    chartContainer: {\r\n        maxHeight: '50%',\r\n    },\r\n    chart: {\r\n        // Limit the chart's width and height, otherwise the chart might go through the bottom of the viewport.\r\n        maxWidth: '20vh',\r\n    },\r\n}\r\n\r\nclass Option extends Component {\r\n    render() {\r\n        const {\r\n            classes,\r\n            authedUser,\r\n            text,\r\n            votes,\r\n            option,\r\n            handleQuestionAnswer,\r\n            opposite,\r\n        } = this.props\r\n\r\n        const hasVoted = opposite.votes.includes(authedUser.id) || votes.includes(authedUser.id)\r\n\r\n        return (\r\n            <Grid container className={classes.main}>\r\n                <Button\r\n                    className={hasVoted ? classes.optionButtonVoted : classes.optionButton}\r\n                    align=\"center\"\r\n                    onClick={() => handleQuestionAnswer(option)}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12} className={classes.answerContainer}>\r\n                            <Typography variant=\"h3\">{text}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Button>\r\n                {hasVoted ? this.renderPieChart() : null}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderPieChart = () => {\r\n        const { classes, authedUser, text, votes, option, opposite } = this.props\r\n        const votesThisOption = votes.length\r\n        const votesOppositeOption = opposite.votes.length\r\n        return (\r\n            <Grid item xs={12} className={classes.chartContainer} align=\"center\">\r\n                <PieChart\r\n                    className={classes.chart}\r\n                    data={[\r\n                        {\r\n                            title: 'This option',\r\n                            value: votesThisOption,\r\n                            color: theme.palette.primary.main,\r\n                        },\r\n                    ]}\r\n                    animate\r\n                    label\r\n                    labelStyle={{\r\n                        fill: theme.palette.primary.contrastText,\r\n                    }}\r\n                    totalValue={votesOppositeOption + votesThisOption}\r\n                />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledOption = withStyles(styles)(Option)\r\n\r\nexport default StyledOption\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion, handleQuestionAnswer } from '../actions/questions'\r\n\r\nimport Option from '../components/Option'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = {\r\n    main: {\r\n        // The height of the two navbars and the heading is 3xnavHeight\r\n        height: `calc(100% - ${navHeight * 3}px)`,\r\n    },\r\n    option: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n    },\r\n    questionContainer: {\r\n        width: '100%',\r\n        padding: '5px',\r\n        height: `${navHeight}px`,\r\n    },\r\n}\r\n\r\nclass CurrentQuestion extends Component {\r\n    componentDidMount = () => {\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            this.retrieveNewQuestion()\r\n        }\r\n    }\r\n\r\n    retrieveNewQuestion = () => {\r\n        const { dispatch, authedUser } = this.props\r\n\r\n        dispatch(handleRetrieveNewQuestion(authedUser))\r\n    }\r\n\r\n    handleQuestionAnswer = option => {\r\n        const { dispatch, authedUser } = this.props\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        dispatch(handleQuestionAnswer({ authedUser, qid: currentQuestion, answer: option }))\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser } = this.props\r\n        const { currentQuestion, questions } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading question...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        const { id, author, optionOne, optionTwo } = questions[currentQuestion]\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.questionContainer}>\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                        Would you rather...\r\n                    </Typography>\r\n                </div>\r\n                <Grid container className={classes.main}>\r\n                    <Option\r\n                        {...optionOne}\r\n                        option=\"optionOne\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionTwo}\r\n                    />\r\n                    <Option\r\n                        {...optionTwo}\r\n                        option=\"optionTwo\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionOne}\r\n                    />\r\n                </Grid>\r\n                <BottomNavigation showLabels>\r\n                    <BottomNavigationAction\r\n                        label=\"Previous\"\r\n                        icon={<FontAwesomeIcon icon={faArrowLeft} />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        label={author}\r\n                        icon={<FontAwesomeIcon icon={faUser} />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        label=\"Next\"\r\n                        icon={<FontAwesomeIcon icon={faArrowRight} />}\r\n                    />\r\n                </BottomNavigation>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n    }\r\n}\r\n\r\nconst StyledCurrentQuestion = withStyles(styles)(CurrentQuestion)\r\n\r\nexport default connect(mapStateToProps)(StyledCurrentQuestion)\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NewQuestion extends Component {\r\n    render() {\r\n        return <div>NewQuestion</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Leaderboard extends Component {\r\n    render() {\r\n        return <div>Leaderboard</div>\r\n    }\r\n}\r\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id) {\r\n    return {\r\n        type: SET_AUTHED_USER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleLogin(id) {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser(id))\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Button, Avatar, Grid } from '@material-ui/core'\r\n\r\nimport { handleLogin } from '../actions/authedUser'\r\n\r\nconst styles = {\r\n    main: {\r\n        height: '100vh',\r\n        maxWidth: '100vw',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n}\r\n\r\n/**\r\n * This container allows the user to select from a list of users.\r\n * This selection will be stored in the store.\r\n *\r\n * @class Login\r\n * @extends {Component}\r\n */\r\nclass Login extends Component {\r\n    handleLoginClick = id => {\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(handleLogin(id))\r\n    }\r\n\r\n    render() {\r\n        const { users } = this.props.users\r\n        const { classes } = this.props\r\n\r\n        if (!users) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading users...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.main}\r\n                spacing={32}\r\n            >\r\n                {Object.entries(users).map(([id, user]) => this.renderUser(user))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderUser = user => {\r\n        const { id } = user\r\n        const { classes } = this.props\r\n        return (\r\n            <Grid item key={id}>\r\n                <Button onClick={() => this.handleLoginClick(id)}>\r\n                    <Avatar alt={user.name} src={user.avatarURL} className={classes.avatar} />\r\n                    <Typography align=\"center\">{user.name}</Typography>\r\n                </Button>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nconst StyledLogin = withStyles(styles)(Login)\r\n\r\nexport default connect(mapStateToProps)(StyledLogin)\r\n","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n    }\r\n}\r\n","import { getInitialData } from '../helpers/api'\r\nimport { receiveUsers } from '../actions/users'\r\nimport { receiveQuestions } from '../actions/questions'\r\n\r\n/**\r\n * Dispatched when the app loads.\r\n * Fetches all of the question and user data.\r\n *\r\n * @export\r\n * @returns {Promise} This resolves when the user data is retrieved.\r\n */\r\nexport function handleInitialData() {\r\n    return dispatch => {\r\n        return getInitialData().then(({ users, questions }) => {\r\n            dispatch(receiveUsers(users))\r\n            dispatch(receiveQuestions(questions))\r\n        })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Navigation from '../components/Navigation'\r\n\r\nimport CurrentQuestion from './CurrentQuestion'\r\nimport NewQuestion from './NewQuestion'\r\nimport Leaderboard from './Leaderboard'\r\nimport Login from './Login'\r\n\r\nimport { handleInitialData } from '../actions/shared'\r\nimport { theme } from '../helpers/theme'\r\n\r\n/**\r\n * The main app that contains the entire page.\r\n * This also contains the theme provider.\r\n * If the user is not logged in, we'll show the login page.\r\n *\r\n * @class App\r\n * @extends {Component}\r\n */\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(handleInitialData())\r\n    }\r\n\r\n    render() {\r\n        const { authedUser } = this.props\r\n        const loggedIn = Object.entries(authedUser).length !== 0\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                {loggedIn ? (\r\n                    <Router>\r\n                        <Navigation authedUser={authedUser} />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={CurrentQuestion} />\r\n                            <Route path=\"/new\" component={NewQuestion} />\r\n                            <Route path=\"/leaderboard\" component={Leaderboard} />\r\n                        </Switch>\r\n                    </Router>\r\n                ) : (\r\n                    <Login />\r\n                )}\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\r\n\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\nimport questions from './questions'\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n})\r\n","import { SET_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RECEIVE_USERS } from '../actions/users'\r\nimport { SAVE_QUESTION_ANSWER } from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n            // This is basically stolen from the _DATA.js code\r\n            const users = {\r\n                ...state.users,\r\n                [authedUser]: {\r\n                    ...state.users[authedUser],\r\n                    answers: {\r\n                        ...state.users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                ...users,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    RECEIVE_QUESTIONS,\r\n    RETRIEVE_NEW_QUESTION,\r\n    SAVE_QUESTION_ANSWER,\r\n} from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                questions: action.questions,\r\n            }\r\n        case RETRIEVE_NEW_QUESTION:\r\n            for (const key in state.questions) {\r\n                const question = state.questions[key]\r\n                // Concatenate the two arrays to get all votes of the question\r\n                const votes = question.optionOne.votes.concat(question.optionTwo.votes)\r\n                // Find the first question where the user hasn't voted\r\n                let hasVoted = false\r\n                for (const key in votes) {\r\n                    if (votes[key] === action.authedUser.id) {\r\n                        hasVoted = true\r\n                    }\r\n                }\r\n                if (!hasVoted) {\r\n                    return {\r\n                        ...state,\r\n                        currentQuestion: key,\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                currentQuestion: null,\r\n            }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n            // This is basically stolen from the _DATA.js code\r\n            const questions = {\r\n                ...state.questions,\r\n                [qid]: {\r\n                    ...state.questions[qid],\r\n                    [answer]: {\r\n                        ...state.questions[qid][answer],\r\n                        votes: state.questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                questions: { ...questions },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default composeWithDevTools(applyMiddleware(thunk))\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './views/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}