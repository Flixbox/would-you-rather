{"version":3,"sources":["actions/authedUser.js","actions/filter.js","components/Navigation.js","helpers/_DATA.js","helpers/api.js","actions/questions.js","helpers/theme.js","components/Option.js","views/Question.js","views/CurrentQuestion.js","views/NewQuestion.js","views/Leaderboard.js","views/Login.js","actions/users.js","actions/shared.js","views/App.js","serviceWorker.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","reducers/filter.js","middleware/index.js","index.js"],"names":["SET_AUTHED_USER","setAuthedUser","id","arguments","length","undefined","type","SET_FILTER","handleFilterChange","dispatch","setFilter","Navigation","state","anchorEl","filterTexts","handleLogoutClick","_this","props","handleClick","event","setState","currentTarget","handleClose","console","log","_this2","this","_this$props","classes","authedUser","users","filter","avatarURL","react_default","a","createElement","className","root","index_es","position","navBar","react_router_dom","to","replace","menuButton","color","grow","aria-owns","aria-haspopup","onClick","open","Boolean","onClose","map","text","key","alt","src","avatar","react_fontawesome_index_es","icon","faSignOutAlt","Component","StyledNavigation","withStyles","theme","marginLeft","marginRight","textDecoration","maxHeight","float","flexGrow","connect","_ref","catherinegregory","name","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","edwincarr","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","danoliver","author","timestamp","optionOne","votes","optionTwo","saveQuestionAnswer","_ref3","_ref2","qid","answer","Promise","res","rej","setTimeout","Object","objectSpread","defineProperty","concat","_saveQuestionAnswer","RECEIVE_QUESTIONS","RETRIEVE_NEW_QUESTION","SAVE_QUESTION_ANSWER","handleRetrieveNewQuestion","retrieveNewQuestion","handleQuestionAnswer","setQuestionAnswer","catch","e","warn","createMuiTheme","palette","overrides","MuiToolbar","regular","&&","minHeight","height","MuiBottomNavigation","bottom","left","right","typography","useNextVariants","styles","main","flex","width","padding","choseThisOption","backgroundColor","secondary","optionButton","textTransform","optionButtonVoted","chartContainer","chart","maxWidth","Option","renderPieChart","opposite","option","votesThisOption","votesOppositeOption","item","xs","align","dist_default","data","title","value","primary","animate","label","labelStyle","fill","contrastText","totalValue","_this$props2","includes","hasVoted","container","classNames","disabled","answerContainer","variant","StyledOption","navHeight","questionContainer","marginBottom","Question","match","params","question","getPreviousQuestion","questionArray","getQuestionArray","currentId","indexOf","getNextQuestion","push","sort","b","justify","alignItems","_questions$question","previousQuestion","nextQuestion","react","components_Option","assign","showLabels","component","Link","faArrowLeft","faUser","faArrowRight","StyledQuestion","CurrentQuestion","componentDidMount","currentQuestion","react_router","NewQuestion","Leaderboard","Login","handleLoginClick","handleLogin","renderUser","user","spacing","entries","slicedToArray","StyledLogin","margin","RECEIVE_USERS","handleInitialData","all","then","receiveUsers","receiveQuestions","App","loggedIn","CssBaseline_default","components_Navigation","exact","path","views_Login","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","combineReducers","action","composeWithDevTools","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","es","views_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4QAAaA,EAAkB,kBAExB,SAASC,IAAyB,IAAXC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAC/B,MAAO,CACHG,KAAMN,EACNE,MCLD,IAAMK,EAAa,aASnB,SAASC,IAA2B,IAARN,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACpC,OAAO,SAAAM,GACHA,EATD,WAA2B,IAARP,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAC3B,MAAO,CACHG,KAAMC,EACNL,MAMSQ,CAAUR,yBCwBrBS,6MACFC,MAAQ,CACJC,SAAU,QAGdC,YAAc,CAAC,gBAAiB,aAAc,cAE9CC,kBAAoB,YAGhBN,EAFqBO,EAAKC,MAAlBR,UF3BL,SAAAA,GACHA,EAASR,UE+BbiB,YAAc,SAAAC,GACVH,EAAKI,SAAS,CAAEP,SAAUM,EAAME,mBAGpCC,YAAc,SAAApB,GAAM,IACRO,EAAaO,EAAKC,MAAlBR,SACRO,EAAKI,SAAS,CAAEP,SAAU,OAC1BU,QAAQC,IAAItB,GACZO,EAASD,EAAmBN,6EAGvB,IAAAuB,EAAAC,KAAAC,EAC0CD,KAAKT,MAA5CW,EADHD,EACGC,QAASC,EADZF,EACYE,WAAYC,EADxBH,EACwBG,MAAOC,EAD/BJ,EAC+BI,OAC5BlB,EAAaa,KAAKd,MAAlBC,SAEFmB,EAAYF,EAAMA,MAAMD,EAAW3B,IAAI8B,UAE7C,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQS,MACpBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,SAAS,UACbN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASF,UAAWR,EAAQY,QACxBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,IAAIC,SAAO,EAACP,UAAWR,EAAQgB,YACpCX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAd,sBAEJZ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,OAAOC,SAAO,EAACP,UAAWR,EAAQgB,YACvCX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAd,iBAEJZ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,eAAeC,SAAO,EAACP,UAAWR,EAAQgB,YAC/CX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAd,gBAEJZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQkB,OACxBb,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIS,YAAWlC,EAAW,mBAAgBR,EACtC2C,gBAAc,OACdC,QAASvB,KAAKR,YACdkB,UAAWR,EAAQgB,YAElBlB,KAAKZ,YAAYiB,IAAW,UAEjCE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIpC,GAAG,cACHW,SAAUA,EACVqC,KAAMC,QAAQtC,GACduC,QAAS1B,KAAKJ,aAEbI,KAAKZ,YAAYuC,IAAI,SAACC,EAAMpD,GAAP,OAClB+B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAUW,QAAS,kBAAMxB,EAAKH,YAAYpB,IAAKqD,IAAKD,GAC/CA,MAIbrB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,WAAWC,SAAO,EAACP,UAAWR,EAAQgB,YAC3CX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAWhB,EAAW3B,IACpC+B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQkB,IAAI,SAASC,IAAKzB,EAAWI,UAAWR,EAAQ8B,UAE5DzB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,UAAUI,QAAS,kBAAMxB,EAAKV,sBACxCkB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAMC,kBAtE9BC,aAwFzB,IAAMC,EAAmBC,qBA/GV,SAAAC,GAAK,MAAK,CACrBrB,WAAY,CACRsB,YAAa,GACbC,YAAa,GACbC,eAAgB,OAChBvB,MAAO,QACPwB,UAAW,QAEfX,OAAQ,CACJW,UAAW,OACXC,MAAO,SAEXxB,KAAM,CACFyB,SAAU,KAkGOP,CAAmBrD,GAE7B6D,cAVf,SAAAC,GACI,MAAO,CACH3C,MAFgD2C,EAA7B3C,MAGnBD,WAHgD4C,EAAtB5C,WAI1BE,OAJgD0C,EAAV1C,SAU/ByC,CAAyBT,0BC7HpCjC,EAAQ,CACR4C,iBAAkB,CACdxE,GAAI,mBACJyE,KAAM,oBACN3C,UAAW,mDACX4C,QAAS,CACLC,yBAA0B,YAC1BC,uBAAwB,YACxBC,uBAAwB,YACxBC,sBAAuB,aAE3BC,UAAW,CAAC,yBAA0B,2BAE1CC,UAAW,CACPhF,GAAI,YACJyE,KAAM,aACN3C,UAAW,iDACX4C,QAAS,CACLO,sBAAuB,YACvBC,uBAAwB,aAE5BH,UAAW,CAAC,wBAAyB,0BAEzCI,UAAW,CACPnF,GAAI,YACJyE,KAAM,aACN3C,UAAW,iDACX4C,QAAS,CACLQ,uBAAwB,YACxBD,sBAAuB,YACvBL,uBAAwB,aAE5BG,UAAW,CAAC,uBAAwB,4BAIxCA,EAAY,CACZJ,yBAA0B,CACtB3E,GAAI,yBACJoF,OAAQ,mBACRC,UAAW,cACXC,UAAW,CACPC,MAAO,CAAC,oBACRnC,KAAM,mCAEVoC,UAAW,CACPD,MAAO,GACPnC,KAAM,mCAGdwB,uBAAwB,CACpB5E,GAAI,uBACJoF,OAAQ,YACRC,UAAW,cACXC,UAAW,CACPC,MAAO,GACPnC,KAAM,sBAEVoC,UAAW,CACPD,MAAO,CAAC,YAAa,oBACrBnC,KAAM,0BAGdyB,uBAAwB,CACpB7E,GAAI,yBACJoF,OAAQ,mBACRC,UAAW,cACXC,UAAW,CACPC,MAAO,GACPnC,KAAM,kBAEVoC,UAAW,CACPD,MAAO,CAAC,oBACRnC,KAAM,kBAGd0B,sBAAuB,CACnB9E,GAAI,wBACJoF,OAAQ,YACRC,UAAW,cACXC,UAAW,CACPC,MAAO,GACPnC,KAAM,4BAEVoC,UAAW,CACPD,MAAO,CAAC,oBACRnC,KAAM,4BAGd6B,sBAAuB,CACnBjF,GAAI,wBACJoF,OAAQ,YACRC,UAAW,cACXC,UAAW,CACPC,MAAO,CAAC,aACRnC,KAAM,qBAEVoC,UAAW,CACPD,MAAO,CAAC,aACRnC,KAAM,oCAGd8B,uBAAwB,CACpBlF,GAAI,yBACJoF,OAAQ,YACRC,UAAW,cACXC,UAAW,CACPC,MAAO,CAAC,aACRnC,KAAM,oBAEVoC,UAAW,CACPD,MAAO,CAAC,aACRnC,KAAM,iBCnGX,SAASqC,EAATC,GACH,ODsKG,SAAAC,GAA0D,IAA3BhE,EAA2BgE,EAA3BhE,WAAYiE,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,OACnD,OAAO,IAAIC,QAAQ,SAACC,EAAKC,GACrBC,WAAW,WACPrE,EAAKsE,OAAAC,EAAA,EAAAD,CAAA,GACEtE,EADFsE,OAAAE,EAAA,EAAAF,CAAA,GAEAvE,EAFAuE,OAAAC,EAAA,EAAAD,CAAA,GAGMtE,EAAMD,GAHZ,CAIG+C,QAAQwB,OAAAC,EAAA,EAAAD,CAAA,GACDtE,EAAMD,GAAY+C,QADlBwB,OAAAE,EAAA,EAAAF,CAAA,GAEFN,EAAMC,QAKnBd,EAASmB,OAAAC,EAAA,EAAAD,CAAA,GACFnB,EADEmB,OAAAE,EAAA,EAAAF,CAAA,GAEJN,EAFIM,OAAAC,EAAA,EAAAD,CAAA,GAGEnB,EAAUa,GAHZM,OAAAE,EAAA,EAAAF,CAAA,GAIAL,EAJAK,OAAAC,EAAA,EAAAD,CAAA,GAKMnB,EAAUa,GAAKC,GALrB,CAMGN,MAAOR,EAAUa,GAAKC,GAAQN,MAAMc,OAAO,CAAC1E,UAKxDoE,KACD,OChMAO,CAAoB,CAAE3E,WAD+B+D,EAA3B/D,WACQiE,IADmBF,EAAfE,IACCC,OADcH,EAAVG,SCX/C,IAAMU,EAAoB,oBACpBC,EAAwB,wBACxBC,EAAuB,uBAgB7B,SAASC,EAA0B/E,GACtC,OAAO,SAAApB,GACHA,EATD,SAA6BoB,GAChC,MAAO,CACHvB,KAAMoG,EACN7E,cAMSgF,CAAoBhF,KAa9B,SAASiF,EAATjB,GAA2D,IAA3BhE,EAA2BgE,EAA3BhE,WAAYiE,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,OACpD,OAAO,SAAAtF,GAGH,OAFAA,EAXD,SAAAgE,GAAwD,IAA3B5C,EAA2B4C,EAA3B5C,WAAYiE,EAAerB,EAAfqB,IAAKC,EAAUtB,EAAVsB,OACjD,MAAO,CACHzF,KAAMqG,EACN9E,aACAiE,MACAC,UAMSgB,CAAkB,CAAElF,WAAYA,EAAW3B,GAAI4F,MAAKC,YAEtDJ,EAAmB,CAAE9D,WAAYA,EAAW3B,GAAI4F,MAAKC,WAAUiB,MAAM,SAAAC,GACxE1F,QAAQ2F,KAAK,kCAAmCD,MCtCrD,IAEMhD,EAAQkD,yBAAe,CAChCC,QAAS,CACL9G,KAAM,QAEV+G,UAAW,CACPC,WAAY,CACRC,QAAS,CACLC,KAAM,CACFC,UAAS,GAAAlB,OAVJ,GAUI,MACTmB,OAAM,GAAAnB,OAXD,GAWC,MACNlC,UAAS,GAAAkC,OAZJ,GAYI,SAIrBoB,oBAAqB,CACjBtF,KAAM,CACFoF,UAAS,GAAAlB,OAlBA,GAkBA,MACTmB,OAAM,GAAAnB,OAnBG,GAmBH,MACNlC,UAAS,GAAAkC,OApBA,GAoBA,MACThE,SAAU,WACVqF,OAAQ,EACRC,KAAM,EACNC,MAAO,KAInBC,WAAY,CAAEC,iBAAiB,wCCR7BC,EAAS,CACXC,KAAM,CACFC,KAAM,WACNC,MAAO,MACPV,OAAM,OACNW,QAAS,OAEbC,gBAAiB,CACbC,gBAAiBtE,EAAMmD,QAAQoB,UAAUN,MAE7CO,aAAc,CACVf,OAAQ,OACRU,MAAO,OACPM,cAAe,QAEnBC,kBAAmB,CACfjB,OAAQ,MACRU,MAAO,OACPM,cAAe,QAEnBE,eAAgB,CACZvE,UAAW,OAEfwE,MAAO,CAEHC,SAAU,SAIZC,6MAwCFC,eAAiB,WAAM,IAAArH,EAC4CX,EAAKC,MAA5DW,EADWD,EACXC,QAA2B6D,GADhB9D,EACFE,WADEF,EACU2B,KADV3B,EACgB8D,OAAewD,GAD/BtH,EACuBuH,OADvBvH,EAC+BsH,UAC5CE,EAAkB1D,EAAMrF,OACxBgJ,EAAsBH,EAASxD,MAAMrF,OAC3C,OACI6B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM+G,MAAI,EAACC,GAAI,GAAIlH,UAAWR,EAAQgH,eAAgBW,MAAM,UACxDtH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CACIE,UAAWR,EAAQiH,MACnBY,KAAM,CACF,CACIC,MAAO,cACPC,MAAOR,EACPtG,MAAOoB,EAAMmD,QAAQwC,QAAQ1B,OAGrC2B,SAAO,EACPC,OAAK,EACLC,WAAY,CACRC,KAAM/F,EAAMmD,QAAQwC,QAAQK,cAEhCC,WAAYd,EAAsBD,8EA3DzC,IAAAgB,EASDzI,KAAKT,MAPLW,EAFCuI,EAEDvI,QACAC,EAHCsI,EAGDtI,WACAyB,EAJC6G,EAID7G,KACAmC,EALC0E,EAKD1E,MACAyD,EANCiB,EAMDjB,OACApC,EAPCqD,EAODrD,qBACAmC,EARCkB,EAQDlB,SAGEX,EAAkB7C,EAAM2E,SAASvI,EAAW3B,IAC5CmK,EAAWpB,EAASxD,MAAM2E,SAASvI,EAAW3B,KAAOoI,EAE3D,OACIrG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIgI,WAAS,EACTlI,UAAWmI,IACP3I,EAAQsG,KACRI,EAAkB1G,EAAQ0G,gBAAkB,OAGhDrG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIF,UAAWiI,EAAWzI,EAAQ+G,kBAAoB/G,EAAQ6G,aAC1D+B,SAAUH,EACVd,MAAM,SACNtG,QAAS,kBAAM6D,EAAqBoC,KAEpCjH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMgI,WAAS,GACXrI,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM+G,MAAI,EAACC,GAAI,GAAIlH,UAAWR,EAAQ6I,iBAClCxI,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYoI,QAAQ,MAAMpH,MAIrC+G,EAAW3I,KAAKsH,iBAAmB,aAnC/BlF,aAqEN6G,EAFM3G,qBAAWiE,EAAXjE,CAAmB+E,GCjGlCd,EAAS,CACXC,KAAM,CAEFR,OAAM,eAAAnB,OAAiBqE,IAAjB,QAEV1B,OAAQ,CACJf,KAAM,WACNC,MAAO,MACPV,OAAM,QAEVmD,kBAAmB,CACfzC,MAAO,OACPC,QAAS,MACTX,OAAM,GAAAnB,OFhCW,GEgCX,OAEV3C,KAAM,CACFkH,aAAc,QAWhBC,6MACFjE,qBAAuB,SAAAoC,GAAU,IAAAvH,EACWX,EAAKC,OAG7CR,EAJ6BkB,EACrBlB,UAGCqG,EAAqB,CAAEjF,WAJHF,EACXE,WAG0BiE,IAJfnE,EACCqJ,MACHC,OAAnBC,SAEmDnF,OAAQmD,QAQvEiC,oBAAsB,SAACD,EAAUjG,GAC7B,IAAMmG,EAAgBpK,EAAKqK,iBAAiBpG,GACtCqG,EAAYF,EAAcG,QAAQtG,EAAUiG,IAClD,OAAII,GAAa,EAENrG,EAAUiG,GAAUhL,GAExBkL,EAAcE,EAAY,GAAGpL,MAQxCsL,gBAAkB,SAACN,EAAUjG,GACzB,IAAMmG,EAAgBpK,EAAKqK,iBAAiBpG,GACtCqG,EAAYF,EAAcG,QAAQtG,EAAUiG,IAClD,OAAII,GAAaF,EAAchL,OAAS,EAE7B6E,EAAUiG,GAAUhL,GAExBkL,EAAcE,EAAY,GAAGpL,MAQxCmL,iBAAmB,SAAApG,GACf,IAAImG,EAAgB,GACpB,IAAK,IAAMF,KAAYjG,EACnBmG,EAAcK,KAAKxG,EAAUiG,IAKjC,OAHAE,EAAcM,KAAK,SAACxJ,EAAGyJ,GACnB,OAAOzJ,EAAEqD,UAAYoG,EAAEpG,YAEpB6F,2EAGF,IAAAjB,EACkCzI,KAAKT,MAApCW,EADHuI,EACGvI,QAASC,EADZsI,EACYtI,WACTqJ,EAFHf,EACwBa,MACFC,OAAnBC,SACAjG,EAAcvD,KAAKT,MAAMgE,UAAzBA,UAER,IAAKiG,IAAajG,EAAUiG,GACxB,OACIjJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMgI,WAAS,EAACsB,QAAQ,SAASC,WAAW,SAASzJ,UAAWR,EAAQsG,MACpEjG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYoI,QAAQ,MAApB,uBACAzI,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYoI,QAAQ,SAApB,mEACqEQ,EADrE,8BAIAjJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,KACLT,EAAAC,EAAAC,cAACG,EAAA,EAAD,wBAdX,IAAAwJ,EAoBwC7G,EAAUiG,GAA3C5F,GApBPwG,EAoBG5L,GApBH4L,EAoBOxG,QAAQE,EApBfsG,EAoBetG,UAAWE,EApB1BoG,EAoB0BpG,UAEzBqG,EAAmBrK,KAAKyJ,oBAAoBD,EAAUjG,GACtD+G,EAAetK,KAAK8J,gBAAgBN,EAAUjG,GAGpD,OACIhD,EAAAC,EAAAC,cAAC8J,EAAA,SAAD,KACIhK,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQiJ,mBACpB5I,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYoI,QAAQ,KAAKnB,MAAM,UAA/B,wBAIJtH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMgI,WAAS,EAAClI,UAAWR,EAAQsG,MAC/BjG,EAAAC,EAAAC,cAAC+J,EAAD9F,OAAA+F,OAAA,GACQ3G,EADR,CAEI0D,OAAO,YACPpC,qBAAsBpF,KAAKoF,qBAC3BjF,WAAYA,EACZoH,SAAUvD,KAEdzD,EAAAC,EAAAC,cAAC+J,EAAD9F,OAAA+F,OAAA,GACQzG,EADR,CAEIwD,OAAO,YACPpC,qBAAsBpF,KAAKoF,qBAC3BjF,WAAYA,EACZoH,SAAUzD,MAGlBvD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAkB8J,YAAU,GACxBnK,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACI+J,UAAWC,IACX5J,GAAE,cAAA6D,OAAgBwF,GAClBjC,MAAM,WACNlG,KAAM3B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAM2I,IAAanK,UAAWR,EAAQgC,OAC7D4G,SAAUuB,IAAqBb,IAEnCjJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIwH,MAAOxE,EACP1B,KAAM3B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAM4I,IAAQpK,UAAWR,EAAQgC,SAE5D3B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACI+J,UAAWC,IACX5J,GAAE,cAAA6D,OAAgByF,GAClBlC,MAAM,OACNlG,KAAM3B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAM6I,IAAcrK,UAAWR,EAAQgC,OAC9D4G,SAAUwB,IAAiBd,aAxH5BpH,aAuIvB,IAAM4I,EAAiB1I,qBAAWiE,EAAXjE,CAAmB+G,GAE3BvG,cATf,SAAAC,GACI,MAAO,CACH5C,WAF4C4C,EAAzB5C,WAGnBoD,UAH4CR,EAAbQ,YASxBT,CAAyBkI,GCxKlCC,6MACFC,kBAAoB,WACY5L,EAAKC,MAAMgE,UAA/B4H,iBAGJ7L,EAAK6F,yBAIbA,oBAAsB,WAAM,IAAAlF,EACSX,EAAKC,OAEtCR,EAHwBkB,EAChBlB,UAECmG,EAHejF,EACNE,sFAKb,IACGgL,EAAoBnL,KAAKT,MAAMgE,UAA/B4H,gBAER,OAAKA,EAQE5K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAUpK,GAAE,aAAA6D,OAAesG,KAN1B5K,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMgI,WAAS,EAACsB,QAAQ,SAASC,WAAW,UACxC5J,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYoI,QAAQ,MAApB,+BArBU5G,aAqCfU,kBAPf,SAAAC,GACI,MAAO,CACH5C,WAF4C4C,EAAzB5C,WAGnBoD,UAH4CR,EAAbQ,YAOxBT,CAAyBmI,GCpDnBI,mLAEb,OAAO9K,EAAAC,EAAAC,cAAA,iCAF0B2B,aCApBkJ,oLAEb,OAAO/K,EAAAC,EAAAC,cAAA,iCAF0B2B,aCyBnCmJ,8MACFC,iBAAmB,SAAAhN,IAGfO,EAFqBO,EAAKC,MAAlBR,UZpBT,SAAqBP,GACxB,OAAO,SAAAO,GACHA,EAASR,EAAcC,KYoBdiN,CAAYjN,OA4BzBkN,WAAa,SAAAC,GAAQ,IACTnN,EAAOmN,EAAPnN,GACA0B,EAAYZ,EAAKC,MAAjBW,QACR,OACIK,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM+G,MAAI,EAAC9F,IAAKrD,GACZ+B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQW,QAAS,kBAAMjC,EAAKkM,iBAAiBhN,KACzC+B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQkB,IAAK6J,EAAK1I,KAAMlB,IAAK4J,EAAKrL,UAAWI,UAAWR,EAAQ8B,SAChEzB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYiH,MAAM,UAAU8D,EAAK1I,iFAhCxC,IAAAlD,EAAAC,KACGI,EAAUJ,KAAKT,MAAMa,MAArBA,MACAF,EAAYF,KAAKT,MAAjBW,QAER,OAAKE,EASDG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIgI,WAAS,EACTsB,QAAQ,SACRC,WAAW,SACXzJ,UAAWR,EAAQsG,KACnBoF,QAAS,IAERlH,OAAOmH,QAAQzL,GAAOuB,IAAI,SAAAoB,GAAA,IAAAoB,EAAAO,OAAAoH,EAAA,EAAApH,CAAA3B,EAAA,GAAM4I,GAANxH,EAAA,GAAAA,EAAA,WAAgBpE,EAAK2L,WAAWC,MAd3DpL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMgI,WAAS,EAACsB,QAAQ,SAASC,WAAW,SAASzJ,UAAWR,EAAQsG,MACpEjG,EAAAC,EAAAC,cAACG,EAAA,EAAD,iCAdAwB,aAoDpB,IAAM2J,GAAczJ,qBAvEL,CACXkE,KAAM,CACFR,OAAQ,QACRoB,SAAU,SAEdpF,OAAQ,CACJgK,OAAQ,GACRtF,MAAO,IACPV,OAAQ,MA+DI1D,CAAmBiJ,IAExBzI,eARf,SAAAoB,GACI,MAAO,CACH9D,MAF4B8D,EAAT9D,QAQZ0C,CAAyBiJ,ICjF3BE,GAAgB,gBCWtB,SAASC,KACZ,OAAO,SAAAnN,GACH,OVVGuF,QAAQ6H,IAAI,CD8HZ,IAAI7H,QAAQ,SAACC,EAAKC,GACrBC,WAAW,kBAAMF,EAAIG,OAAAC,EAAA,EAAAD,CAAA,GAAKtE,KAAU,OAKjC,IAAIkE,QAAQ,SAACC,EAAKC,GACrBC,WAAW,kBAAMF,EAAIG,OAAAC,EAAA,EAAAD,CAAA,GAAKnB,KAAc,SCrIO6I,KAAK,SAAArJ,GAAA,IAAAoB,EAAAO,OAAAoH,EAAA,EAAApH,CAAA3B,EAAA,SAAyB,CAC7E3C,MADoD+D,EAAA,GAEpDZ,UAFoDY,EAAA,MUU5BiI,KAAK,SAAArJ,GAA0B,IAAvB3C,EAAuB2C,EAAvB3C,MAAOmD,EAAgBR,EAAhBQ,UACnCxE,EDZL,SAAsBqB,GACzB,MAAO,CACHxB,KAAMqN,GACN7L,SCSaiM,CAAajM,IACtBrB,ETTL,SAA0BwE,GAC7B,MAAO,CACH3E,KAAMmG,EACNxB,aSMa+I,CAAiB/I,WCUhCgJ,+LAEEvM,KAAKT,MAAMR,SAASmN,uCAGf,IACG/L,EAAeH,KAAKT,MAApBY,WACFqM,EAAiD,IAAtC9H,OAAOmH,QAAQ1L,GAAYzB,QAAgByB,EAAW3B,GAEvE,OACI+B,EAAAC,EAAAC,cAAC8F,EAAA,iBAAD,CAAkBhE,MAAOA,GACrBhC,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,MACCgM,EACGjM,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACIR,EAAAC,EAAAC,cAACiM,EAAD,MACAnM,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,KACI7K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOuB,OAAK,EAACC,KAAK,IAAIjC,UAAWM,IACjC1K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOwB,KAAK,OAAOjC,UAAWU,IAC9B9K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOwB,KAAK,eAAejC,UAAWW,KACtC/K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOwB,KAAK,uBAAuBjC,UAAWtB,MAItD9I,EAAAC,EAAAC,cAACoM,GAAD,cAvBFzK,aAoCHU,mBANf,SAAAC,GACI,MAAO,CACH5C,WAFiC4C,EAAd5C,aAMZ2C,CAAyByJ,ICjDlCO,GAAcrL,QACW,cAA7BsL,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3D,MACvB,2DAsCN,SAAS4D,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTf,KAAK,SAAAoB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxO,QACfmO,UAAUC,cAAcO,YAI1BhO,QAAQC,IACN,iHAKEsN,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB3N,QAAQC,IAAI,sCAGRsN,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,UAO5BlI,MAAM,SAAA0I,GACLnO,QAAQmO,MAAM,4CAA6CA,kBCzFlDC,8BAAgB,CAC3B9N,WCNW,WAAwB,IAAvBjB,EAAuBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIyP,EAAWzP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQuP,EAAOtP,MACX,KAAKN,EACD,OAAOoG,OAAAC,EAAA,EAAAD,CAAA,GACAxF,EADP,CAEIV,GAAI0P,EAAO1P,KAEnB,QACI,OAAOU,IDDfkB,MENW,WAAwB,IAAvBlB,EAAuBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIyP,EAAWzP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQuP,EAAOtP,MACX,KAAKqN,GACD,OAAOvH,OAAAC,EAAA,EAAAD,CAAA,GACAxF,EADP,CAEIkB,MAAO8N,EAAO9N,QAEtB,KAAK6E,EAAL,IACY9E,EAA4B+N,EAA5B/N,WAAYiE,EAAgB8J,EAAhB9J,IAAKC,EAAW6J,EAAX7J,OAEnBjE,EAAKsE,OAAAC,EAAA,EAAAD,CAAA,GACJxF,EAAMkB,MADFsE,OAAAE,EAAA,EAAAF,CAAA,GAENvE,EAFMuE,OAAAC,EAAA,EAAAD,CAAA,GAGAxF,EAAMkB,MAAMD,GAHZ,CAIH+C,QAAQwB,OAAAC,EAAA,EAAAD,CAAA,GACDxF,EAAMkB,MAAMD,GAAY+C,QADxBwB,OAAAE,EAAA,EAAAF,CAAA,GAEFN,EAAMC,QAInB,OAAOK,OAAAC,EAAA,EAAAD,CAAA,GACAxF,EACAkB,GAEX,QACI,OAAOlB,IFlBfqE,UGJW,WAAwB,IAAvBrE,EAAuBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIyP,EAAWzP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQuP,EAAOtP,MACX,KAAKmG,EACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAxF,EADP,CAEIqE,UAAW2K,EAAO3K,YAE1B,KAAKyB,EACD,IAAK,IAAMnD,KAAO3C,EAAMqE,UAAW,CAC/B,IAAMiG,EAAWtK,EAAMqE,UAAU1B,GAE3BkC,EAAQyF,EAAS1F,UAAUC,MAAMc,OAAO2E,EAASxF,UAAUD,OAE7D4E,GAAW,EACf,IAAK,IAAM9G,KAAOkC,EACVA,EAAMlC,KAASqM,EAAO/N,WAAW3B,KACjCmK,GAAW,GAGnB,IAAKA,EACD,OAAOjE,OAAAC,EAAA,EAAAD,CAAA,GACAxF,EADP,CAEIiM,gBAAiBtJ,IAI7B,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GACAxF,EADP,CAEIiM,gBAAiB,OAEzB,KAAKlG,EAAL,IACY9E,EAA4B+N,EAA5B/N,WAAYiE,EAAgB8J,EAAhB9J,IAAKC,EAAW6J,EAAX7J,OAGnBd,EAASmB,OAAAC,EAAA,EAAAD,CAAA,GACRxF,EAAMqE,UADEmB,OAAAE,EAAA,EAAAF,CAAA,GAEVN,EAFUM,OAAAC,EAAA,EAAAD,CAAA,GAGJxF,EAAMqE,UAAUa,GAHZM,OAAAE,EAAA,EAAAF,CAAA,GAINL,EAJMK,OAAAC,EAAA,EAAAD,CAAA,GAKAxF,EAAMqE,UAAUa,GAAKC,GALrB,CAMHN,MAAO7E,EAAMqE,UAAUa,GAAKC,GAAQN,MAAMc,OAAO,CAAC1E,UAI9D,OAAOuE,OAAAC,EAAA,EAAAD,CAAA,GACAxF,EADP,CAEIqE,UAAUmB,OAAAC,EAAA,EAAAD,CAAA,GAAMnB,KAExB,QACI,OAAOrE,IH5CfmB,OITW,WAAwB,IAAvBnB,EAAuBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIyP,EAAWzP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQuP,EAAOtP,MACX,KAAKC,EACD,OAAOqP,EAAO1P,GAClB,QACI,OAAOU,0BCHJiP,kCAAoBC,2BAAgBC,OCM7CC,GAAQC,uBAAYC,GAASC,IAEnCC,IAASC,OACLpO,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAUN,MAAOA,IACb/N,EAAAC,EAAAC,cAACoO,GAAD,OAEJC,SAASC,eAAe,SPMrB,SAAkB3B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI2B,IAAIC,oBAAwBlC,OAAOC,SAASkC,MACpDC,SAAWpC,OAAOC,SAASmC,OAIvC,OAGFpC,OAAOqC,iBAAiB,OAAQ,WAC9B,IAAMjC,EAAK,GAAAtI,OAAMoK,oBAAN,sBAEPnC,IAgEV,SAAiCK,EAAOC,GAEtCiC,MAAMlC,GACHf,KAAK,SAAAkD,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAY1F,QAAQ,cAG5CwD,UAAUC,cAAcqC,MAAMvD,KAAK,SAAAoB,GACjCA,EAAaoC,aAAaxD,KAAK,WAC7BW,OAAOC,SAAS6C,aAKpB3C,GAAgBC,EAAOC,KAG1B9H,MAAM,WACLzF,QAAQC,IACN,mEArFAgQ,CAAwB3C,EAAOC,GAI/BC,UAAUC,cAAcqC,MAAMvD,KAAK,WACjCvM,QAAQC,IACN,gHAMJoN,GAAgBC,EAAOC,MO5B/BE","file":"static/js/main.d85af710.chunk.js","sourcesContent":["export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id = null) {\r\n    return {\r\n        type: SET_AUTHED_USER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleLogin(id) {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser(id))\r\n    }\r\n}\r\n\r\nexport function handleLogout() {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser())\r\n    }\r\n}\r\n","export const SET_FILTER = 'SET_FILTER'\r\n\r\nexport function setFilter(id = 0) {\r\n    return {\r\n        type: SET_FILTER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleFilterChange(id = 0) {\r\n    return dispatch => {\r\n        dispatch(setFilter(id))\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar, Avatar, Menu, MenuItem } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { handleLogout } from '../actions/authedUser'\r\nimport { handleFilterChange } from '../actions/filter'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = theme => ({\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        maxHeight: '100%',\r\n    },\r\n    avatar: {\r\n        maxHeight: '100%',\r\n        float: 'right',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n})\r\n\r\n/**\r\n * This element represents the top navigation of the application.\r\n *\r\n * @class Navigation\r\n * @extends {Component}\r\n */\r\nclass Navigation extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    }\r\n\r\n    filterTexts = ['All questions', 'Unanswered', 'Answered']\r\n\r\n    handleLogoutClick = () => {\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(handleLogout())\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget })\r\n    }\r\n\r\n    handleClose = id => {\r\n        const { dispatch } = this.props\r\n        this.setState({ anchorEl: null })\r\n        console.log(id)\r\n        dispatch(handleFilterChange(id))\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser, users, filter } = this.props\r\n        const { anchorEl } = this.state\r\n\r\n        const avatarURL = users.users[authedUser.id].avatarURL\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar className={classes.navBar}>\r\n                            <Link to=\"/\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Would You Rather?</Button>\r\n                            </Link>\r\n                            <Link to=\"/new\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">New Question</Button>\r\n                            </Link>\r\n                            <Link to=\"/leaderboard\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Leaderboard</Button>\r\n                            </Link>\r\n                            <div className={classes.grow} />\r\n                            <Button\r\n                                aria-owns={anchorEl ? 'filter-menu' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleClick}\r\n                                className={classes.menuButton}\r\n                            >\r\n                                {this.filterTexts[filter] || 'Filter'}\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"filter-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={this.handleClose}\r\n                            >\r\n                                {this.filterTexts.map((text, id) => (\r\n                                    <MenuItem onClick={() => this.handleClose(id)} key={text}>\r\n                                        {text}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                            <Link to=\"/profile\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">{authedUser.id}</Button>\r\n                                <Avatar alt=\"avatar\" src={avatarURL} className={classes.avatar} />\r\n                            </Link>\r\n                            <Button color=\"inherit\" onClick={() => this.handleLogoutClick()}>\r\n                                <FontAwesomeIcon icon={faSignOutAlt} />\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users, authedUser, filter }) {\r\n    return {\r\n        users,\r\n        authedUser,\r\n        filter,\r\n    }\r\n}\r\n\r\nconst StyledNavigation = withStyles(styles)(Navigation)\r\n\r\nexport default connect(mapStateToProps)(StyledNavigation)\r\n","let users = {\r\n    catherinegregory: {\r\n        id: 'catherinegregory',\r\n        name: 'Catherine Gregory',\r\n        avatarURL: 'https://randomuser.me/api/portraits/women/82.jpg',\r\n        answers: {\r\n            '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n            am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n            loxhs1bqm25b708cmbf3g: 'optionTwo',\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\r\n    },\r\n    edwincarr: {\r\n        id: 'edwincarr',\r\n        name: 'Edwin Carr',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/36.jpg',\r\n        answers: {\r\n            vthrdm985a262al8qx3do: 'optionOne',\r\n            xj352vofupe1dqz9emx13r: 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    danoliver: {\r\n        id: 'danoliver',\r\n        name: 'Dan Oliver',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/24.jpg',\r\n        answers: {\r\n            xj352vofupe1dqz9emx13r: 'optionOne',\r\n            vthrdm985a262al8qx3do: 'optionTwo',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    },\r\n}\r\n\r\nlet questions = {\r\n    '8xf0y6ziyjabvozdd253nd': {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'catherinegregory',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['catherinegregory'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory',\r\n        },\r\n    },\r\n    '6ni6ok3ym7mf1p33lnez': {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'danoliver',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver', 'catherinegregory'],\r\n            text: 'become a supervillain',\r\n        },\r\n    },\r\n    am8ehyc8byjqgar0jgpub9: {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'catherinegregory',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be telepathic',\r\n        },\r\n    },\r\n    loxhs1bqm25b708cmbf3g: {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'edwincarr',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be a back-end developer',\r\n        },\r\n    },\r\n    vthrdm985a262al8qx3do: {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'edwincarr',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['edwincarr'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver'],\r\n            text: 'have your best friend find $500',\r\n        },\r\n    },\r\n    xj352vofupe1dqz9emx13r: {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'danoliver',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['danoliver'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['edwincarr'],\r\n            text: 'write Swift',\r\n        },\r\n    },\r\n}\r\n\r\nfunction generateUID() {\r\n    return (\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15) +\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15)\r\n    )\r\n}\r\n\r\nexport function _getUsers() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...users }), 1000)\r\n    })\r\n}\r\n\r\nexport function _getQuestions() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...questions }), 1000)\r\n    })\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n        id: generateUID(),\r\n        timestamp: Date.now(),\r\n        author,\r\n        optionOne: {\r\n            votes: [],\r\n            text: optionOneText,\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: optionTwoText,\r\n        },\r\n    }\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n    return new Promise((res, rej) => {\r\n        const authedUser = question.author\r\n        const formattedQuestion = formatQuestion(question)\r\n\r\n        setTimeout(() => {\r\n            questions = {\r\n                ...questions,\r\n                [formattedQuestion.id]: formattedQuestion,\r\n            }\r\n\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n                },\r\n            }\r\n\r\n            res(formattedQuestion)\r\n        }, 1000)\r\n    })\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    answers: {\r\n                        ...users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n\r\n            questions = {\r\n                ...questions,\r\n                [qid]: {\r\n                    ...questions[qid],\r\n                    [answer]: {\r\n                        ...questions[qid][answer],\r\n                        votes: questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n\r\n            res()\r\n        }, 500)\r\n    })\r\n}\r\n","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA.js'\r\n\r\nexport function getInitialData() {\r\n    return Promise.all([_getUsers(), _getQuestions()]).then(([users, questions]) => ({\r\n        users,\r\n        questions,\r\n    }))\r\n}\r\n\r\nexport function saveQuestion(question) {\r\n    return _saveQuestion(question)\r\n}\r\n\r\nexport function saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return _saveQuestionAnswer({ authedUser, qid, answer })\r\n}\r\n","import { saveQuestionAnswer } from '../helpers/api'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const RETRIEVE_NEW_QUESTION = 'RETRIEVE_NEW_QUESTION'\r\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER'\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport function retrieveNewQuestion(authedUser) {\r\n    return {\r\n        type: RETRIEVE_NEW_QUESTION,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport function handleRetrieveNewQuestion(authedUser) {\r\n    return dispatch => {\r\n        dispatch(retrieveNewQuestion(authedUser))\r\n    }\r\n}\r\n\r\nexport function setQuestionAnswer({ authedUser, qid, answer }) {\r\n    return {\r\n        type: SAVE_QUESTION_ANSWER,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n    }\r\n}\r\n\r\nexport function handleQuestionAnswer({ authedUser, qid, answer }) {\r\n    return dispatch => {\r\n        dispatch(setQuestionAnswer({ authedUser: authedUser.id, qid, answer }))\r\n\r\n        return saveQuestionAnswer({ authedUser: authedUser.id, qid, answer }).catch(e => {\r\n            console.warn('Error in handleQuestionAnswer: ', e)\r\n        })\r\n    }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport const navHeight = 56\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    overrides: {\r\n        MuiToolbar: {\r\n            regular: {\r\n                '&&': {\r\n                    minHeight: `${navHeight}px`,\r\n                    height: `${navHeight}px`,\r\n                    maxHeight: `${navHeight}px`,\r\n                },\r\n            },\r\n        },\r\n        MuiBottomNavigation: {\r\n            root: {\r\n                minHeight: `${navHeight}px`,\r\n                height: `${navHeight}px`,\r\n                maxHeight: `${navHeight}px`,\r\n                position: 'absolute',\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n            },\r\n        },\r\n    },\r\n    typography: { useNextVariants: true },\r\n})\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion } from '../actions/questions'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport PieChart from 'react-minimal-pie-chart'\r\nimport { theme } from '../helpers/theme'\r\n\r\nconst styles = {\r\n    main: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n        padding: '5px',\r\n    },\r\n    choseThisOption: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    optionButton: {\r\n        height: '100%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    optionButtonVoted: {\r\n        height: '50%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    chartContainer: {\r\n        maxHeight: '50%',\r\n    },\r\n    chart: {\r\n        // Limit the chart's width and height, otherwise the chart might go through the bottom of the viewport.\r\n        maxWidth: '20vh',\r\n    },\r\n}\r\n\r\nclass Option extends Component {\r\n    render() {\r\n        const {\r\n            classes,\r\n            authedUser,\r\n            text,\r\n            votes,\r\n            option,\r\n            handleQuestionAnswer,\r\n            opposite,\r\n        } = this.props\r\n\r\n        const choseThisOption = votes.includes(authedUser.id)\r\n        const hasVoted = opposite.votes.includes(authedUser.id) || choseThisOption\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                className={classNames(\r\n                    classes.main,\r\n                    choseThisOption ? classes.choseThisOption : null\r\n                )}\r\n            >\r\n                <Button\r\n                    className={hasVoted ? classes.optionButtonVoted : classes.optionButton}\r\n                    disabled={hasVoted}\r\n                    align=\"center\"\r\n                    onClick={() => handleQuestionAnswer(option)}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12} className={classes.answerContainer}>\r\n                            <Typography variant=\"h3\">{text}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Button>\r\n                {hasVoted ? this.renderPieChart() : null}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderPieChart = () => {\r\n        const { classes, authedUser, text, votes, option, opposite } = this.props\r\n        const votesThisOption = votes.length\r\n        const votesOppositeOption = opposite.votes.length\r\n        return (\r\n            <Grid item xs={12} className={classes.chartContainer} align=\"center\">\r\n                <PieChart\r\n                    className={classes.chart}\r\n                    data={[\r\n                        {\r\n                            title: 'This option',\r\n                            value: votesThisOption,\r\n                            color: theme.palette.primary.main,\r\n                        },\r\n                    ]}\r\n                    animate\r\n                    label\r\n                    labelStyle={{\r\n                        fill: theme.palette.primary.contrastText,\r\n                    }}\r\n                    totalValue={votesOppositeOption + votesThisOption}\r\n                />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledOption = withStyles(styles)(Option)\r\n\r\nexport default StyledOption\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { handleRetrieveNewQuestion, handleQuestionAnswer } from '../actions/questions'\r\n\r\nimport Option from '../components/Option'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = {\r\n    main: {\r\n        // The height of the two navbars and the heading is 3xnavHeight\r\n        height: `calc(100% - ${navHeight * 3}px)`,\r\n    },\r\n    option: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n    },\r\n    questionContainer: {\r\n        width: '100%',\r\n        padding: '5px',\r\n        height: `${navHeight}px`,\r\n    },\r\n    icon: {\r\n        marginBottom: '5px',\r\n    },\r\n}\r\n\r\n/**\r\n * This view renders a question and its data.\r\n * The prop \"match.params.question\" is the ID of the question that should be rendered (so the question is in the URL).\r\n *\r\n * @class Question\r\n * @extends {Component}\r\n */\r\nclass Question extends Component {\r\n    handleQuestionAnswer = option => {\r\n        const { dispatch, authedUser, match } = this.props\r\n        const { question } = match.params\r\n\r\n        dispatch(handleQuestionAnswer({ authedUser, qid: question, answer: option }))\r\n    }\r\n\r\n    /**\r\n     * Returns the question before this one or the current question if this is the first question in the stack.\r\n     *\r\n     * @memberof Question\r\n     */\r\n    getPreviousQuestion = (question, questions) => {\r\n        const questionArray = this.getQuestionArray(questions)\r\n        const currentId = questionArray.indexOf(questions[question])\r\n        if (currentId <= 0) {\r\n            // Link to current question\r\n            return questions[question].id\r\n        }\r\n        return questionArray[currentId - 1].id\r\n    }\r\n\r\n    /**\r\n     * Returns the question after this one or the current question if this is the last question in the stack.\r\n     *\r\n     * @memberof Question\r\n     */\r\n    getNextQuestion = (question, questions) => {\r\n        const questionArray = this.getQuestionArray(questions)\r\n        const currentId = questionArray.indexOf(questions[question])\r\n        if (currentId >= questionArray.length - 1) {\r\n            // Link to current question\r\n            return questions[question].id\r\n        }\r\n        return questionArray[currentId + 1].id\r\n    }\r\n\r\n    /**\r\n     * Sorts the given object by its timestamp and returns an array.\r\n     *\r\n     * @memberof Question\r\n     */\r\n    getQuestionArray = questions => {\r\n        let questionArray = []\r\n        for (const question in questions) {\r\n            questionArray.push(questions[question])\r\n        }\r\n        questionArray.sort((a, b) => {\r\n            return a.timestamp - b.timestamp\r\n        })\r\n        return questionArray\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser, match } = this.props\r\n        const { question } = match.params\r\n        const { questions } = this.props.questions\r\n\r\n        if (!question || !questions[question]) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography variant=\"h1\">Loading question...</Typography>\r\n                    <Typography variant=\"body1\">\r\n                        If this text stays up long enough for you to read it, question \"{question}\"\r\n                        probably doesn't exist.\r\n                    </Typography>\r\n                    <Link to=\"/\">\r\n                        <Button>Take me back!</Button>\r\n                    </Link>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        const { id, author, optionOne, optionTwo } = questions[question]\r\n\r\n        const previousQuestion = this.getPreviousQuestion(question, questions)\r\n        const nextQuestion = this.getNextQuestion(question, questions)\r\n\r\n        // TODO Add avatar\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.questionContainer}>\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                        Would you rather...\r\n                    </Typography>\r\n                </div>\r\n                <Grid container className={classes.main}>\r\n                    <Option\r\n                        {...optionOne}\r\n                        option=\"optionOne\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionTwo}\r\n                    />\r\n                    <Option\r\n                        {...optionTwo}\r\n                        option=\"optionTwo\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionOne}\r\n                    />\r\n                </Grid>\r\n                <BottomNavigation showLabels>\r\n                    <BottomNavigationAction\r\n                        component={Link}\r\n                        to={`/questions/${previousQuestion}`}\r\n                        label=\"Previous\"\r\n                        icon={<FontAwesomeIcon icon={faArrowLeft} className={classes.icon} />}\r\n                        disabled={previousQuestion === question}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        label={author}\r\n                        icon={<FontAwesomeIcon icon={faUser} className={classes.icon} />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        component={Link}\r\n                        to={`/questions/${nextQuestion}`}\r\n                        label=\"Next\"\r\n                        icon={<FontAwesomeIcon icon={faArrowRight} className={classes.icon} />}\r\n                        disabled={nextQuestion === question}\r\n                    />\r\n                </BottomNavigation>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n    }\r\n}\r\n\r\nconst StyledQuestion = withStyles(styles)(Question)\r\n\r\nexport default connect(mapStateToProps)(StyledQuestion)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion } from '../actions/questions'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Question from '../views/Question'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\n/**\r\n * This helper view retrieves the current logged in user's question.\r\n * This question should be the first unanswered one.\r\n *\r\n * @class CurrentQuestion\r\n * @extends {Component}\r\n */\r\nclass CurrentQuestion extends Component {\r\n    componentDidMount = () => {\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            this.retrieveNewQuestion()\r\n        }\r\n    }\r\n\r\n    retrieveNewQuestion = () => {\r\n        const { dispatch, authedUser } = this.props\r\n\r\n        dispatch(handleRetrieveNewQuestion(authedUser))\r\n    }\r\n\r\n    render() {\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Typography variant=\"h1\">Loading question...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return <Redirect to={`questions/${currentQuestion}`} />\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CurrentQuestion)\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NewQuestion extends Component {\r\n    render() {\r\n        return <div>NewQuestion</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Leaderboard extends Component {\r\n    render() {\r\n        return <div>Leaderboard</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Button, Avatar, Grid } from '@material-ui/core'\r\n\r\nimport { handleLogin } from '../actions/authedUser'\r\n\r\nconst styles = {\r\n    main: {\r\n        height: '100vh',\r\n        maxWidth: '100vw',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n}\r\n\r\n/**\r\n * This container allows the user to select from a list of users.\r\n * This selection will be stored in the store.\r\n *\r\n * @class Login\r\n * @extends {Component}\r\n */\r\nclass Login extends Component {\r\n    handleLoginClick = id => {\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(handleLogin(id))\r\n    }\r\n\r\n    render() {\r\n        const { users } = this.props.users\r\n        const { classes } = this.props\r\n\r\n        if (!users) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading users...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.main}\r\n                spacing={32}\r\n            >\r\n                {Object.entries(users).map(([id, user]) => this.renderUser(user))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderUser = user => {\r\n        const { id } = user\r\n        const { classes } = this.props\r\n        return (\r\n            <Grid item key={id}>\r\n                <Button onClick={() => this.handleLoginClick(id)}>\r\n                    <Avatar alt={user.name} src={user.avatarURL} className={classes.avatar} />\r\n                    <Typography align=\"center\">{user.name}</Typography>\r\n                </Button>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nconst StyledLogin = withStyles(styles)(Login)\r\n\r\nexport default connect(mapStateToProps)(StyledLogin)\r\n","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n    }\r\n}\r\n","import { getInitialData } from '../helpers/api'\r\nimport { receiveUsers } from '../actions/users'\r\nimport { receiveQuestions } from '../actions/questions'\r\n\r\n/**\r\n * Dispatched when the app loads.\r\n * Fetches all of the question and user data.\r\n *\r\n * @export\r\n * @returns {Promise} This resolves when the user data is retrieved.\r\n */\r\nexport function handleInitialData() {\r\n    return dispatch => {\r\n        return getInitialData().then(({ users, questions }) => {\r\n            dispatch(receiveUsers(users))\r\n            dispatch(receiveQuestions(questions))\r\n        })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Navigation from '../components/Navigation'\r\n\r\nimport Question from './Question'\r\nimport CurrentQuestion from './CurrentQuestion'\r\nimport NewQuestion from './NewQuestion'\r\nimport Leaderboard from './Leaderboard'\r\nimport Login from './Login'\r\n\r\nimport { handleInitialData } from '../actions/shared'\r\nimport { theme } from '../helpers/theme'\r\n\r\n/**\r\n * The main app that contains the entire page.\r\n * This also contains the theme provider.\r\n * If the user is not logged in, we'll show the login page.\r\n *\r\n * @class App\r\n * @extends {Component}\r\n */\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(handleInitialData())\r\n    }\r\n\r\n    render() {\r\n        const { authedUser } = this.props\r\n        const loggedIn = Object.entries(authedUser).length !== 0 && authedUser.id\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                {loggedIn ? (\r\n                    <Router>\r\n                        <Navigation />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={CurrentQuestion} />\r\n                            <Route path=\"/new\" component={NewQuestion} />\r\n                            <Route path=\"/leaderboard\" component={Leaderboard} />\r\n                            <Route path=\"/questions/:question\" component={Question} />\r\n                        </Switch>\r\n                    </Router>\r\n                ) : (\r\n                    <Login />\r\n                )}\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\nimport questions from './questions'\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n    filter,\r\n})\r\n","import { SET_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RECEIVE_USERS } from '../actions/users'\r\nimport { SAVE_QUESTION_ANSWER } from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n            // This is basically stolen from the _DATA.js code\r\n            const users = {\r\n                ...state.users,\r\n                [authedUser]: {\r\n                    ...state.users[authedUser],\r\n                    answers: {\r\n                        ...state.users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                ...users,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    RECEIVE_QUESTIONS,\r\n    RETRIEVE_NEW_QUESTION,\r\n    SAVE_QUESTION_ANSWER,\r\n} from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                questions: action.questions,\r\n            }\r\n        case RETRIEVE_NEW_QUESTION:\r\n            for (const key in state.questions) {\r\n                const question = state.questions[key]\r\n                // Concatenate the two arrays to get all votes of the question\r\n                const votes = question.optionOne.votes.concat(question.optionTwo.votes)\r\n                // Find the first question where the user hasn't voted\r\n                let hasVoted = false\r\n                for (const key in votes) {\r\n                    if (votes[key] === action.authedUser.id) {\r\n                        hasVoted = true\r\n                    }\r\n                }\r\n                if (!hasVoted) {\r\n                    return {\r\n                        ...state,\r\n                        currentQuestion: key,\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                currentQuestion: null,\r\n            }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n\r\n            // This is basically stolen from the _DATA.js code\r\n            const questions = {\r\n                ...state.questions,\r\n                [qid]: {\r\n                    ...state.questions[qid],\r\n                    [answer]: {\r\n                        ...state.questions[qid][answer],\r\n                        votes: state.questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                questions: { ...questions },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { SET_FILTER } from '../actions/filter'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_FILTER:\r\n            return action.id\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default composeWithDevTools(applyMiddleware(thunk))\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './views/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reducer from './reducers'\r\nimport middleware from './middleware'\r\n\r\nconst store = createStore(reducer, middleware)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}