{"version":3,"sources":["components/Navigation.js","actions/questions.js","views/CurrentQuestion.js","views/NewQuestion.js","views/Leaderboard.js","actions/authedUser.js","views/Login.js","helpers/_DATA.js","actions/users.js","actions/shared.js","helpers/api.js","views/App.js","serviceWorker.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/index.js","index.js"],"names":["Navigation","classes","this","props","react_default","a","createElement","index_es","position","className","root","react_router_dom","to","replace","menuButton","color","Component","withStyles","theme","height","concat","custom","navbarHeight","minHeight","marginLeft","marginRight","textDecoration","RECEIVE_QUESTIONS","RETRIEVE_NEW_QUESTION","handleRetrieveNewQuestion","authedUser","dispatch","type","retrieveNewQuestion","CurrentQuestion","componentDidMount","_this","questions","currentQuestion","_this$props","_this$props$questions","container","justify","alignItems","main","_questions$currentQue","author","id","optionOne","optionTwo","react","classNames","option","showLabels","footer","label","icon","react_fontawesome_index_es","faArrowLeft","faUser","faArrowRight","StyledCurrentQuestion","flex","width","bottom","left","right","footerHeight","marginBottom","connect","_ref","NewQuestion","Leaderboard","SET_AUTHED_USER","handleLogin","setAuthedUser","Login","handleLoginClick","renderUser","user","item","key","onClick","alt","name","src","avatarURL","avatar","align","_this2","users","spacing","Object","entries","map","_ref2","slicedToArray","StyledLogin","maxWidth","margin","_ref3","catherinegregory","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","edwincarr","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","danoliver","timestamp","votes","text","RECEIVE_USERS","handleInitialData","Promise","all","res","rej","setTimeout","objectSpread","then","receiveUsers","receiveQuestions","createMuiTheme","palette","typography","useNextVariants","App","loggedIn","length","styles","CssBaseline_default","components_Navigation","react_router","exact","path","component","views_Login","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","combineReducers","arguments","undefined","action","question","hasVoted","composeWithDevTools","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","es","views_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.25e53360.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        // Fix height for absolute positioning\r\n        height: `${theme.custom.navbarHeight}px`,\r\n        minHeight: `${theme.custom.navbarHeight}px`,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n    },\r\n})\r\n\r\n/**\r\n * This element represents the top navigation of the application.\r\n *\r\n * @class Navigation\r\n * @extends {Component}\r\n */\r\nclass Navigation extends Component {\r\n    render() {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar className={classes.root}>\r\n                    <Link to=\"/\" replace className={classes.menuButton}>\r\n                        <Button color=\"inherit\">Would You Rather?</Button>\r\n                    </Link>\r\n                    <Link to=\"/new\" replace className={classes.menuButton}>\r\n                        <Button color=\"inherit\">New Question</Button>\r\n                    </Link>\r\n                    <Link to=\"/leaderboard\" replace className={classes.menuButton}>\r\n                        <Button color=\"inherit\">Leaderboard</Button>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navigation)\r\n","export const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const RETRIEVE_NEW_QUESTION = 'RETRIEVE_NEW_QUESTION'\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport function retrieveNewQuestion(authedUser) {\r\n    return {\r\n        type: RETRIEVE_NEW_QUESTION,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport function handleRetrieveNewQuestion(authedUser) {\r\n    return dispatch => {\r\n        dispatch(retrieveNewQuestion(authedUser))\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion } from '../actions/questions'\r\n\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = theme => ({\r\n    main: {},\r\n    option: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n    },\r\n    footer: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        // Fix height for absolute positioning\r\n        height: `${theme.custom.footerHeight}px`,\r\n    },\r\n    icon: {\r\n        marginBottom: '5px',\r\n    },\r\n})\r\n\r\nclass CurrentQuestion extends Component {\r\n    componentDidMount = () => {\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            this.retrieveNewQuestion()\r\n        }\r\n    }\r\n\r\n    retrieveNewQuestion = () => {\r\n        const { dispatch, authedUser } = this.props\r\n\r\n        dispatch(handleRetrieveNewQuestion(authedUser))\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { currentQuestion, questions } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading question...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        const { id, author, optionOne, optionTwo } = questions[currentQuestion]\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.main}>\r\n                    <div className={classNames(classes.option, classes.optionOne)} />\r\n                    <div className={classNames(classes.option, classes.optionTwo)} />\r\n                </div>\r\n                <BottomNavigation showLabels className={classes.footer}>\r\n                    <BottomNavigationAction\r\n                        label=\"Previous\"\r\n                        icon={<FontAwesomeIcon icon={faArrowLeft} className={classes.icon} />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        label={author}\r\n                        icon={<FontAwesomeIcon icon={faUser} className={classes.icon} />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        label=\"Next\"\r\n                        icon={<FontAwesomeIcon icon={faArrowRight} className={classes.icon} />}\r\n                    />\r\n                </BottomNavigation>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, currentQuestion }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n    }\r\n}\r\n\r\nconst StyledCurrentQuestion = withStyles(styles)(CurrentQuestion)\r\n\r\nexport default connect(mapStateToProps)(StyledCurrentQuestion)\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NewQuestion extends Component {\r\n    render() {\r\n        return <div>NewQuestion</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Leaderboard extends Component {\r\n    render() {\r\n        return <div>Leaderboard</div>\r\n    }\r\n}\r\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id) {\r\n    return {\r\n        type: SET_AUTHED_USER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleLogin(id) {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser(id))\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Button, Avatar, Grid } from '@material-ui/core'\r\n\r\nimport { handleLogin } from '../actions/authedUser'\r\n\r\nconst styles = {\r\n    main: {\r\n        height: '100vh',\r\n        maxWidth: '100vw',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n}\r\n\r\n/**\r\n * This container allows the user to select from a list of users.\r\n * This selection will be stored in the store.\r\n *\r\n * @class Login\r\n * @extends {Component}\r\n */\r\nclass Login extends Component {\r\n    handleLoginClick = id => {\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(handleLogin(id))\r\n    }\r\n\r\n    render() {\r\n        const { users } = this.props.users\r\n        const { classes } = this.props\r\n\r\n        if (!users) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading users...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.main}\r\n                spacing={32}\r\n            >\r\n                {Object.entries(users).map(([id, user]) => this.renderUser(user))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderUser = user => {\r\n        const { id } = user\r\n        const { classes } = this.props\r\n        return (\r\n            <Grid item key={id}>\r\n                <Button onClick={() => this.handleLoginClick(id)}>\r\n                    <Avatar alt={user.name} src={user.avatarURL} className={classes.avatar} />\r\n                    <Typography align=\"center\">{user.name}</Typography>\r\n                </Button>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nconst StyledLogin = withStyles(styles)(Login)\r\n\r\nexport default connect(mapStateToProps)(StyledLogin)\r\n","let users = {\r\n    catherinegregory: {\r\n        id: 'catherinegregory',\r\n        name: 'Catherine Gregory',\r\n        avatarURL: 'https://randomuser.me/api/portraits/women/82.jpg',\r\n        answers: {\r\n            '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n            am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n            loxhs1bqm25b708cmbf3g: 'optionTwo',\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\r\n    },\r\n    edwincarr: {\r\n        id: 'edwincarr',\r\n        name: 'Edwin Carr',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/36.jpg',\r\n        answers: {\r\n            vthrdm985a262al8qx3do: 'optionOne',\r\n            xj352vofupe1dqz9emx13r: 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    danoliver: {\r\n        id: 'danoliver',\r\n        name: 'Dan Oliver',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/24.jpg',\r\n        answers: {\r\n            xj352vofupe1dqz9emx13r: 'optionOne',\r\n            vthrdm985a262al8qx3do: 'optionTwo',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    },\r\n}\r\n\r\nlet questions = {\r\n    '8xf0y6ziyjabvozdd253nd': {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'catherinegregory',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['catherinegregory'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory',\r\n        },\r\n    },\r\n    '6ni6ok3ym7mf1p33lnez': {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'danoliver',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver', 'catherinegregory'],\r\n            text: 'become a supervillain',\r\n        },\r\n    },\r\n    am8ehyc8byjqgar0jgpub9: {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'catherinegregory',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be telepathic',\r\n        },\r\n    },\r\n    loxhs1bqm25b708cmbf3g: {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'edwincarr',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be a back-end developer',\r\n        },\r\n    },\r\n    vthrdm985a262al8qx3do: {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'edwincarr',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['edwincarr'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver'],\r\n            text: 'have your best friend find $500',\r\n        },\r\n    },\r\n    xj352vofupe1dqz9emx13r: {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'danoliver',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['danoliver'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['edwincarr'],\r\n            text: 'write Swift',\r\n        },\r\n    },\r\n}\r\n\r\nfunction generateUID() {\r\n    return (\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15) +\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15)\r\n    )\r\n}\r\n\r\nexport function _getUsers() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...users }), 1000)\r\n    })\r\n}\r\n\r\nexport function _getQuestions() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...questions }), 1000)\r\n    })\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n        id: generateUID(),\r\n        timestamp: Date.now(),\r\n        author,\r\n        optionOne: {\r\n            votes: [],\r\n            text: optionOneText,\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: optionTwoText,\r\n        },\r\n    }\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n    return new Promise((res, rej) => {\r\n        const authedUser = question.author\r\n        const formattedQuestion = formatQuestion(question)\r\n\r\n        setTimeout(() => {\r\n            questions = {\r\n                ...questions,\r\n                [formattedQuestion.id]: formattedQuestion,\r\n            }\r\n\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n                },\r\n            }\r\n\r\n            res(formattedQuestion)\r\n        }, 1000)\r\n    })\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    answers: {\r\n                        ...users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n\r\n            questions = {\r\n                ...questions,\r\n                [qid]: {\r\n                    ...questions[qid],\r\n                    [answer]: {\r\n                        ...questions[qid][answer],\r\n                        votes: questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n\r\n            res()\r\n        }, 500)\r\n    })\r\n}\r\n","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n    }\r\n}\r\n","import { getInitialData } from '../helpers/api'\r\nimport { receiveUsers } from '../actions/users'\r\nimport { receiveQuestions } from '../actions/questions'\r\n\r\n/**\r\n * Dispatched when the app loads.\r\n * Fetches all of the question and user data.\r\n *\r\n * @export\r\n * @returns {Promise} This resolves when the user data is retrieved.\r\n */\r\nexport function handleInitialData() {\r\n    return dispatch => {\r\n        return getInitialData().then(({ users, questions }) => {\r\n            dispatch(receiveUsers(users))\r\n            dispatch(receiveQuestions(questions))\r\n        })\r\n    }\r\n}\r\n","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA.js'\r\n\r\nexport function getInitialData() {\r\n    return Promise.all([_getUsers(), _getQuestions()]).then(([users, questions]) => ({\r\n        users,\r\n        questions,\r\n    }))\r\n}\r\n\r\nexport function saveQuestion(question) {\r\n    return _saveQuestion(question)\r\n}\r\n\r\nexport function saveQuestionAnswer(authedUser, qid, answer) {\r\n    return _saveQuestionAnswer(authedUser, qid, answer)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nimport Navigation from '../components/Navigation'\r\n\r\nimport CurrentQuestion from './CurrentQuestion'\r\nimport NewQuestion from './NewQuestion'\r\nimport Leaderboard from './Leaderboard'\r\nimport Login from './Login'\r\n\r\nimport { handleInitialData } from '../actions/shared'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    typography: { useNextVariants: true },\r\n    custom: {\r\n        navbarHeight: 56,\r\n        footerHeight: 56,\r\n    },\r\n})\r\n\r\n/**\r\n * The main app that contains the entire page.\r\n * This also contains the theme provider.\r\n * If the user is not logged in, we'll show the login page.\r\n *\r\n * @class App\r\n * @extends {Component}\r\n */\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(handleInitialData())\r\n    }\r\n\r\n    render() {\r\n        const { authedUser } = this.props\r\n        const loggedIn = Object.entries(authedUser).length !== 0\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                {loggedIn ? (\r\n                    <Router>\r\n                        <Navigation />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={CurrentQuestion} />\r\n                            <Route path=\"/new\" component={NewQuestion} />\r\n                            <Route path=\"/leaderboard\" component={Leaderboard} />\r\n                        </Switch>\r\n                    </Router>\r\n                ) : (\r\n                    <Login />\r\n                )}\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\nimport questions from './questions'\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n})\r\n","import { SET_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RECEIVE_USERS } from '../actions/users'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RECEIVE_QUESTIONS, RETRIEVE_NEW_QUESTION } from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                questions: action.questions,\r\n            }\r\n        case RETRIEVE_NEW_QUESTION:\r\n            for (const key in state.questions) {\r\n                const question = state.questions[key]\r\n                // Concatenate the two arrays to get all votes of the question\r\n                const votes = question.optionOne.votes.concat(question.optionTwo.votes)\r\n                // Find the first question where the user hasn't voted\r\n                let hasVoted = false\r\n                for (const key in votes) {\r\n                    if (votes[key] === action.authedUser.id) {\r\n                        hasVoted = true\r\n                    }\r\n                }\r\n                if (!hasVoted) {\r\n                    return {\r\n                        ...state,\r\n                        currentQuestion: key,\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                currentQuestion: null,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default composeWithDevTools(applyMiddleware(thunk))\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './views/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reducer from './reducers'\r\nimport middleware from './middleware'\r\n\r\nconst store = createStore(reducer, middleware)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}