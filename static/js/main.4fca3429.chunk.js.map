{"version":3,"sources":["helpers/_DATA.js","helpers/api.js","actions/questions.js","actions/filter.js","actions/authedUser.js","components/Navigation.js","helpers/theme.js","components/Option.js","views/Question.js","views/CurrentQuestion.js","views/NewQuestion.js","views/Leaderboard.js","views/Login.js","actions/users.js","actions/shared.js","views/App.js","serviceWorker.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","reducers/filter.js","middleware/index.js","index.js"],"names":["users","catherinegregory","id","name","avatarURL","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","edwincarr","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","danoliver","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","_ref","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","Object","objectSpread","defineProperty","concat","saveQuestionAnswer","_ref3","_ref2","qid","answer","_saveQuestionAnswer","RECEIVE_QUESTIONS","RETRIEVE_NEW_QUESTION","SAVE_QUESTION_ANSWER","RETRIEVE_FILTERED_QUESTIONS","receiveQuestions","type","handleRetrieveNewQuestion","dispatch","retrieveNewQuestion","handleRetrieveFilteredQuestions","filter","retrieveFilteredQuestions","handleQuestionAnswer","setQuestionAnswer","catch","e","console","warn","handleNewQuestion","then","SET_FILTER","handleFilterChange","_ref$id","arguments","length","undefined","setFilter","SET_AUTHED_USER","setAuthedUser","Navigation","state","anchorEl","filterTexts","handleLogoutClick","_this","props","handleClick","event","setState","currentTarget","handleClose","_this$props","history","push","_this2","this","_this$props2","classes","react_default","a","createElement","className","root","index_es","position","navBar","react_router_dom","to","replace","menuButton","color","grow","aria-owns","aria-haspopup","onClick","open","Boolean","onClose","map","key","disabled","hint","variant","gutterBottom","alt","src","avatar","react_fontawesome_index_es","icon","faSignOutAlt","Component","StyledNavigation","withStyles","theme","marginLeft","marginRight","textDecoration","maxHeight","float","flexGrow","maxWidth","whiteSpace","withRouter","connect","createMuiTheme","palette","overrides","MuiToolbar","regular","&&","minHeight","height","MuiBottomNavigation","bottom","left","right","typography","useNextVariants","styles","main","flex","width","padding","choseThisOption","backgroundColor","secondary","optionButton","textTransform","optionButtonVoted","chartContainer","chart","Option","renderPieChart","opposite","votesThisOption","totalVotes","percent","round","item","xs","align","dist_default","data","title","value","primary","animate","label","labelStyle","fill","contrastText","totalValue","option","includes","hasVoted","container","classNames","answerContainer","StyledOption","navHeight","questionContainer","marginBottom","Question","match","params","getPreviousQuestion","filteredQuestions","questionArray","currentId","indexOf","getNextQuestion","justify","alignItems","_questions$question","previousQuestion","nextQuestion","react","components_Option","assign","showLabels","component","Link","faArrowLeft","faArrowRight","StyledQuestion","CurrentQuestion","componentDidMount","currentQuestion","react_router","NewQuestion","updateOption","prevState","submit","_this$state","spacing","required","fullWidth","autoComplete","onChange","target","withRouterNewQuestion","StyledNewQuestion","margin","Leaderboard","renderListItem","user","getAnsweredQuestions","getAskedQuestions","getSortedUsers","sortedUsers","keys","sort","b","getUserScore","sum","Login","handleLoginClick","handleLogin","renderUser","entries","slicedToArray","StyledLogin","RECEIVE_USERS","handleInitialData","all","receiveUsers","App","loggedIn","CssBaseline_default","components_Navigation","exact","path","views_Login","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","error","combineReducers","action","sortedQuestions","toConsumableArray","composeWithDevTools","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","es","views_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oSAAIA,EAAQ,CACRC,iBAAkB,CACdC,GAAI,mBACJC,KAAM,oBACNC,UAAW,mDACXC,QAAS,CACLC,yBAA0B,YAC1BC,uBAAwB,YACxBC,uBAAwB,YACxBC,sBAAuB,aAE3BC,UAAW,CAAC,yBAA0B,2BAE1CC,UAAW,CACPT,GAAI,YACJC,KAAM,aACNC,UAAW,iDACXC,QAAS,CACLO,sBAAuB,YACvBC,uBAAwB,aAE5BH,UAAW,CAAC,wBAAyB,0BAEzCI,UAAW,CACPZ,GAAI,YACJC,KAAM,aACNC,UAAW,iDACXC,QAAS,CACLQ,uBAAwB,YACxBD,sBAAuB,YACvBL,uBAAwB,aAE5BG,UAAW,CAAC,uBAAwB,4BAIxCA,EAAY,CACZJ,yBAA0B,CACtBJ,GAAI,yBACJa,OAAQ,mBACRC,UAAW,cACXC,UAAW,CACPC,MAAO,CAAC,oBACRC,KAAM,mCAEVC,UAAW,CACPF,MAAO,GACPC,KAAM,mCAGdZ,uBAAwB,CACpBL,GAAI,uBACJa,OAAQ,YACRC,UAAW,cACXC,UAAW,CACPC,MAAO,GACPC,KAAM,sBAEVC,UAAW,CACPF,MAAO,CAAC,YAAa,oBACrBC,KAAM,0BAGdX,uBAAwB,CACpBN,GAAI,yBACJa,OAAQ,mBACRC,UAAW,cACXC,UAAW,CACPC,MAAO,GACPC,KAAM,kBAEVC,UAAW,CACPF,MAAO,CAAC,oBACRC,KAAM,kBAGdV,sBAAuB,CACnBP,GAAI,wBACJa,OAAQ,YACRC,UAAW,cACXC,UAAW,CACPC,MAAO,GACPC,KAAM,4BAEVC,UAAW,CACPF,MAAO,CAAC,oBACRC,KAAM,4BAGdP,sBAAuB,CACnBV,GAAI,wBACJa,OAAQ,YACRC,UAAW,cACXC,UAAW,CACPC,MAAO,CAAC,aACRC,KAAM,qBAEVC,UAAW,CACPF,MAAO,CAAC,aACRC,KAAM,oCAGdN,uBAAwB,CACpBX,GAAI,yBACJa,OAAQ,YACRC,UAAW,cACXC,UAAW,CACPC,MAAO,CAAC,aACRC,KAAM,oBAEVC,UAAW,CACPF,MAAO,CAAC,aACRC,KAAM,iBA4CX,SAASE,EAAcC,GAC1B,OAAO,IAAIC,QAAQ,SAACC,EAAKC,GACrB,IAAMC,EAAaJ,EAASP,OACtBY,EAnBd,SAAAC,GAAkE,IAAxCC,EAAwCD,EAAxCC,cAAeC,EAAyBF,EAAzBE,cAAef,EAAUa,EAAVb,OACpD,MAAO,CACHb,GAvBA6B,KAAKC,SACAC,SAAS,IACTC,UAAU,EAAG,IAClBH,KAAKC,SACAC,SAAS,IACTC,UAAU,EAAG,IAmBlBlB,UAAWmB,KAAKC,MAChBrB,SACAE,UAAW,CACPC,MAAO,GACPC,KAAMU,GAEVT,UAAW,CACPF,MAAO,GACPC,KAAMW,IAQgBO,CAAef,GAEzCgB,WAAW,WACP5B,EAAS6B,OAAAC,EAAA,EAAAD,CAAA,GACF7B,EADE6B,OAAAE,EAAA,EAAAF,CAAA,GAEJZ,EAAkBzB,GAAKyB,IAG5B3B,EAAKuC,OAAAC,EAAA,EAAAD,CAAA,GACEvC,EADFuC,OAAAE,EAAA,EAAAF,CAAA,GAEAb,EAFAa,OAAAC,EAAA,EAAAD,CAAA,GAGMvC,EAAM0B,GAHZ,CAIGhB,UAAWV,EAAM0B,GAAYhB,UAAUgC,OAAO,CAACf,EAAkBzB,SAIzEsB,EAAIG,IACL,OCnKJ,SAASgB,EAATC,GACH,ODsKG,SAAAC,GAA0D,IAA3BnB,EAA2BmB,EAA3BnB,WAAYoB,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,OACnD,OAAO,IAAIxB,QAAQ,SAACC,EAAKC,GACrBa,WAAW,WACPtC,EAAKuC,OAAAC,EAAA,EAAAD,CAAA,GACEvC,EADFuC,OAAAE,EAAA,EAAAF,CAAA,GAEAb,EAFAa,OAAAC,EAAA,EAAAD,CAAA,GAGMvC,EAAM0B,GAHZ,CAIGrB,QAAQkC,OAAAC,EAAA,EAAAD,CAAA,GACDvC,EAAM0B,GAAYrB,QADlBkC,OAAAE,EAAA,EAAAF,CAAA,GAEFO,EAAMC,QAKnBrC,EAAS6B,OAAAC,EAAA,EAAAD,CAAA,GACF7B,EADE6B,OAAAE,EAAA,EAAAF,CAAA,GAEJO,EAFIP,OAAAC,EAAA,EAAAD,CAAA,GAGE7B,EAAUoC,GAHZP,OAAAE,EAAA,EAAAF,CAAA,GAIAQ,EAJAR,OAAAC,EAAA,EAAAD,CAAA,GAKM7B,EAAUoC,GAAKC,GALrB,CAMG7B,MAAOR,EAAUoC,GAAKC,GAAQ7B,MAAMwB,OAAO,CAAChB,UAKxDF,KACD,OChMAwB,CAAoB,CAAEtB,WAD+BkB,EAA3BlB,WACQoB,IADmBF,EAAfE,IACCC,OADcH,EAAVG,SCX/C,IAAME,EAAoB,oBACpBC,EAAwB,wBACxBC,EAAuB,uBACvBC,EAA8B,8BAEpC,SAASC,EAAiB3C,GAC7B,MAAO,CACH4C,KAAML,EACNvC,aAWD,SAAS6C,EAA0B7B,GACtC,OAAO,SAAA8B,GACHA,EATD,SAA6B9B,GAChC,MAAO,CACH4B,KAAMJ,EACNxB,cAMS+B,CAAoB/B,KAa9B,SAASgC,EAAgChD,EAAWiD,EAAQjC,GAC/D,OAAO,SAAA8B,GACHA,EAXD,SAAmC9C,EAAWiD,EAAQjC,GACzD,MAAO,CACH4B,KAAMF,EACN1C,YACAiD,SACAjC,cAMSkC,CAA0BlD,EAAWiD,EAAQjC,KAqBvD,SAASmC,EAAThB,GAA2D,IAA3BnB,EAA2BmB,EAA3BnB,WAAYoB,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,OACpD,OAAO,SAAAS,GAGH,OAFAA,EApBD,SAAA5B,GAAwD,IAA3BF,EAA2BE,EAA3BF,WAAYoB,EAAelB,EAAfkB,IAAKC,EAAUnB,EAAVmB,OACjD,MAAO,CACHO,KAAMH,EACNzB,aACAoB,MACAC,UAeSe,CAAkB,CAAEpC,WAAYA,EAAWxB,GAAI4C,MAAKC,YAEtDJ,EAAmB,CAAEjB,WAAYA,EAAWxB,GAAI4C,MAAKC,WAAUgB,MAAM,SAAAC,GACxEC,QAAQC,KAAK,kCAAmCF,MAarD,SAASG,EAATvB,GAA6D,IAAhC3B,EAAgC2B,EAAhC3B,UAAWG,EAAqBwB,EAArBxB,UAAWL,EAAU6B,EAAV7B,OACtD,OAAO,SAAAyC,GACH,ODtEqBlC,ECsED,CAAEO,cAAeZ,EAAWa,cAAeV,EAAWL,UDrEvEM,EAAcC,ICsEZyC,MAAM,SAAAC,GACHC,QAAQC,KAAK,+BAAgCF,KAEhDI,KAAK,SAAAzC,GACF6B,EAASH,EAAiBd,OAAAE,EAAA,EAAAF,CAAA,GAAGZ,EAAkBzB,GAAtBqC,OAAAC,EAAA,EAAAD,CAAA,GAAgCZ,QD3ElE,IAAsBL,GEPtB,IAAM+C,EAAa,aASnB,SAASC,EAAT1C,GAA+D,IAAA2C,EAAA3C,EAAjC1B,UAAiC,IAAAqE,EAA5B,EAA4BA,EAAzB7D,EAAyBkB,EAAzBlB,UAAWgB,EAAcE,EAAdF,WACpD,OAAO,SAAA8B,GACHA,EATD,WAA2B,IAARtD,EAAQsE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAC3B,MAAO,CACHlB,KAAMe,EACNnE,MAMSyE,CAAUzE,IACnBsD,EAASE,EAAgChD,EAAWR,EAAIwB,KCZzD,IAAMkD,EAAkB,kBAExB,SAASC,IAAyB,IAAX3E,EAAWsE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAC/B,MAAO,CACHlB,KAAMsB,EACN1E,0BCgCF4E,6MACFC,MAAQ,CACJC,SAAU,QAGdC,YAAc,CAAC,gBAAiB,aAAc,cAO9CC,kBAAoB,YAGhB1B,EAFqB2B,EAAKC,MAAlB5B,UDjCL,SAAAA,GACHA,EAASqB,UC0CbQ,YAAc,SAAAC,GACVH,EAAKI,SAAS,CAAEP,SAAUM,EAAME,mBAQpCC,YAAc,SAAAvF,GAAM,IAAAwF,EACqCP,EAAKC,MAAlD5B,EADQkC,EACRlC,SAAUmC,EADFD,EACEC,QAASjF,EADXgF,EACWhF,UAAWgB,EADtBgE,EACsBhE,WACtCyD,EAAKI,SAAS,CAAEP,SAAU,OAEN,kBAAP9E,GACTsD,EAASc,EAAmB,CAAEpE,KAAIQ,YAAWgB,gBAUjDiE,EAAQC,KAAK,8EAGR,IAAAC,EAAAC,KAAAC,EAC0CD,KAAKV,MAA5CY,EADHD,EACGC,QAAStE,EADZqE,EACYrE,WAAY1B,EADxB+F,EACwB/F,MAAO2D,EAD/BoC,EAC+BpC,OAC5BqB,EAAac,KAAKf,MAAlBC,SAEF5E,EAAYJ,EAAM0B,EAAWxB,IAAIE,UAEvC,OACI6F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,MACpBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,SAAS,UACbN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASF,UAAWJ,EAAQQ,QACxBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,IAAIC,SAAO,EAACP,UAAWJ,EAAQY,YACpCX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAd,sBAEJZ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,OAAOC,SAAO,EAACP,UAAWJ,EAAQY,YACvCX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAd,iBAEJZ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,eAAeC,SAAO,EAACP,UAAWJ,EAAQY,YAC/CX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAd,gBAEJZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQc,OACxBb,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIS,YAAW/B,EAAW,mBAAgBN,EACtCsC,gBAAc,OACdC,QAASnB,KAAKT,YACde,UAAWJ,EAAQY,YAElBd,KAAKb,YAAYtB,IAAWmC,KAAKb,YAAY,IAElDgB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIpG,GAAG,cACH8E,SAAUA,EACVkC,KAAMC,QAAQnC,GACdoC,QAAStB,KAAKL,aAEbK,KAAKb,YAAYoC,IAAI,SAAClG,EAAMjB,GAAP,OAClB+F,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAUW,QAAS,kBAAMpB,EAAKJ,YAAYvF,IAAKoH,IAAKnG,GAC/CA,KAGT8E,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAUiB,UAAQ,GACdtB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIF,UAAWJ,EAAQwB,KACnBC,QAAQ,QACRC,cAAY,GAHhB,6IAWRzB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,IAAIC,SAAO,EAACP,UAAWJ,EAAQY,YACpCX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAWnF,EAAWxB,IACpC+F,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQqB,IAAI,SAASC,IAAKxH,EAAWgG,UAAWJ,EAAQ6B,UAE5D5B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,UAAUI,QAAS,kBAAMpB,EAAKX,sBACxCe,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAiBC,KAAMC,kBA3G9BC,aA8HzB,IAAMC,EAAmBC,qBAzJV,SAAAC,GAAK,MAAK,CACrBxB,WAAY,CACRyB,YAAa,GACbC,YAAa,GACbC,eAAgB,OAChB1B,MAAO,QACP2B,UAAW,QAEfX,OAAQ,CACJW,UAAW,OACXC,MAAO,SAEX3B,KAAM,CACF4B,SAAU,GAEdlB,KAAM,CACFmB,SAAU,OACVC,WAAY,cAwIKT,CAAmBrD,GAE7B+D,cAAWC,YAX1B,SAAAlH,GACI,MAAO,CACH5B,MAF2D4B,EAAxC5B,MAGnB0B,WAH2DE,EAAjCF,WAI1BiC,OAJ2D/B,EAArB+B,OAKtCjD,UAL2DkB,EAAblB,YAW5BoI,CAAyBZ,sCCnKtCE,EAAQW,yBAAe,CAChCC,QAAS,CACL1F,KAAM,QAEV2F,UAAW,CACPC,WAAY,CACRC,QAAS,CACLC,KAAM,CACFC,UAAS,GAAA3G,OAVJ,GAUI,MACT4G,OAAM,GAAA5G,OAXD,GAWC,MACN8F,UAAS,GAAA9F,OAZJ,GAYI,SAIrB6G,oBAAqB,CACjBlD,KAAM,CACFgD,UAAS,GAAA3G,OAlBA,GAkBA,MACT4G,OAAM,GAAA5G,OAnBG,GAmBH,MACN8F,UAAS,GAAA9F,OApBA,GAoBA,MACT6D,SAAU,WACViD,OAAQ,EACRC,KAAM,EACNC,MAAO,KAInBC,WAAY,CAAEC,iBAAiB,KCrB7BC,EAAS,CACXC,KAAM,CACFC,KAAM,WACNC,MAAO,MACPV,OAAM,OACNW,QAAS,OAEbC,gBAAiB,CACbC,gBAAiB/B,EAAMY,QAAQoB,UAAUN,MAE7CO,aAAc,CACVf,OAAQ,OACRU,MAAO,OACPM,cAAe,QAEnBC,kBAAmB,CACfjB,OAAQ,MACRU,MAAO,OACPM,cAAe,QAEnBE,eAAgB,CACZhC,UAAW,OAEfiC,MAAO,CAEH9B,SAAU,SAWZ+B,6MA6CFC,eAAiB,WAAM,IAAAjF,EACkBP,EAAKC,MAAlCY,EADWN,EACXM,QAAS9E,EADEwE,EACFxE,MAAO0J,EADLlF,EACKkF,SAElBC,EAAkB3J,EAAMuD,OAExBqG,EADsBF,EAAS1J,MAAMuD,OACFoG,EACnCE,EAAUhJ,KAAKiJ,MAAOH,EAAkBC,EAAc,KAE5D,OACI7E,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM2E,MAAI,EAACC,GAAI,GAAI9E,UAAWJ,EAAQwE,eAAgBW,MAAM,UACxDlF,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CACIE,UAAWJ,EAAQyE,MACnBY,KAAM,CACF,CACIC,MAAO,cACPC,MAAOV,EACPhE,MAAOuB,EAAMY,QAAQwC,QAAQ1B,OAGrC2B,SAAO,EACPC,OAAK,EACLC,WAAY,CACRC,KAAMxD,EAAMY,QAAQwC,QAAQK,cAEhCC,WAAYhB,IAEhB7E,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYmB,QAAQ,SAASsD,EAA7B,+EAtEH,IAAAhF,EASDD,KAAKV,MAPLY,EAFCD,EAEDC,QACAtE,EAHCqE,EAGDrE,WACAP,EAJC4E,EAID5E,KACAD,EALC6E,EAKD7E,MACA6K,EANChG,EAMDgG,OACAlI,EAPCkC,EAODlC,qBACA+G,EARC7E,EAQD6E,SAGEV,EAAkBhJ,EAAM8K,SAAStK,EAAWxB,IAC5C+L,EAAWrB,EAAS1J,MAAM8K,SAAStK,EAAWxB,KAAOgK,EAE3D,OACIjE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACI4F,WAAS,EACT9F,UAAW+F,IACPnG,EAAQ8D,KACRI,EAAkBlE,EAAQkE,gBAAkB,OAGhDjE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIF,UAAW6F,EAAWjG,EAAQuE,kBAAoBvE,EAAQqE,aAC1D9C,SAAU0E,EACVd,MAAM,SACNlE,QAAS,kBAAMpD,EAAqBkI,KAEpC9F,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4F,WAAS,GACXjG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM2E,MAAI,EAACC,GAAI,GAAI9E,UAAWJ,EAAQoG,iBAClCnG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYmB,QAAQ,MAAMtG,MAIrC8K,EAAWnG,KAAK6E,iBAAmB,aAnC/B1C,aA+ENoE,EAFMlE,qBAAW0B,EAAX1B,CAAmBuC,GCrGlCb,EAAS,CACXC,KAAM,CAEFR,OAAM,eAAA5G,OAAiB4J,IAAjB,QAEVP,OAAQ,CACJhC,KAAM,WACNC,MAAO,MACPV,OAAM,QAEViD,kBAAmB,CACfvC,MAAO,OACPC,QAAS,MACTX,OAAM,GAAA5G,OFhCW,GEgCX,OAEVqF,KAAM,CACFyE,aAAc,OAElB3E,OAAQ,CACJ2E,aAAc,MACdlD,OAAQ,OACRU,MAAO,SAWTyC,6MACF5I,qBAAuB,SAAAkI,GAAU,IAAArG,EACWP,EAAKC,OAG7C5B,EAJ6BkC,EACrBlC,UAGCK,EAAqB,CAAEnC,WAJHgE,EACXhE,WAG0BoB,IAJf4C,EACCgH,MACHC,OAAnBrL,SAEmDyB,OAAQgJ,QAQvEa,oBAAsB,SAACtL,EAAUZ,EAAWmM,GACxC,IAAMC,EAAgBD,EAChBE,EAAYD,EAAcE,QAAQH,EAAkBvL,IAC1D,OAAIyL,GAAa,EAENrM,EAAUY,GAAUpB,GAExB4M,EAAcC,EAAY,GAAG7M,MAQxC+M,gBAAkB,SAAC3L,EAAUZ,EAAWmM,GACpC,IAAMC,EAAgBD,EAChBE,EAAYD,EAAcE,QAAQtM,EAAUY,IAClD,OAAIyL,GAAaD,EAAcrI,OAAS,EAE7B/D,EAAUY,GAAUpB,GAExB4M,EAAcC,EAAY,GAAG7M,4EAG/B,IAAA6F,EAC4DD,KAAKV,MAA9DY,EADHD,EACGC,QAAStE,EADZqE,EACYrE,WAAYgL,EADxB3G,EACwB2G,MAAO1M,EAD/B+F,EAC+B/F,MAAO6M,EADtC9G,EACsC8G,kBACnCvL,EAAaoL,EAAMC,OAAnBrL,SACAZ,EAAcoF,KAAKV,MAAM1E,UAAzBA,UAER,IAAKY,IAAaZ,IAAcA,EAAUY,KAAcuL,EACpD,OACI5G,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4F,WAAS,EAACgB,QAAQ,SAASC,WAAW,SAAS/G,UAAWJ,EAAQ8D,MACpE7D,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYmB,QAAQ,MAApB,uBACAxB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYmB,QAAQ,SAApB,mEACqEnG,EADrE,8BAIA2E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,KACLT,EAAAC,EAAAC,cAACG,EAAA,EAAD,wBAdX,IAAA8G,EAoBoC1M,EAAUY,GAA3CP,EApBHqM,EAoBGrM,OAAQE,EApBXmM,EAoBWnM,UAAWG,EApBtBgM,EAoBsBhM,UAErBiM,EAAmBvH,KAAK8G,oBAAoBtL,EAAUZ,GACtD4M,EAAexH,KAAKmH,gBAAgB3L,EAAUZ,GAEpD,OACIuF,EAAAC,EAAAC,cAACoH,EAAA,SAAD,KACItH,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQuG,mBACpBtG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYmB,QAAQ,KAAK0D,MAAM,UAA/B,wBAIJlF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4F,WAAS,EAAC9F,UAAWJ,EAAQ8D,MAC/B7D,EAAAC,EAAAC,cAACqH,EAADjL,OAAAkL,OAAA,GACQxM,EADR,CAEI8K,OAAO,YACPlI,qBAAsBiC,KAAKjC,qBAC3BnC,WAAYA,EACZkJ,SAAUxJ,KAEd6E,EAAAC,EAAAC,cAACqH,EAADjL,OAAAkL,OAAA,GACQrM,EADR,CAEI2K,OAAO,YACPlI,qBAAsBiC,KAAKjC,qBAC3BnC,WAAYA,EACZkJ,SAAU3J,MAGlBgF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAkBoH,YAAU,GACxBzH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqH,UAAWC,IACXlH,GAAE,cAAAhE,OAAgB2K,GAClB3B,MAAM,WACN3D,KAAM9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAiBC,KAAM8F,IAAazH,UAAWJ,EAAQ+B,OAC7DR,SAAU8F,IAAqB/L,IAEnC2E,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqH,UAAWC,IACXlH,GAAE,eACFgF,MAAO3K,EACPgH,KACI9B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqB,IAAI,SACJC,IAAK5H,EAAMe,GAAQX,UACnBgG,UAAWJ,EAAQ6B,WAI/B5B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqH,UAAWC,IACXlH,GAAE,cAAAhE,OAAgB4K,GAClB5B,MAAM,OACN3D,KAAM9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAiBC,KAAM+F,IAAc1H,UAAWJ,EAAQ+B,OAC9DR,SAAU+F,IAAiBhM,aA/G5B2G,aAiIvB,IAAM8F,GAAiB5F,qBAAW0B,EAAX1B,CAAmBsE,GAE3B3D,eAZf,SAAAlH,GACI,MAAO,CACHF,WAF8EE,EAA3DF,WAGnBhB,UAH8EkB,EAA/ClB,UAI/BmM,kBAJ8EjL,EAApCiL,kBAK1ClJ,OAL8E/B,EAAjB+B,OAM7D3D,MAN8E4B,EAAT5B,QAY9D8I,CAAyBiF,ICxKlCC,8MACFC,kBAAoB,WACY9I,EAAKC,MAAM1E,UAA/BwN,iBAGJ/I,EAAK1B,yBAIbA,oBAAsB,WAAM,IAAAiC,EACSP,EAAKC,OAEtC5B,EAHwBkC,EAChBlC,UAECD,EAHemC,EACNhE,sFAKb,IACGwM,EAAoBpI,KAAKV,MAAM1E,UAA/BwN,gBAER,OAAKA,EAQEjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAUzH,GAAE,aAAAhE,OAAewL,KAN1BjI,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4F,WAAS,EAACgB,QAAQ,SAASC,WAAW,UACxClH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYmB,QAAQ,MAApB,+BArBUQ,aAqCfa,mBAPf,SAAAlH,GACI,MAAO,CACHF,WAF4CE,EAAzBF,WAGnBhB,UAH4CkB,EAAblB,YAOxBoI,CAAyBkF,ICxBlCI,8MACFrJ,MAAQ,CACJ9D,UAAW,GACXG,UAAW,MASfiN,aAAe,SAACtC,EAAQ5K,GACpBgE,EAAKI,SAAS,SAAA+I,GACV,OAAO/L,OAAAC,EAAA,EAAAD,CAAA,GAAK+L,EAAZ/L,OAAAE,EAAA,EAAAF,CAAA,GAAwBwJ,EAAS5K,SAUzCoN,OAAS,WAAM,IAAAC,EACsBrJ,EAAKJ,MAA9B9D,EADGuN,EACHvN,UAAWG,EADRoN,EACQpN,UADRsE,EAEsBP,EAAKC,MAA9B1D,EAFGgE,EAEHhE,YACR8B,EAHWkC,EAESlC,UACXW,EAAkB,CAAElD,YAAWG,YAAWL,OAAQW,EAAWxB,MAEtEiF,EAAKC,MAAMO,QAAQC,KAAK,8EAGnB,IAAAC,EAAAC,KACGE,EAAYF,KAAKV,MAAjBY,QACR,OACIC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4F,WAAS,EAACgB,QAAQ,SAASuB,QAAS,GAAIrI,UAAWJ,EAAQ8D,MAC7D7D,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM2E,MAAI,EAACC,GAAI,IACXjF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYmB,QAAQ,KAAK0D,MAAM,UAA/B,wBAKJlF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM2E,MAAI,EAACC,GAAI,IACXjF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIoI,UAAQ,EACRxO,GAAG,YACHC,KAAK,YACLuL,MAAM,WACNiD,WAAS,EACTC,aAAa,YACbC,SAAU,SAAA7K,GAAC,OAAI6B,EAAKwI,aAAa,YAAarK,EAAE8K,OAAOvD,QACvDA,MAAOzF,KAAKf,MAAM9D,aAG1BgF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM2E,MAAI,EAACC,GAAI,IACXjF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIoI,UAAQ,EACRxO,GAAG,YACHC,KAAK,YACLuL,MAAM,WACNiD,WAAS,EACTC,aAAa,YACbC,SAAU,SAAA7K,GAAC,OAAI6B,EAAKwI,aAAa,YAAarK,EAAE8K,OAAOvD,QACvDA,MAAOzF,KAAKf,MAAM3D,aAG1B6E,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM2E,MAAI,EAACC,GAAI,IACXjF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQW,QAAS,SAAAjD,GAAC,OAAI6B,EAAK0I,WAA3B,mBAnEMtG,aAgF1B,IAAM8G,GAAwBlG,YAAWuF,IAEnCY,GAAoB7G,qBArGX,CACX2B,KAAM,CACFE,MAAO,OACPiF,OAAQ,IAkGU9G,CAAmB4G,IAE9BjG,eAVf,SAAAlH,GACI,MAAO,CACHF,WAFiCE,EAAdF,aAUZoH,CAAyBkG,IC7FlCE,8MAgBFC,eAAiB,SAAAC,GACb,OACInJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAU6G,WAAW,aAAa7F,IAAK8H,EAAKlP,IACxC+F,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQqB,IAAKyH,EAAKjP,KAAMyH,IAAKwH,EAAKhP,aAEtC6F,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIkF,QAAS4D,EAAKjP,KACdiK,UACInE,EAAAC,EAAAC,cAACoH,EAAA,SAAD,KACItH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYqH,UAAU,QAAtB,GAAAjL,OACQyC,EAAKkK,qBAAqBD,GADlC,wBAGAnJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYqH,UAAU,QAAtB,GAAAjL,OACQyC,EAAKmK,kBAAkBF,GAD/B,4BAexBG,eAAiB,SAAAvP,GACb,IAAIwP,EAAc,GAElB,OADAjN,OAAOkN,KAAKzP,GAAOqH,IAAI,SAAAnH,GAAE,OAAIsP,EAAY5J,KAAK5F,EAAME,MAC7CsP,EAAYE,KAAK,SAACxJ,EAAGyJ,GAAJ,OAAUxK,EAAKyK,aAAaD,GAAKxK,EAAKyK,aAAa1J,QAQ/E0J,aAAe,SAAAR,GACX,IAAIS,EAAM,EAGV,OAFAA,GAAO1K,EAAKmK,kBAAkBF,GAC9BS,GAAO1K,EAAKkK,qBAAqBD,MASrCC,qBAAuB,SAAAD,GACnB,OAAO7M,OAAOkN,KAAKL,EAAK/O,SAASoE,UAQrC6K,kBAAoB,SAAAF,GAChB,OAAOA,EAAK1O,UAAU+D,gFA5EjB,IAAAoB,EAAAC,KACG9F,EAAU8F,KAAKV,MAAfpF,MACFwP,EAAc1J,KAAKyJ,eAAevP,GACxC,OACIiG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4F,WAAS,EAACgB,QAAQ,UACpBjH,EAAAC,EAAAC,cAACG,EAAA,EAAD,KAAOkJ,EAAYnI,IAAI,SAAA+H,GAAI,OAAIvJ,EAAKsJ,eAAeC,cANzCnH,aAuFXa,mBANf,SAAAlH,GACI,MAAO,CACH5B,MAF4B4B,EAAT5B,QAMZ8I,CAAyBoG,IChFlCY,8MACFC,iBAAmB,SAAA7P,GAAM,IAAAwF,EACWP,EAAKC,OAErC5B,EAHqBkC,EACblC,URlBT,SAAqBtD,EAAIQ,GAC5B,OAAO,SAAA8C,GACHA,EAASqB,EAAc3E,IACvBsD,EAASc,EAAmB,CAAE5D,YAAWgB,WAAYxB,MQiB5C8P,CAAY9P,EAHAwF,EACHhF,UAEiBA,eA2BvCuP,WAAa,SAAAb,GAAQ,IACTlP,EAAOkP,EAAPlP,GACA8F,EAAYb,EAAKC,MAAjBY,QACR,OACIC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM2E,MAAI,EAAC3D,IAAKpH,GACZ+F,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQW,QAAS,kBAAM9B,EAAK4K,iBAAiB7P,KACzC+F,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQqB,IAAKyH,EAAKjP,KAAMyH,IAAKwH,EAAKhP,UAAWgG,UAAWJ,EAAQ6B,SAChE5B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAY6E,MAAM,UAAUiE,EAAKjP,iFA/BxC,IAAA0F,EAAAC,KAAAC,EACsBD,KAAKV,MAAxBpF,EADH+F,EACG/F,MAAOgG,EADVD,EACUC,QAEf,OAAKhG,EASDiG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACI4F,WAAS,EACTgB,QAAQ,SACRC,WAAW,SACX/G,UAAWJ,EAAQ8D,KACnB2E,QAAS,IAERlM,OAAO2N,QAAQlQ,GAAOqH,IAAI,SAAAzF,GAAA,IAAAiB,EAAAN,OAAA4N,EAAA,EAAA5N,CAAAX,EAAA,GAAMwN,GAANvM,EAAA,GAAAA,EAAA,WAAgBgD,EAAKoK,WAAWb,MAd3DnJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4F,WAAS,EAACgB,QAAQ,SAASC,WAAW,SAAS/G,UAAWJ,EAAQ8D,MACpE7D,EAAAC,EAAAC,cAACG,EAAA,EAAD,iCAbA2B,aAoDpB,IAAMmI,GAAcjI,qBAvEL,CACX2B,KAAM,CACFR,OAAQ,QACRX,SAAU,SAEdd,OAAQ,CACJoH,OAAQ,GACRjF,MAAO,IACPV,OAAQ,MA+DInB,CAAmB2H,IAExBhH,eATf,SAAAlG,GACI,MAAO,CACH5C,MAFuC4C,EAApB5C,MAGnBU,UAHuCkC,EAAblC,YASnBoI,CAAyBsH,ICjF3BC,GAAgB,gBCWtB,SAASC,KACZ,OAAO,SAAA9M,GACH,ObVGjC,QAAQgP,IAAI,CD8HZ,IAAIhP,QAAQ,SAACC,EAAKC,GACrBa,WAAW,kBAAMd,EAAIe,OAAAC,EAAA,EAAAD,CAAA,GAAKvC,KAAU,OAKjC,IAAIuB,QAAQ,SAACC,EAAKC,GACrBa,WAAW,kBAAMd,EAAIe,OAAAC,EAAA,EAAAD,CAAA,GAAK7B,KAAc,SCrIO0D,KAAK,SAAAxC,GAAA,IAAAiB,EAAAN,OAAA4N,EAAA,EAAA5N,CAAAX,EAAA,SAAyB,CAC7E5B,MADoD6C,EAAA,GAEpDnC,UAFoDmC,EAAA,MaU5BuB,KAAK,SAAAxC,GAA0B,IAAvB5B,EAAuB4B,EAAvB5B,MAAOU,EAAgBkB,EAAhBlB,UACnC8C,EDZL,SAAsBxD,GACzB,MAAO,CACHsD,KAAM+M,GACNrQ,SCSawQ,CAAaxQ,IACtBwD,EAASH,EAAiB3C,WCUhC+P,+LAEE3K,KAAKV,MAAM5B,SAAS8M,uCAGf,IACG5O,EAAeoE,KAAKV,MAApB1D,WACFgP,EAAiD,IAAtCnO,OAAO2N,QAAQxO,GAAY+C,QAAgB/C,EAAWxB,GAEvE,OACI+F,EAAAC,EAAAC,cAAC0D,EAAA,iBAAD,CAAkBzB,MAAOA,GACrBnC,EAAAC,EAAAC,cAACwK,EAAAzK,EAAD,MACCwK,EACGzK,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACIR,EAAAC,EAAAC,cAACyK,EAAD,MACA3K,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KACIlI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAO0C,OAAK,EAACC,KAAK,IAAInD,UAAWK,KACjC/H,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAO2C,KAAK,OAAOnD,UAAWS,KAC9BnI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAO2C,KAAK,eAAenD,UAAWuB,KACtCjJ,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAO2C,KAAK,uBAAuBnD,UAAWlB,OAItDxG,EAAAC,EAAAC,cAAC4K,GAAD,cAvBF9I,aAoCHa,mBANf,SAAAlH,GACI,MAAO,CACHF,WAFiCE,EAAdF,aAMZoH,CAAyB2H,ICjDlCO,GAAc7J,QACW,cAA7B8J,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzE,MACvB,2DAsCN,SAAS0E,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTjN,KAAK,SAAAsN,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7M,QACfwM,UAAUC,cAAcO,YAI1B9N,QAAQ+N,IACN,iHAKEV,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlBzN,QAAQ+N,IAAI,sCAGRV,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,UAO5B3N,MAAM,SAAAoO,GACLlO,QAAQkO,MAAM,4CAA6CA,2BCzFlDC,8BAAgB,CAC3B1Q,WCNW,WAAwB,IAAvBqD,EAAuBP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6N,EAAW7N,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQ2N,EAAO/O,MACX,KAAKsB,EACD,OAAOrC,OAAAC,EAAA,EAAAD,CAAA,GACAwC,EADP,CAEI7E,GAAImS,EAAOnS,KAEnB,QACI,OAAO6E,IDDf/E,MENW,WAAwB,IAAvB+E,EAAuBP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6N,EAAW7N,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQ2N,EAAO/O,MACX,KAAK+M,GACD,OAAOgC,EAAOrS,MAClB,KAAKmD,EAAL,IACYzB,EAA4B2Q,EAA5B3Q,WAAYoB,EAAgBuP,EAAhBvP,IAAKC,EAAWsP,EAAXtP,OAEzB,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAwC,EADPxC,OAAAE,EAAA,EAAAF,CAAA,GAEKb,EAFLa,OAAAC,EAAA,EAAAD,CAAA,GAGWwC,EAAMrD,GAHjB,CAIQrB,QAAQkC,OAAAC,EAAA,EAAAD,CAAA,GACDwC,EAAMrD,GAAYrB,QADlBkC,OAAAE,EAAA,EAAAF,CAAA,GAEFO,EAAMC,QAIvB,QACI,OAAOgC,IFXfrE,UGHW,WAAwB,IAAvBqE,EAAuBP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6N,EAAW7N,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQ2N,EAAO/O,MACX,KAAKL,EACD,OAAOV,OAAAC,EAAA,EAAAD,CAAA,GACAwC,EADP,CAEIrE,UAAU6B,OAAAC,EAAA,EAAAD,CAAA,GACHwC,EAAMrE,UACN2R,EAAO3R,aAGtB,KAAKwC,EACD,IAAK,IAAMoE,KAAOvC,EAAMrE,UAAW,CAC/B,IAAMY,EAAWyD,EAAMrE,UAAU4G,GAE3BpG,EAAQI,EAASL,UAAUC,MAAMwB,OAAOpB,EAASF,UAAUF,OAE7D+K,GAAW,EACf,IAAK,IAAM3E,KAAOpG,EACVA,EAAMoG,KAAS+K,EAAO3Q,WAAWxB,KACjC+L,GAAW,GAGnB,IAAKA,EACD,OAAO1J,OAAAC,EAAA,EAAAD,CAAA,GACAwC,EADP,CAEImJ,gBAAiB5G,IAI7B,OAAO/E,OAAAC,EAAA,EAAAD,CAAA,GACAwC,EADP,CAEImJ,gBAAiB,OAEzB,KAAK9K,EAA6B,IACtB1C,EAAkC2R,EAAlC3R,UAAWiD,EAAuB0O,EAAvB1O,OAAQjC,EAAe2Q,EAAf3Q,WACvB4Q,EAAkB,GACtB,IAAK,IAAMhR,KAAYZ,EAAW,CAC9B,IAAMQ,EAAK,GAAAwB,OAAAH,OAAAgQ,GAAA,EAAAhQ,CACJ7B,EAAUY,GAAUL,UAAUC,OAD1BqB,OAAAgQ,GAAA,EAAAhQ,CAEJ7B,EAAUY,GAAUF,UAAUF,QAGrC,OAAQyC,GACJ,KAAK,EAED2O,EAAgB1M,KAAKlF,EAAUY,IAC/B,MACJ,KAAK,EAEGJ,EAAM8K,SAAStK,EAAWxB,KAC1BoS,EAAgB1M,KAAKlF,EAAUY,IAEnC,MACJ,QAESJ,EAAM8K,SAAStK,EAAWxB,KAC3BoS,EAAgB1M,KAAKlF,EAAUY,KAQ/C,OAHAgR,EAAgB5C,KAAK,SAACxJ,EAAGyJ,GACrB,OAAOA,EAAE3O,UAAYkF,EAAElF,YAEpBsR,EAEX,KAAKnP,EAAL,IACYzB,EAA4B2Q,EAA5B3Q,WAAYoB,EAAgBuP,EAAhBvP,IAAKC,EAAWsP,EAAXtP,OAEnBrC,EAAS6B,OAAAC,EAAA,EAAAD,CAAA,GACRwC,EAAMrE,UADE6B,OAAAE,EAAA,EAAAF,CAAA,GAEVO,EAFUP,OAAAC,EAAA,EAAAD,CAAA,GAGJwC,EAAMrE,UAAUoC,GAHZP,OAAAE,EAAA,EAAAF,CAAA,GAINQ,EAJMR,OAAAC,EAAA,EAAAD,CAAA,GAKAwC,EAAMrE,UAAUoC,GAAKC,GALrB,CAMH7B,MAAO6D,EAAMrE,UAAUoC,GAAKC,GAAQ7B,MAAMwB,OAAO,CAAChB,UAI9D,OAAOa,OAAAC,EAAA,EAAAD,CAAA,GACAwC,EADP,CAEIrE,UAAU6B,OAAAC,EAAA,EAAAD,CAAA,GAAM7B,KAExB,QACI,OAAOqE,IHhFfpB,OITW,WAAwB,IAAvBoB,EAAuBP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6N,EAAW7N,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQ2N,EAAO/O,MACX,KAAKe,EACD,OAAOgO,EAAOnS,GAClB,QACI,OAAO6E,0BCHJyN,kCAAoBC,2BAAgBC,OCM7CC,GAAQC,uBAAYC,GAASC,IAEnCC,IAASC,OACL/M,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAUN,MAAOA,IACb1M,EAAAC,EAAAC,cAAC+M,GAAD,OAEJC,SAASC,eAAe,SPMrB,SAAkB9B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI8B,IAAIC,oBAAwBrC,OAAOC,SAASqC,MACpDC,SAAWvC,OAAOC,SAASsC,OAIvC,OAGFvC,OAAOwC,iBAAiB,OAAQ,WAC9B,IAAMpC,EAAK,GAAA3O,OAAM4Q,oBAAN,sBAEPtC,IAgEV,SAAiCK,EAAOC,GAEtCoC,MAAMrC,GACHjN,KAAK,SAAAuP,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAY5G,QAAQ,cAG5CuE,UAAUC,cAAcwC,MAAM5P,KAAK,SAAAsN,GACjCA,EAAauC,aAAa7P,KAAK,WAC7B6M,OAAOC,SAASgD,aAKpB9C,GAAgBC,EAAOC,KAG1BvN,MAAM,WACLE,QAAQ+N,IACN,mEArFAmC,CAAwB9C,EAAOC,GAI/BC,UAAUC,cAAcwC,MAAM5P,KAAK,WACjCH,QAAQ+N,IACN,gHAMJZ,GAAgBC,EAAOC,MO5B/BE","file":"static/js/main.4fca3429.chunk.js","sourcesContent":["let users = {\r\n    catherinegregory: {\r\n        id: 'catherinegregory',\r\n        name: 'Catherine Gregory',\r\n        avatarURL: 'https://randomuser.me/api/portraits/women/82.jpg',\r\n        answers: {\r\n            '8xf0y6ziyjabvozdd253nd': 'optionOne',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n            am8ehyc8byjqgar0jgpub9: 'optionTwo',\r\n            loxhs1bqm25b708cmbf3g: 'optionTwo',\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9'],\r\n    },\r\n    edwincarr: {\r\n        id: 'edwincarr',\r\n        name: 'Edwin Carr',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/36.jpg',\r\n        answers: {\r\n            vthrdm985a262al8qx3do: 'optionOne',\r\n            xj352vofupe1dqz9emx13r: 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    danoliver: {\r\n        id: 'danoliver',\r\n        name: 'Dan Oliver',\r\n        avatarURL: 'https://randomuser.me/api/portraits/men/24.jpg',\r\n        answers: {\r\n            xj352vofupe1dqz9emx13r: 'optionOne',\r\n            vthrdm985a262al8qx3do: 'optionTwo',\r\n            '6ni6ok3ym7mf1p33lnez': 'optionTwo',\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    },\r\n}\r\n\r\nlet questions = {\r\n    '8xf0y6ziyjabvozdd253nd': {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'catherinegregory',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['catherinegregory'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory',\r\n        },\r\n    },\r\n    '6ni6ok3ym7mf1p33lnez': {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'danoliver',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver', 'catherinegregory'],\r\n            text: 'become a supervillain',\r\n        },\r\n    },\r\n    am8ehyc8byjqgar0jgpub9: {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'catherinegregory',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be telepathic',\r\n        },\r\n    },\r\n    loxhs1bqm25b708cmbf3g: {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'edwincarr',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['catherinegregory'],\r\n            text: 'be a back-end developer',\r\n        },\r\n    },\r\n    vthrdm985a262al8qx3do: {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'edwincarr',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['edwincarr'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['danoliver'],\r\n            text: 'have your best friend find $500',\r\n        },\r\n    },\r\n    xj352vofupe1dqz9emx13r: {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'danoliver',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['danoliver'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['edwincarr'],\r\n            text: 'write Swift',\r\n        },\r\n    },\r\n}\r\n\r\nfunction generateUID() {\r\n    return (\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15) +\r\n        Math.random()\r\n            .toString(36)\r\n            .substring(2, 15)\r\n    )\r\n}\r\n\r\nexport function _getUsers() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...users }), 1000)\r\n    })\r\n}\r\n\r\nexport function _getQuestions() {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => res({ ...questions }), 1000)\r\n    })\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n    return {\r\n        id: generateUID(),\r\n        timestamp: Date.now(),\r\n        author,\r\n        optionOne: {\r\n            votes: [],\r\n            text: optionOneText,\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: optionTwoText,\r\n        },\r\n    }\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n    return new Promise((res, rej) => {\r\n        const authedUser = question.author\r\n        const formattedQuestion = formatQuestion(question)\r\n\r\n        setTimeout(() => {\r\n            questions = {\r\n                ...questions,\r\n                [formattedQuestion.id]: formattedQuestion,\r\n            }\r\n\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n                },\r\n            }\r\n\r\n            res(formattedQuestion)\r\n        }, 1000)\r\n    })\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(() => {\r\n            users = {\r\n                ...users,\r\n                [authedUser]: {\r\n                    ...users[authedUser],\r\n                    answers: {\r\n                        ...users[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n\r\n            questions = {\r\n                ...questions,\r\n                [qid]: {\r\n                    ...questions[qid],\r\n                    [answer]: {\r\n                        ...questions[qid][answer],\r\n                        votes: questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n\r\n            res()\r\n        }, 500)\r\n    })\r\n}\r\n","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from './_DATA.js'\r\n\r\nexport function getInitialData() {\r\n    return Promise.all([_getUsers(), _getQuestions()]).then(([users, questions]) => ({\r\n        users,\r\n        questions,\r\n    }))\r\n}\r\n\r\nexport function saveQuestion(question) {\r\n    return _saveQuestion(question)\r\n}\r\n\r\nexport function saveQuestionAnswer({ authedUser, qid, answer }) {\r\n    return _saveQuestionAnswer({ authedUser, qid, answer })\r\n}\r\n","import { saveQuestionAnswer, saveQuestion } from '../helpers/api'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const RETRIEVE_NEW_QUESTION = 'RETRIEVE_NEW_QUESTION'\r\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER'\r\nexport const RETRIEVE_FILTERED_QUESTIONS = 'RETRIEVE_FILTERED_QUESTIONS'\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport function retrieveNewQuestion(authedUser) {\r\n    return {\r\n        type: RETRIEVE_NEW_QUESTION,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport function handleRetrieveNewQuestion(authedUser) {\r\n    return dispatch => {\r\n        dispatch(retrieveNewQuestion(authedUser))\r\n    }\r\n}\r\n\r\nexport function retrieveFilteredQuestions(questions, filter, authedUser) {\r\n    return {\r\n        type: RETRIEVE_FILTERED_QUESTIONS,\r\n        questions,\r\n        filter,\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport function handleRetrieveFilteredQuestions(questions, filter, authedUser) {\r\n    return dispatch => {\r\n        dispatch(retrieveFilteredQuestions(questions, filter, authedUser))\r\n    }\r\n}\r\nexport function setQuestionAnswer({ authedUser, qid, answer }) {\r\n    return {\r\n        type: SAVE_QUESTION_ANSWER,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n    }\r\n}\r\n\r\n/**\r\n * Executed when the user submits a new answer that should be saved.\r\n * The data is saved in the store and in the backend.\r\n *\r\n * @export\r\n * @param {Object} { authedUser, qid, answer } The currently logged in user,\r\n *                  the question's id and either \"optionOne\" or \"optionTwo\".\r\n * @returns Undefined\r\n */\r\nexport function handleQuestionAnswer({ authedUser, qid, answer }) {\r\n    return dispatch => {\r\n        dispatch(setQuestionAnswer({ authedUser: authedUser.id, qid, answer }))\r\n\r\n        return saveQuestionAnswer({ authedUser: authedUser.id, qid, answer }).catch(e => {\r\n            console.warn('Error in handleQuestionAnswer: ', e)\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Executed when the user submits a new question that should be saved.\r\n * The data is saved in the store and in the backend.\r\n *\r\n * @export\r\n * @param {Object} { optionOne, optionTwo, author } The question's data.\r\n * @returns Undefined\r\n */\r\nexport function handleNewQuestion({ optionOne, optionTwo, author }) {\r\n    return dispatch => {\r\n        return saveQuestion({ optionOneText: optionOne, optionTwoText: optionTwo, author })\r\n            .catch(e => {\r\n                console.warn('Error in handleNewQuestion: ', e)\r\n            })\r\n            .then(formattedQuestion => {\r\n                dispatch(receiveQuestions({ [formattedQuestion.id]: { ...formattedQuestion } }))\r\n            })\r\n    }\r\n}\r\n","import { handleRetrieveFilteredQuestions } from './questions'\r\n\r\nexport const SET_FILTER = 'SET_FILTER'\r\n\r\nexport function setFilter(id = 1) {\r\n    return {\r\n        type: SET_FILTER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleFilterChange({ id = 1, questions, authedUser }) {\r\n    return dispatch => {\r\n        dispatch(setFilter(id))\r\n        dispatch(handleRetrieveFilteredQuestions(questions, id, authedUser))\r\n    }\r\n}\r\n","import { handleFilterChange } from './filter'\r\n\r\nexport const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id = null) {\r\n    return {\r\n        type: SET_AUTHED_USER,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function handleLogin(id, questions) {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser(id))\r\n        dispatch(handleFilterChange({ questions, authedUser: id }))\r\n    }\r\n}\r\n\r\nexport function handleLogout() {\r\n    return dispatch => {\r\n        dispatch(setAuthedUser())\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar, Avatar, Menu, MenuItem, Typography } from '@material-ui/core'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { handleLogout } from '../actions/authedUser'\r\nimport { handleFilterChange } from '../actions/filter'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = theme => ({\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        maxHeight: '100%',\r\n    },\r\n    avatar: {\r\n        maxHeight: '100%',\r\n        float: 'right',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    hint: {\r\n        maxWidth: '100%',\r\n        whiteSpace: 'pre-wrap',\r\n    },\r\n})\r\n\r\n/**\r\n * This element represents the top navigation of the application.\r\n *\r\n * @class Navigation\r\n * @extends {Component}\r\n */\r\nclass Navigation extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    }\r\n\r\n    filterTexts = ['All questions', 'Unanswered', 'Answered']\r\n\r\n    /**\r\n     * This function is triggered when the logout button is clicked.\r\n     *\r\n     * @memberof Navigation\r\n     */\r\n    handleLogoutClick = () => {\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(handleLogout())\r\n    }\r\n\r\n    /**\r\n     * This function is triggered when the filter button is clicked.\r\n     *\r\n     * @memberof Navigation\r\n     */\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget })\r\n    }\r\n\r\n    /**\r\n     * This function is triggered when the filter button is closed.\r\n     *\r\n     * @memberof Navigation\r\n     */\r\n    handleClose = id => {\r\n        const { dispatch, history, questions, authedUser } = this.props\r\n        this.setState({ anchorEl: null })\r\n        // The parameter is an object if the user doesn't click an option.\r\n        if (!(typeof id === 'object')) {\r\n            dispatch(handleFilterChange({ id, questions, authedUser }))\r\n        }\r\n\r\n        // Should we redirect after the filter has changed?\r\n        // I'd say no, since that's not the expected behaviour and the Navbar is global,\r\n        // so the user might change the filter in the leaderboard\r\n        // and suddenly be redirected to the question page.\r\n\r\n        // However, since the project wasn't accepted with this approach,\r\n        // Here's a simple redirect.\r\n        history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser, users, filter } = this.props\r\n        const { anchorEl } = this.state\r\n\r\n        const avatarURL = users[authedUser.id].avatarURL\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar className={classes.navBar}>\r\n                            <Link to=\"/\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Would You Rather?</Button>\r\n                            </Link>\r\n                            <Link to=\"/new\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">New Question</Button>\r\n                            </Link>\r\n                            <Link to=\"/leaderboard\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Leaderboard</Button>\r\n                            </Link>\r\n                            <div className={classes.grow} />\r\n                            <Button\r\n                                aria-owns={anchorEl ? 'filter-menu' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleClick}\r\n                                className={classes.menuButton}\r\n                            >\r\n                                {this.filterTexts[filter] || this.filterTexts[1]}\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"filter-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={this.handleClose}\r\n                            >\r\n                                {this.filterTexts.map((text, id) => (\r\n                                    <MenuItem onClick={() => this.handleClose(id)} key={text}>\r\n                                        {text}\r\n                                    </MenuItem>\r\n                                ))}\r\n                                <MenuItem disabled>\r\n                                    <Typography\r\n                                        className={classes.hint}\r\n                                        variant=\"body1\"\r\n                                        gutterBottom\r\n                                    >\r\n                                        Use this menu to change your navigation options. Note that\r\n                                        the currently selected question is not affected, only the\r\n                                        bottom navigation.\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                            <Link to=\"/\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">{authedUser.id}</Button>\r\n                                <Avatar alt=\"avatar\" src={avatarURL} className={classes.avatar} />\r\n                            </Link>\r\n                            <Button color=\"inherit\" onClick={() => this.handleLogoutClick()}>\r\n                                <FontAwesomeIcon icon={faSignOutAlt} />\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users, authedUser, filter, questions }) {\r\n    return {\r\n        users,\r\n        authedUser,\r\n        filter,\r\n        questions,\r\n    }\r\n}\r\n\r\nconst StyledNavigation = withStyles(styles)(Navigation)\r\n\r\nexport default withRouter(connect(mapStateToProps)(StyledNavigation))\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport const navHeight = 56\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    overrides: {\r\n        MuiToolbar: {\r\n            regular: {\r\n                '&&': {\r\n                    minHeight: `${navHeight}px`,\r\n                    height: `${navHeight}px`,\r\n                    maxHeight: `${navHeight}px`,\r\n                },\r\n            },\r\n        },\r\n        MuiBottomNavigation: {\r\n            root: {\r\n                minHeight: `${navHeight}px`,\r\n                height: `${navHeight}px`,\r\n                maxHeight: `${navHeight}px`,\r\n                position: 'absolute',\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n            },\r\n        },\r\n    },\r\n    typography: { useNextVariants: true },\r\n})\r\n","import React, { Component } from 'react'\r\n\r\nimport classNames from 'classnames'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Button, Grid } from '@material-ui/core'\r\n\r\nimport PieChart from 'react-minimal-pie-chart'\r\nimport { theme } from '../helpers/theme'\r\n\r\nconst styles = {\r\n    main: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n        padding: '5px',\r\n    },\r\n    choseThisOption: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    optionButton: {\r\n        height: '100%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    optionButtonVoted: {\r\n        height: '50%',\r\n        width: '100%',\r\n        textTransform: 'none',\r\n    },\r\n    chartContainer: {\r\n        maxHeight: '50%',\r\n    },\r\n    chart: {\r\n        // Limit the chart's width and height, otherwise the chart might go through the bottom of the viewport.\r\n        maxWidth: '20vh',\r\n    },\r\n}\r\n\r\n/**\r\n * This component represents a half of the currently displayed question.\r\n * This half contains an option text and, if answered, shows some data.\r\n *\r\n * @class Option\r\n * @extends {Component}\r\n */\r\nclass Option extends Component {\r\n    render() {\r\n        const {\r\n            classes,\r\n            authedUser,\r\n            text,\r\n            votes,\r\n            option,\r\n            handleQuestionAnswer,\r\n            opposite,\r\n        } = this.props\r\n\r\n        const choseThisOption = votes.includes(authedUser.id)\r\n        const hasVoted = opposite.votes.includes(authedUser.id) || choseThisOption\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                className={classNames(\r\n                    classes.main,\r\n                    choseThisOption ? classes.choseThisOption : null\r\n                )}\r\n            >\r\n                <Button\r\n                    className={hasVoted ? classes.optionButtonVoted : classes.optionButton}\r\n                    disabled={hasVoted}\r\n                    align=\"center\"\r\n                    onClick={() => handleQuestionAnswer(option)}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12} className={classes.answerContainer}>\r\n                            <Typography variant=\"h3\">{text}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Button>\r\n                {hasVoted ? this.renderPieChart() : null}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * This function examines the question's data and displays it in a nice way.\r\n     *\r\n     * @memberof Option\r\n     */\r\n    renderPieChart = () => {\r\n        const { classes, votes, opposite } = this.props\r\n\r\n        const votesThisOption = votes.length\r\n        const votesOppositeOption = opposite.votes.length\r\n        const totalVotes = votesOppositeOption + votesThisOption\r\n        const percent = Math.round((votesThisOption / totalVotes) * 100)\r\n\r\n        return (\r\n            <Grid item xs={12} className={classes.chartContainer} align=\"center\">\r\n                <PieChart\r\n                    className={classes.chart}\r\n                    data={[\r\n                        {\r\n                            title: 'This option',\r\n                            value: votesThisOption,\r\n                            color: theme.palette.primary.main,\r\n                        },\r\n                    ]}\r\n                    animate\r\n                    label\r\n                    labelStyle={{\r\n                        fill: theme.palette.primary.contrastText,\r\n                    }}\r\n                    totalValue={totalVotes}\r\n                />\r\n                <Typography variant=\"body1\">{percent}%</Typography>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledOption = withStyles(styles)(Option)\r\n\r\nexport default StyledOption\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { handleQuestionAnswer } from '../actions/questions'\r\n\r\nimport Option from '../components/Option'\r\n\r\nimport { navHeight } from '../helpers/theme'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Grid,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = {\r\n    main: {\r\n        // The height of the two navbars and the heading is 3xnavHeight\r\n        height: `calc(100% - ${navHeight * 3}px)`,\r\n    },\r\n    option: {\r\n        flex: '1 0 auto',\r\n        width: '50%',\r\n        height: `100%`,\r\n    },\r\n    questionContainer: {\r\n        width: '100%',\r\n        padding: '5px',\r\n        height: `${navHeight}px`,\r\n    },\r\n    icon: {\r\n        marginBottom: '5px',\r\n    },\r\n    avatar: {\r\n        marginBottom: '5px',\r\n        height: '20px',\r\n        width: '20px',\r\n    },\r\n}\r\n\r\n/**\r\n * This view renders a question and its data.\r\n * The prop \"match.params.question\" is the ID of the question that should be rendered (so the question is in the URL).\r\n *\r\n * @class Question\r\n * @extends {Component}\r\n */\r\nclass Question extends Component {\r\n    handleQuestionAnswer = option => {\r\n        const { dispatch, authedUser, match } = this.props\r\n        const { question } = match.params\r\n\r\n        dispatch(handleQuestionAnswer({ authedUser, qid: question, answer: option }))\r\n    }\r\n\r\n    /**\r\n     * Returns the question before this one or the current question if this is the first question in the stack.\r\n     *\r\n     * @memberof Question\r\n     */\r\n    getPreviousQuestion = (question, questions, filteredQuestions) => {\r\n        const questionArray = filteredQuestions\r\n        const currentId = questionArray.indexOf(filteredQuestions[question])\r\n        if (currentId <= 0) {\r\n            // Link to current question\r\n            return questions[question].id\r\n        }\r\n        return questionArray[currentId - 1].id\r\n    }\r\n\r\n    /**\r\n     * Returns the question after this one or the current question if this is the last question in the stack.\r\n     *\r\n     * @memberof Question\r\n     */\r\n    getNextQuestion = (question, questions, filteredQuestions) => {\r\n        const questionArray = filteredQuestions\r\n        const currentId = questionArray.indexOf(questions[question])\r\n        if (currentId >= questionArray.length - 1) {\r\n            // Link to current question\r\n            return questions[question].id\r\n        }\r\n        return questionArray[currentId + 1].id\r\n    }\r\n\r\n    render() {\r\n        const { classes, authedUser, match, users, filteredQuestions } = this.props\r\n        const { question } = match.params\r\n        const { questions } = this.props.questions\r\n\r\n        if (!question || !questions || !questions[question] || !filteredQuestions) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography variant=\"h1\">Loading question...</Typography>\r\n                    <Typography variant=\"body1\">\r\n                        If this text stays up long enough for you to read it, question \"{question}\"\r\n                        probably doesn't exist.\r\n                    </Typography>\r\n                    <Link to=\"/\">\r\n                        <Button>Take me back!</Button>\r\n                    </Link>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        const { author, optionOne, optionTwo } = questions[question]\r\n\r\n        const previousQuestion = this.getPreviousQuestion(question, questions)\r\n        const nextQuestion = this.getNextQuestion(question, questions)\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.questionContainer}>\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                        Would you rather...\r\n                    </Typography>\r\n                </div>\r\n                <Grid container className={classes.main}>\r\n                    <Option\r\n                        {...optionOne}\r\n                        option=\"optionOne\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionTwo}\r\n                    />\r\n                    <Option\r\n                        {...optionTwo}\r\n                        option=\"optionTwo\"\r\n                        handleQuestionAnswer={this.handleQuestionAnswer}\r\n                        authedUser={authedUser}\r\n                        opposite={optionOne}\r\n                    />\r\n                </Grid>\r\n                <BottomNavigation showLabels>\r\n                    <BottomNavigationAction\r\n                        component={Link}\r\n                        to={`/questions/${previousQuestion}`}\r\n                        label=\"Previous\"\r\n                        icon={<FontAwesomeIcon icon={faArrowLeft} className={classes.icon} />}\r\n                        disabled={previousQuestion === question}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        component={Link}\r\n                        to={`/leaderboard`}\r\n                        label={author}\r\n                        icon={\r\n                            <Avatar\r\n                                alt=\"avatar\"\r\n                                src={users[author].avatarURL}\r\n                                className={classes.avatar}\r\n                            />\r\n                        }\r\n                    />\r\n                    <BottomNavigationAction\r\n                        component={Link}\r\n                        to={`/questions/${nextQuestion}`}\r\n                        label=\"Next\"\r\n                        icon={<FontAwesomeIcon icon={faArrowRight} className={classes.icon} />}\r\n                        disabled={nextQuestion === question}\r\n                    />\r\n                </BottomNavigation>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, filteredQuestions, filter, users }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n        filteredQuestions,\r\n        filter,\r\n        users,\r\n    }\r\n}\r\n\r\nconst StyledQuestion = withStyles(styles)(Question)\r\n\r\nexport default connect(mapStateToProps)(StyledQuestion)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveNewQuestion } from '../actions/questions'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\n/**\r\n * This helper view retrieves the current logged in user's question.\r\n * This question should be the first unanswered one.\r\n * It's basically just a redirect.\r\n *\r\n * @class CurrentQuestion\r\n * @extends {Component}\r\n */\r\nclass CurrentQuestion extends Component {\r\n    componentDidMount = () => {\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            this.retrieveNewQuestion()\r\n        }\r\n    }\r\n\r\n    retrieveNewQuestion = () => {\r\n        const { dispatch, authedUser } = this.props\r\n\r\n        dispatch(handleRetrieveNewQuestion(authedUser))\r\n    }\r\n\r\n    render() {\r\n        const { currentQuestion } = this.props.questions\r\n\r\n        if (!currentQuestion) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Typography variant=\"h1\">Loading question...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return <Redirect to={`questions/${currentQuestion}`} />\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions }) {\r\n    return {\r\n        authedUser,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CurrentQuestion)\r\n","import React, { Component } from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { handleNewQuestion } from '../actions/questions'\r\n\r\nimport { Grid, TextField, Typography, Button } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = {\r\n    main: {\r\n        width: '100%',\r\n        margin: 0,\r\n    },\r\n}\r\n\r\n/**\r\n * This form allows the user to create a new question.\r\n * Workflow:\r\n * - User creates question\r\n * - User submits question\r\n * - User is redirected to CurrentQuestion\r\n * - Question is saved in the backend\r\n * - Question is saved in the redux store\r\n *\r\n * @class NewQuestion\r\n * @extends {Component}\r\n */\r\nclass NewQuestion extends Component {\r\n    state = {\r\n        optionOne: '',\r\n        optionTwo: '',\r\n    }\r\n\r\n    /**\r\n     * Triggered when the user types something.\r\n     * This updates the state and in turn updates the value of the given input field.\r\n     *\r\n     * @memberof NewQuestion\r\n     */\r\n    updateOption = (option, text) => {\r\n        this.setState(prevState => {\r\n            return { ...prevState, [option]: text }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Triggered when the \"Submit\" button is clicked.\r\n     * The workflow is noted in the class description.\r\n     *\r\n     * @memberof NewQuestion\r\n     */\r\n    submit = () => {\r\n        const { optionOne, optionTwo } = this.state\r\n        const { authedUser, dispatch } = this.props\r\n        dispatch(handleNewQuestion({ optionOne, optionTwo, author: authedUser.id }))\r\n        // Redirect to main page\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <Grid container justify=\"center\" spacing={24} className={classes.main}>\r\n                <Grid item xs={10}>\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                        Would you rather...\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={10}>\r\n                    <TextField\r\n                        required\r\n                        id=\"optionOne\"\r\n                        name=\"optionOne\"\r\n                        label=\"Option 1\"\r\n                        fullWidth\r\n                        autoComplete=\"optionOne\"\r\n                        onChange={e => this.updateOption('optionOne', e.target.value)}\r\n                        value={this.state.optionOne}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <TextField\r\n                        required\r\n                        id=\"optionTwo\"\r\n                        name=\"optionTwo\"\r\n                        label=\"Option 2\"\r\n                        fullWidth\r\n                        autoComplete=\"optionTwo\"\r\n                        onChange={e => this.updateOption('optionTwo', e.target.value)}\r\n                        value={this.state.optionTwo}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <Button onClick={e => this.submit()}>Submit</Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    }\r\n}\r\n\r\nconst withRouterNewQuestion = withRouter(NewQuestion)\r\n\r\nconst StyledNewQuestion = withStyles(styles)(withRouterNewQuestion)\r\n\r\nexport default connect(mapStateToProps)(StyledNewQuestion)\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    Avatar,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\n/**\r\n * This view simply displays the user's stats.\r\n * All users are ordered by the sum of their questions and answers.\r\n *\r\n * @class Leaderboard\r\n * @extends {Component}\r\n */\r\nclass Leaderboard extends Component {\r\n    render() {\r\n        const { users } = this.props\r\n        const sortedUsers = this.getSortedUsers(users)\r\n        return (\r\n            <Grid container justify=\"center\">\r\n                <List>{sortedUsers.map(user => this.renderListItem(user))}</List>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * This function renders the stats of a single user.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    renderListItem = user => {\r\n        return (\r\n            <ListItem alignItems=\"flex-start\" key={user.id}>\r\n                <ListItemAvatar>\r\n                    <Avatar alt={user.name} src={user.avatarURL} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={user.name}\r\n                    secondary={\r\n                        <Fragment>\r\n                            <Typography component=\"span\">\r\n                                {`${this.getAnsweredQuestions(user)} questions answered`}\r\n                            </Typography>\r\n                            <Typography component=\"span\">\r\n                                {`${this.getAskedQuestions(user)} questions asked`}\r\n                            </Typography>\r\n                        </Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Sorts the user array by the sum of their questions and answers.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    getSortedUsers = users => {\r\n        let sortedUsers = []\r\n        Object.keys(users).map(id => sortedUsers.push(users[id]))\r\n        return sortedUsers.sort((a, b) => this.getUserScore(b) - this.getUserScore(a))\r\n    }\r\n\r\n    /**\r\n     * Adds up the user's questions and answers.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    getUserScore = user => {\r\n        let sum = 0\r\n        sum += this.getAskedQuestions(user)\r\n        sum += this.getAnsweredQuestions(user)\r\n        return sum\r\n    }\r\n\r\n    /**\r\n     * Counts how many questions this user has answered.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    getAnsweredQuestions = user => {\r\n        return Object.keys(user.answers).length\r\n    }\r\n\r\n    /**\r\n     * Counts how many questions this user has asked.\r\n     *\r\n     * @memberof Leaderboard\r\n     */\r\n    getAskedQuestions = user => {\r\n        return user.questions.length\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Button, Avatar, Grid } from '@material-ui/core'\r\n\r\nimport { handleLogin } from '../actions/authedUser'\r\n\r\nconst styles = {\r\n    main: {\r\n        height: '100vh',\r\n        maxWidth: '100vw',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n}\r\n\r\n/**\r\n * This container allows the user to select from a list of users.\r\n * This selection will be stored in the store.\r\n *\r\n * @class Login\r\n * @extends {Component}\r\n */\r\nclass Login extends Component {\r\n    handleLoginClick = id => {\r\n        const { dispatch, questions } = this.props\r\n\r\n        dispatch(handleLogin(id, questions.questions))\r\n    }\r\n\r\n    render() {\r\n        const { users, classes } = this.props\r\n\r\n        if (!users) {\r\n            return (\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                    <Typography>Loading users...</Typography>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.main}\r\n                spacing={32}\r\n            >\r\n                {Object.entries(users).map(([id, user]) => this.renderUser(user))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    renderUser = user => {\r\n        const { id } = user\r\n        const { classes } = this.props\r\n        return (\r\n            <Grid item key={id}>\r\n                <Button onClick={() => this.handleLoginClick(id)}>\r\n                    <Avatar alt={user.name} src={user.avatarURL} className={classes.avatar} />\r\n                    <Typography align=\"center\">{user.name}</Typography>\r\n                </Button>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users, questions }) {\r\n    return {\r\n        users,\r\n        questions,\r\n    }\r\n}\r\n\r\nconst StyledLogin = withStyles(styles)(Login)\r\n\r\nexport default connect(mapStateToProps)(StyledLogin)\r\n","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n    }\r\n}\r\n","import { getInitialData } from '../helpers/api'\r\nimport { receiveUsers } from '../actions/users'\r\nimport { receiveQuestions } from '../actions/questions'\r\n\r\n/**\r\n * Dispatched when the app loads.\r\n * Fetches all of the question and user data.\r\n *\r\n * @export\r\n * @returns {Promise} This resolves when the user data is retrieved.\r\n */\r\nexport function handleInitialData() {\r\n    return dispatch => {\r\n        return getInitialData().then(({ users, questions }) => {\r\n            dispatch(receiveUsers(users))\r\n            dispatch(receiveQuestions(questions))\r\n        })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Navigation from '../components/Navigation'\r\n\r\nimport Question from './Question'\r\nimport CurrentQuestion from './CurrentQuestion'\r\nimport NewQuestion from './NewQuestion'\r\nimport Leaderboard from './Leaderboard'\r\nimport Login from './Login'\r\n\r\nimport { handleInitialData } from '../actions/shared'\r\nimport { theme } from '../helpers/theme'\r\n\r\n/**\r\n * The main app that contains the entire page.\r\n * This also contains the theme provider.\r\n * If the user is not logged in, we'll show the login page.\r\n *\r\n * @class App\r\n * @extends {Component}\r\n */\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(handleInitialData())\r\n    }\r\n\r\n    render() {\r\n        const { authedUser } = this.props\r\n        const loggedIn = Object.entries(authedUser).length !== 0 && authedUser.id\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                {loggedIn ? (\r\n                    <Router>\r\n                        <Navigation />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={CurrentQuestion} />\r\n                            <Route path=\"/new\" component={NewQuestion} />\r\n                            <Route path=\"/leaderboard\" component={Leaderboard} />\r\n                            <Route path=\"/questions/:question\" component={Question} />\r\n                        </Switch>\r\n                    </Router>\r\n                ) : (\r\n                    <Login />\r\n                )}\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        authedUser,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\nimport questions from './questions'\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n    filter,\r\n})\r\n","import { SET_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { RECEIVE_USERS } from '../actions/users'\r\nimport { SAVE_QUESTION_ANSWER } from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            return action.users\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n            // This is basically stolen from the _DATA.js code\r\n            return {\r\n                ...state,\r\n                [authedUser]: {\r\n                    ...state[authedUser],\r\n                    answers: {\r\n                        ...state[authedUser].answers,\r\n                        [qid]: answer,\r\n                    },\r\n                },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    RECEIVE_QUESTIONS,\r\n    RETRIEVE_NEW_QUESTION,\r\n    SAVE_QUESTION_ANSWER,\r\n    RETRIEVE_FILTERED_QUESTIONS,\r\n} from '../actions/questions'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                questions: {\r\n                    ...state.questions,\r\n                    ...action.questions,\r\n                },\r\n            }\r\n        case RETRIEVE_NEW_QUESTION:\r\n            for (const key in state.questions) {\r\n                const question = state.questions[key]\r\n                // Concatenate the two arrays to get all votes of the question\r\n                const votes = question.optionOne.votes.concat(question.optionTwo.votes)\r\n                // Find the first question where the user hasn't voted\r\n                let hasVoted = false\r\n                for (const key in votes) {\r\n                    if (votes[key] === action.authedUser.id) {\r\n                        hasVoted = true\r\n                    }\r\n                }\r\n                if (!hasVoted) {\r\n                    return {\r\n                        ...state,\r\n                        currentQuestion: key,\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                currentQuestion: null,\r\n            }\r\n        case RETRIEVE_FILTERED_QUESTIONS: {\r\n            const { questions, filter, authedUser } = action\r\n            let sortedQuestions = []\r\n            for (const question in questions) {\r\n                const votes = [\r\n                    ...questions[question].optionOne.votes,\r\n                    ...questions[question].optionTwo.votes,\r\n                ]\r\n\r\n                switch (filter) {\r\n                    case 0:\r\n                        // No filter\r\n                        sortedQuestions.push(questions[question])\r\n                        break\r\n                    case 2:\r\n                        // Answered only\r\n                        if (votes.includes(authedUser.id)) {\r\n                            sortedQuestions.push(questions[question])\r\n                        }\r\n                        break\r\n                    default:\r\n                        // Unanswered only\r\n                        if (!votes.includes(authedUser.id)) {\r\n                            sortedQuestions.push(questions[question])\r\n                        }\r\n                        break\r\n                }\r\n            }\r\n            sortedQuestions.sort((a, b) => {\r\n                return b.timestamp - a.timestamp\r\n            })\r\n            return sortedQuestions\r\n        }\r\n        case SAVE_QUESTION_ANSWER:\r\n            const { authedUser, qid, answer } = action\r\n\r\n            const questions = {\r\n                ...state.questions,\r\n                [qid]: {\r\n                    ...state.questions[qid],\r\n                    [answer]: {\r\n                        ...state.questions[qid][answer],\r\n                        votes: state.questions[qid][answer].votes.concat([authedUser]),\r\n                    },\r\n                },\r\n            }\r\n            return {\r\n                ...state,\r\n                questions: { ...questions },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { SET_FILTER } from '../actions/filter'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_FILTER:\r\n            return action.id\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default composeWithDevTools(applyMiddleware(thunk))\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './views/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reducer from './reducers'\r\nimport middleware from './middleware'\r\n\r\nconst store = createStore(reducer, middleware)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}