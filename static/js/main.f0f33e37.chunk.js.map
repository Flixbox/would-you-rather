{"version":3,"sources":["components/Navigation.js","views/Home.js","views/NewQuestion.js","views/Leaderboard.js","views/App.js","serviceWorker.js","actions/authedUser.js","reducers/authedUser.js","actions/users.js","reducers/index.js","reducers/users.js","index.js"],"names":["Navigation","classes","this","props","react_default","a","createElement","className","root","index_es","position","navBar","react_router_dom","to","replace","menuButton","color","Component","withStyles","grow","flexGrow","marginLeft","marginRight","textDecoration","Home","console","log","connect","_ref","user","users","NewQuestion","Leaderboard","theme","createMuiTheme","palette","type","typography","useNextVariants","App","styles","CssBaseline_default","components_Navigation","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","SET_AUTHED_USER","RECEIVE_USERS","combineReducers","authedUser","arguments","length","undefined","action","Object","objectSpread","id","store","createStore","reducer","ReactDOM","render","es","views_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oQAuBMA,mLACO,IACGC,EAAYC,KAAKC,MAAjBF,QAER,OACIG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,MACpBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,SAAS,UACbN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASF,UAAWN,EAAQU,QACxBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,IAAIC,SAAO,EAACP,UAAWN,EAAQc,YACpCX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAd,sBAEJZ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,OAAOC,SAAO,EAACP,UAAWN,EAAQc,YACvCX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAd,iBAEJZ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,eAAeC,SAAO,EAACP,UAAWN,EAAQc,YAC/CX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQO,MAAM,WAAd,2BAhBPC,aA0BVC,uBA5CA,CACXC,KAAM,CACFC,SAAU,GAEdL,WAAY,CACRM,YAAa,GACbC,YAAa,GACbC,eAAgB,OAChBP,MAAO,UAoCAE,CAAmBlB,WC9C5BwB,mLAGE,OADAC,QAAQC,IAAIxB,KAAKC,OACVC,EAAAC,EAAAC,cAAA,0BAHIW,aAcJU,kBAPf,SAAAC,GACI,MAAO,CACHC,KAFkCD,EAAfC,KAGnBC,MAHkCF,EAATE,QAOlBH,CAAyBH,GCfnBO,mLAEb,OAAO3B,EAAAC,EAAAC,cAAA,iCAF0BW,aCApBe,mLAEb,OAAO5B,EAAAC,EAAAC,cAAA,iCAF0BW,aCUnCgB,EAAQC,yBAAe,CACzBC,QAAS,CACLC,KAAM,QAEVC,WAAY,CAAEC,iBAAiB,KA2BpBC,MAjBf,WACI,OACInC,EAAAC,EAAAC,cAACkC,EAAA,iBAAD,CAAkBP,MAAOA,GACrB7B,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,MACAD,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACIR,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACIvC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtB,IACjCpB,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOE,KAAK,OAAOC,UAAWf,IAC9B3B,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWd,IACtC5B,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOG,UAAWtB,QCxBhCuB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BzC,QAAQC,IACN,iHAKE6B,GAAUA,EAAOY,UACnBZ,EAAOY,SAASP,KAMlBnC,QAAQC,IAAI,sCAGR6B,GAAUA,EAAOa,WACnBb,EAAOa,UAAUR,UAO5BS,MAAM,SAAAC,GACL7C,QAAQ6C,MAAM,4CAA6CA,yBChGpDC,EAAkB,kBCEhB,ICFFC,EAAgB,gBCKdC,kBAAgB,CAC3BC,WFJW,WAAwB,IAAvBT,EAAuBU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQC,EAAO1C,MACX,KAAKmC,EACD,OAAOQ,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEIgB,GAAIH,EAAOG,KAEnB,QACI,OAAOhB,IEHfnC,MCLW,WAAmC,IAApBmC,EAAoBU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAO1C,MACX,KAAKoC,EACD,OAAOO,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEInC,MAAOgD,EAAOhD,QAEtB,QACI,OAAOmC,MCAbiB,EAAQC,YAAYC,GAE1BC,IAASC,OACLlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAUL,MAAOA,GACb9E,EAAAC,EAAAC,cAACkF,EAAD,OAEJC,SAASC,eAAe,SNMrB,SAAkBnC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImC,IAAIC,oBAAwB3C,OAAOC,SAAS2C,MACpDC,SAAW7C,OAAOC,SAAS4C,OAIvC,OAGF7C,OAAO8C,iBAAiB,OAAQ,WAC9B,IAAMzC,EAAK,GAAA0C,OAAMJ,oBAAN,sBAEP7C,GAgEV,SAAiCO,EAAOC,GAEtC0C,MAAM3C,GACHK,KAAK,SAAAuC,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C/C,UAAUC,cAAc+C,MAAM7C,KAAK,SAAAC,GACjCA,EAAa6C,aAAa9C,KAAK,WAC7BV,OAAOC,SAASwD,aAKpBrD,EAAgBC,EAAOC,KAG1Bc,MAAM,WACL5C,QAAQC,IACN,mEArFAiF,CAAwBrD,EAAOC,GAI/BC,UAAUC,cAAc+C,MAAM7C,KAAK,WACjClC,QAAQC,IACN,gHAMJ2B,EAAgBC,EAAOC,MM5B/BE","file":"static/js/main.f0f33e37.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar, Typography } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = {\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n    },\r\n}\r\n\r\n/**\r\n * This element represents the top navigation of the application.\r\n *\r\n * @class Navigation\r\n * @extends {Component}\r\n */\r\nclass Navigation extends Component {\r\n    render() {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar className={classes.navBar}>\r\n                            <Link to=\"/\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Would You Rather?</Button>\r\n                            </Link>\r\n                            <Link to=\"/new\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">New Question</Button>\r\n                            </Link>\r\n                            <Link to=\"/leaderboard\" replace className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Leaderboard</Button>\r\n                            </Link>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navigation)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        console.log(this.props)\r\n        return <div>Home</div>\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ user, users }) {\r\n    return {\r\n        user,\r\n        users,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NewQuestion extends Component {\r\n    render() {\r\n        return <div>NewQuestion</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Leaderboard extends Component {\r\n    render() {\r\n        return <div>Leaderboard</div>\r\n    }\r\n}\r\n","import React from 'react'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nimport Navigation from '../components/Navigation'\n\nimport Home from './Home'\nimport NewQuestion from './NewQuestion'\nimport Leaderboard from './Leaderboard'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n    typography: { useNextVariants: true },\n})\n\n/**\n * The main app that contains the entire page.\n * This also contains the theme provider.\n *\n * @class App\n * @extends {Component}\n */\nfunction App() {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Router>\n                <Navigation />\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/new\" component={NewQuestion} />\n                    <Route path=\"/leaderboard\" component={Leaderboard} />\n                    <Route component={Home} />\n                </Switch>\n            </Router>\n        </MuiThemeProvider>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id) {\r\n    return {\r\n        type: SET_AUTHED_USER,\r\n        id,\r\n    }\r\n}\r\n","import { SET_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users,\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n})\r\n","import { RECEIVE_USERS } from '../actions/users'\r\n\r\nexport default function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './views/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\n// import middleware from './middleware'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}